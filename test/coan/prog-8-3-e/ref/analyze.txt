Statistics:

Number of lines: 35
Number of valid statements: 31
Number of comments: 4
Number of executable statements: 30

Complexity:

Comment density: 0.129
Comprehension effort: 87
McCabe complexity: 11
Halstead complexity:
 length: 101
 volume: 388.865
 difficulty: 14.733
 effort: 5729.276
 language: 1.791
 intelligence: 26.394
 time: 5.305

4 (0 2) PRINT "INPUT THE NUMBER OF SPACES DESIRED TO THE LEFT OF ZERO";
  Origs: :start
  Dests: 5:auto
5 (1 2) INPUT M
  Origs: 4:auto
  Dests: 6:auto
6 (0 2) PRINT
  Origs: 5:auto
  Dests: 8:auto
8 (0 2) PRINT "    ";
  Origs: 6:auto
  Dests: 10:auto
10 F(X:10) (1 4) FOR X = 0 TO 50 STEP 10
  Origs: 8:auto
  Dests: 12:fornext, 14:fornext
12 F(X:10) (0 3) PRINT "    "; X;
  Origs: 10:fornext
  Dests: 14:auto
14 F(X:10) (0 1) NEXT X
  Origs: 10:fornext, 12:auto
  Dests: 15:auto
15 (0 2) PRINT
  Origs: 14:auto
  Dests: 16:auto
16 F(X:16) (1 3) FOR X = 1 TO 70
  Origs: 15:auto
  Dests: 18:fornext, 26:fornext
18 F(X:16) (1 6) IF X / 10 = INT(X / 10) THEN 24
  Origs: 16:fornext
  Dests: 20:auto, 24:ifthen
20 F(X:16) (0 2) PRINT "-";
  Origs: 18:auto
  Dests: 22:auto
22 F(X:16) (0 2) GOTO 26
  Origs: 20:auto
  Dests: 26:goto
24 F(X:16) (0 2) PRINT "^";
  Origs: 18:ifthen
  Dests: 26:auto
26 F(X:16) (0 1) NEXT X
  Origs: 16:fornext, 22:goto, 24:auto
  Dests: 60:auto
30 FNQ(.) (0 3) DEF FNQ(X) = X ^ 2
  Origs: 
  Dests: 
60 F(X:60) (1 4) FOR X = -7 TO 7
  Origs: 26:auto
  Dests: 62:fornext, 240:fornext
62 F(X:60) (0 2) PRINT
  Origs: 60:fornext
  Dests: 90:auto
90 F(X:60,Y:90) (1 5) FOR Y = -M TO 70 - M
  Origs: 62:auto
  Dests: 92:fornext, 180:fornext
92 F(X:60,Y:90) (1 4) IF Y <> 0 THEN 120
  Origs: 90:fornext
  Dests: 94:auto, 120:ifthen
94 F(X:60,Y:90) (1 4) IF X = 0 THEN 98
  Origs: 92:auto
  Dests: 95:auto, 98:ifthen
95 F(X:60,Y:90) (0 2) PRINT "'";
  Origs: 94:auto
  Dests: 96:auto
96 F(X:60,Y:90) (0 2) GOTO 100
  Origs: 95:auto
  Dests: 100:goto
98 F(X:60,Y:90) (0 2) PRINT "0";
  Origs: 94:ifthen
  Dests: 100:auto
100 F(X:60,Y:90) (1 6) IF FNQ(X) > 0 THEN 180
  Origs: 96:goto, 98:auto
  Dests: 106:auto, 180:ifthen
102 (0 1) REM IF  FNQ(X) > 0 GO FIND WHERE IT IS
  Origs: 
  Dests: 
103 (0 1) REM OTHERWISE GET THE NEXT VALUE OF X
  Origs: 
  Dests: 
106 F(X:60,Y:90) (0 2) GOTO 240
  Origs: 100:auto
  Dests: 240:goto
120 F(X:60,Y:90) (1 6) IF Y = FNQ(X) THEN 210
  Origs: 92:ifthen
  Dests: 150:auto, 210:ifthen
148 (0 1) REM   IF Y DOES NOT EQUAL FNQ(X) THEN PRINT A BLANK SPACE
  Origs: 
  Dests: 
150 F(X:60,Y:90) (0 2) PRINT " ";
  Origs: 120:auto
  Dests: 180:auto
180 F(X:60,Y:90) (0 1) NEXT Y
  Origs: 90:fornext, 100:ifthen, 150:auto
  Dests: 210:auto
210 F(X:60,Y:90) (0 2) PRINT "*";
  Origs: 120:ifthen, 180:auto
  Dests: 240:auto
212 (0 1) REM   PLOT THE POINT AND GO TO NEXT X
  Origs: 
  Dests: 
240 F(X:60,Y:90) (0 1) NEXT X
  Origs: 60:fornext, 106:goto, 210:auto
  Dests: 270:auto
270 F(X:60,Y:90) (0 1) END
    WARNING: Terminating statement in FOR/NEXT
  Origs: 240:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

