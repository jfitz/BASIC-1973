4 PRINT "INPUT THE NUMBER OF SPACES DESIRED TO THE LEFT OF ZERO";
 TextValue:"INPUT THE NUMBER OF SPACES DESIRED TO THE LEFT OF ZERO"
 CarriageControl:;
5 INPUT M
 Variable:M -> .
6 PRINT
 CarriageControl:NL
8 PRINT "    ";
 TextValue:"    "
 CarriageControl:;
10 FOR X=0 TO 50 STEP 10
 control: Variable:X -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:50"]
 step:    ["NumericValue:10"]
12 PRINT "    ";X;
 TextValue:"    "
 CarriageControl:;
 Variable:X -> .
 CarriageControl:;
14 NEXT X
 Variable:X -> .
15 PRINT
 CarriageControl:NL
16 FOR X=1 TO 70
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:70"]
18 IF X/10=INT(X/10) THEN 24
 Variable:X -> .
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> .
 Variable:X -> .
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:24
20 PRINT "-";
 TextValue:"-"
 CarriageControl:;
22 GOTO 26
 LineNumber:26
24 PRINT "^";
 TextValue:"^"
 CarriageControl:;
26 NEXT X
 Variable:X -> .
30 DEF FNQ(X)=X^2
 UserFunctionName:FNQ -> .
 VariableName:X -> .
 Variable:X -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
60 FOR X=-7 TO 7
 control: Variable:X -> .
 start:   ["NumericValue:7", "UnaryOperatorMinus:-(.) -> =."]
 end:     ["NumericValue:7"]
62 PRINT
 CarriageControl:NL
90 FOR Y = -M TO 70-M
 control: Variable:Y -> .
 start:   ["Variable:M -> .", "UnaryOperatorMinus:-(.) -> ."]
 end:     ["NumericValue:70", "Variable:M -> .", "BinaryOperatorMinus:-(.,.) -> ."]
92 IF Y <> 0 THEN 120
 Variable:Y -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:120
94 IF X=0 THEN 98
 Variable:X -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:98
95 PRINT "'";
 TextValue:"'"
 CarriageControl:;
96 GOTO 100
 LineNumber:100
98 PRINT "0";
 TextValue:"0"
 CarriageControl:;
100 IF FNQ(X)>0 THEN 180
 Variable:X -> .
 UserFunction:FNQ(.) -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:180
102 REM IF  FNQ(X) > 0 GO FIND WHERE IT IS
 Remark:IF  FNQ(X) > 0 GO FIND WHERE IT IS
103 REM OTHERWISE GET THE NEXT VALUE OF X
 Remark:OTHERWISE GET THE NEXT VALUE OF X
106 GOTO 240
 LineNumber:240
120 IF Y=FNQ(X) THEN 210
 Variable:Y -> .
 Variable:X -> .
 UserFunction:FNQ(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:210
148 REM   IF Y DOES NOT EQUAL FNQ(X) THEN PRINT A BLANK SPACE
 Remark:  IF Y DOES NOT EQUAL FNQ(X) THEN PRINT A BLANK SPACE
150 PRINT " ";
 TextValue:" "
 CarriageControl:;
180 NEXT Y
 Variable:Y -> .
210 PRINT "*";
 TextValue:"*"
 CarriageControl:;
212 REM   PLOT THE POINT AND GO TO NEXT X
 Remark:  PLOT THE POINT AND GO TO NEXT X
240 NEXT X
 Variable:X -> .
270 END
 

