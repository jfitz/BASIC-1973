10 PRINT
 CarriageControl:NL
20 READ P[3],P[2],P[1]
 NumericConstant:3
 Variable:P(_) -> _
 NumericConstant:2
 Variable:P(_) -> _
 NumericConstant:1
 Variable:P(_) -> _
30 IF P[3]=0 THEN 170
 NumericConstant:3
 Variable:P(_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:170
40 PRINT P[3];P[2];P[1]
 NumericConstant:3
 Variable:P(_) -> _
 CarriageControl:;
 NumericConstant:2
 Variable:P(_) -> _
 CarriageControl:;
 NumericConstant:1
 Variable:P(_) -> _
 CarriageControl:NL
50 LET D=P[2]^2-4*P[3]*P[1]
 Variable:D -> _
 NumericConstant:2
 Variable:P(_) -> _
 NumericConstant:2
 BinaryOperatorPower:^(_,_) -> _
 NumericConstant:4
 NumericConstant:3
 Variable:P(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:1
 Variable:P(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
60 LET F=2*P[3]
 Variable:F -> _
 NumericConstant:2
 NumericConstant:3
 Variable:P(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
70 LET A=-P[2]/F
 Variable:A -> _
 NumericConstant:2
 Variable:P(_) -> _
 UnaryOperatorMinus:-(_) -> _
 Variable:F -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
80 LET B=SQR(ABS(D))/F
 Variable:B -> _
 Variable:D -> _
 FunctionAbs:ABS(_) -> _
 FunctionSqr:SQR(_) -> _
 Variable:F -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
90 IF D<0 THEN 130
 Variable:D -> _
 NumericConstant:0
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:130
100 PRINT "REAL ZEROS:"
 TextConstant:"REAL ZEROS:"
 CarriageControl:NL
110 PRINT A+B;"AND   ";A-B
 Variable:A -> _
 Variable:B -> _
 BinaryOperatorPlus:+(_,_) -> _
 CarriageControl:;
 TextConstant:"AND   "
 CarriageControl:;
 Variable:A -> _
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 CarriageControl:NL
120 GOTO 10
 LineNumber:10
130 PRINT "NON-REAL ZEROS:"
 TextConstant:"NON-REAL ZEROS:"
 CarriageControl:NL
140 PRINT "(";A;",";B;") AND (";A;",";-B;")"
 TextConstant:"("
 CarriageControl:;
 Variable:A -> _
 CarriageControl:;
 TextConstant:","
 CarriageControl:;
 Variable:B -> _
 CarriageControl:;
 TextConstant:") AND ("
 CarriageControl:;
 Variable:A -> _
 CarriageControl:;
 TextConstant:","
 CarriageControl:;
 Variable:B -> _
 UnaryOperatorMinus:-(_) -> _
 CarriageControl:;
 TextConstant:")"
 CarriageControl:NL
150 GOTO 10
 LineNumber:10
160 DATA 1,2,3,1,-3,2,1,3,2,1,3,13,-1,2,-3,1,3,12,0,0,0
 NumericConstant:1
 NumericConstant:2
 NumericConstant:3
 NumericConstant:1
 NumericConstant:3
 UnaryOperatorMinus:-(_) -> =_
 NumericConstant:2
 NumericConstant:1
 NumericConstant:3
 NumericConstant:2
 NumericConstant:1
 NumericConstant:3
 NumericConstant:13
 NumericConstant:1
 UnaryOperatorMinus:-(_) -> =_
 NumericConstant:2
 NumericConstant:3
 UnaryOperatorMinus:-(_) -> =_
 NumericConstant:1
 NumericConstant:3
 NumericConstant:12
 NumericConstant:0
 NumericConstant:0
 NumericConstant:0
170 END
 

