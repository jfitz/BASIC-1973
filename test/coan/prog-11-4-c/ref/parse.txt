5 DIM P[10,10]
 NumericConstant:10
 NumericConstant:10
 Declaration:P(,) -> _(,)
10 READ N
 Variable:N -> _
15 IF N=0 THEN 999
 Variable:N -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
20 FOR X=N TO 1 STEP -1
 control: Variable:X -> _
 start:   ["Variable:N -> _"]
 end:     ["NumericConstant:1"]
 step:    ["NumericConstant:1", "UnaryOperatorMinus:-(_) -> _"]
30 READ P[1,X]
 NumericConstant:1
 Variable:X -> _
 Variable:P(_,_) -> _
40 PRINT P[1,X];
 NumericConstant:1
 Variable:X -> _
 Variable:P(_,_) -> _
 CarriageControl:;
48 REM ENTER THE SAME COEFFICIENT IN THE SAME COLUMN
 Remark:ENTER THE SAME COEFFICIENT IN THE SAME COLUMN
49 REM OF THE SECOND ROW
 Remark:OF THE SECOND ROW
50 LET P[2,X]=P[1,X]
 NumericConstant:2
 Variable:X -> _
 Variable:P(_,_) -> _
 NumericConstant:1
 Variable:X -> _
 Variable:P(_,_) -> _
 AssignmentOperator:= _ -> _
58 REM IF THE EXPONENT ON X IS ODD THEN CHANGE THE SIGN
 Remark:IF THE EXPONENT ON X IS ODD THEN CHANGE THE SIGN
60 IF (X+1)/2=INT((X+1)/2) THEN 80
 Variable:X -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> _
 Variable:X -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
70 LET P[2,X]=-P[2,X]
 NumericConstant:2
 Variable:X -> _
 Variable:P(_,_) -> _
 NumericConstant:2
 Variable:X -> _
 Variable:P(_,_) -> _
 UnaryOperatorMinus:-(_) -> _
 AssignmentOperator:= _ -> _
80 NEXT X
 Variable:X -> _
90 PRINT
 CarriageControl:NL
100 PRINT N-1;"COMPLEX ZEROS"
 Variable:N -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 CarriageControl:;
 TextConstant:"COMPLEX ZEROS"
 CarriageControl:NL
200 LET V1,V2=0
 Variable:V1 -> _
 Variable:V2 -> _
 NumericConstant:0
 AssignmentOperator:= _ -> _,_
210 FOR X=N-1 TO 1 STEP -1
 control: Variable:X -> _
 start:   ["Variable:N -> _", "NumericConstant:1", "BinaryOperatorMinus:-(_,_) -> _"]
 end:     ["NumericConstant:1"]
 step:    ["NumericConstant:1", "UnaryOperatorMinus:-(_) -> _"]
218 REM LOOK AT POSITIVE ZEROS
 Remark:LOOK AT POSITIVE ZEROS
220 IF P[1,X]*P[1,X+1]>0 THEN 240
 NumericConstant:1
 Variable:X -> _
 Variable:P(_,_) -> _
 NumericConstant:1
 Variable:X -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:P(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
230 LET V1=V1+1
 Variable:V1 -> _
 Variable:V1 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
238 REM LOOK AT NEGATIVE ZEROS
 Remark:LOOK AT NEGATIVE ZEROS
240 IF P[2,X]*P[2,X+1]>0 THEN 260
 NumericConstant:2
 Variable:X -> _
 Variable:P(_,_) -> _
 NumericConstant:2
 Variable:X -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:P(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
250 LET V2=V2+1
 Variable:V2 -> _
 Variable:V2 -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
260 NEXT X
 Variable:X -> _
300 PRINT V1;"MAX POSITIVE"
 Variable:V1 -> _
 CarriageControl:;
 TextConstant:"MAX POSITIVE"
 CarriageControl:NL
310 PRINT V2;"MAX NEGATIVE"
 Variable:V2 -> _
 CarriageControl:;
 TextConstant:"MAX NEGATIVE"
 CarriageControl:NL
320 PRINT
 CarriageControl:NL
340 GOTO 10
 LineNumber:10
500 DATA 4,6,103,201,90
 NumericConstant:4
 NumericConstant:6
 NumericConstant:103
 NumericConstant:201
 NumericConstant:90
510 DATA 5,1,3,4,-8,2
 NumericConstant:5
 NumericConstant:1
 NumericConstant:3
 NumericConstant:4
 NumericConstant:8
 UnaryOperatorMinus:-(_) -> _
 NumericConstant:2
520 DATA 6,-4,-3,5,-2,1,-3
 NumericConstant:6
 NumericConstant:4
 UnaryOperatorMinus:-(_) -> _
 NumericConstant:3
 UnaryOperatorMinus:-(_) -> _
 NumericConstant:5
 NumericConstant:2
 UnaryOperatorMinus:-(_) -> _
 NumericConstant:1
 NumericConstant:3
 UnaryOperatorMinus:-(_) -> _
600 DATA 0
 NumericConstant:0
999 END
 

