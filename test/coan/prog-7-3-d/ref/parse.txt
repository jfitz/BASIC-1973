100 DIM A(100)
 NumericConstant:100
 Declaration:A() -> _()
110 PRINT "A$";
 TextConstant:"A$"
 CarriageControl:;
120 INPUT A$
 Variable:A$ -> $
130 PRINT
 CarriageControl:NL
140 CHANGE A$ TO A
 Variable:A$ -> $
 Variable:A() -> _()
150 FOR I = 1 TO A(0) - 1
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:0", "Variable:A(_) -> _", "NumericConstant:1", "BinaryOperatorMinus:-(_,_) -> _"]
160    FOR J = I + 1 TO A(0)
 control: Variable:J -> _
 start:   ["Variable:I -> _", "NumericConstant:1", "BinaryOperatorPlus:+(_,_) -> _"]
 end:     ["NumericConstant:0", "Variable:A(_) -> _"]
170       IF A(I) <= A(J) THEN 210
 Variable:I -> _
 Variable:A(_) -> _
 Variable:J -> _
 Variable:A(_) -> _
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:210
175 REM * EXCHANGE OUT OF ORDER CODES
 Remark:* EXCHANGE OUT OF ORDER CODES
180       LET S = A(I)
 Variable:S -> _
 Variable:I -> _
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
190       LET A(I) = A(J)
 Variable:I -> _
 Variable:A(_) -> _
 Variable:J -> _
 Variable:A(_) -> _
 AssignmentOperator:= _ -> _
200       LET A(J) = S
 Variable:J -> _
 Variable:A(_) -> _
 Variable:S -> _
 AssignmentOperator:= _ -> _
210    NEXT J
 Variable:J -> _
220 NEXT I
 Variable:I -> _
230 CHANGE A TO A$
 Variable:A() -> _()
 Variable:A$ -> $
240 PRINT A$
 Variable:A$ -> $
 CarriageControl:NL
250 END
 

