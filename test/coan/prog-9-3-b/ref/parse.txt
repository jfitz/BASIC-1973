10 DEF FNR(X)=INT(X*100+.5)/100
 UserFunctionName:FNR -> .
 VariableName:X -> .
 Variable:X -> .
 NumericValue:100
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:.5
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 NumericValue:100
 BinaryOperatorDivide:/(.,.) -> .
15 PRINT "  "," A"," B"," C"
 TextValue:"  "
 CarriageControl:,
 TextValue:" A"
 CarriageControl:,
 TextValue:" B"
 CarriageControl:,
 TextValue:" C"
 CarriageControl:NL
20 READ A,B,C
 Variable:A -> .
 Variable:B -> .
 Variable:C -> .
30 IF A=0 THEN 999
 Variable:A -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:999
40 PRINT "THE SIDES ARE",A,B,C
 TextValue:"THE SIDES ARE"
 CarriageControl:,
 Variable:A -> .
 CarriageControl:,
 Variable:B -> .
 CarriageControl:,
 Variable:C -> .
 CarriageControl:NL
48 REM  T IS REALLY COS(A1)
 Remark: T IS REALLY COS(A1)
50 LET T=(B^2+C^2-A^2)/(2*B*C)
 Variable:T -> .
 Variable:B -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 Variable:C -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:A -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 Variable:B -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:C -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
58 REM T1 IS REALL SIN(A)
 Remark:T1 IS REALL SIN(A)
60 LET T1=SQR(1-T^2)
 Variable:T1 -> .
 NumericValue:1
 Variable:T -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSqr:SQR(.) -> .
 AssignmentOperator:= . -> .
68 REM  A1 IS THE ANGLE INCLUDED BY SIDES B AND C
 Remark: A1 IS THE ANGLE INCLUDED BY SIDES B AND C
70 LET A1=ATN(T1/T)
 Variable:A1 -> .
 Variable:T1 -> .
 Variable:T -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionArcTan:ATN(.) -> .
 AssignmentOperator:= . -> .
78 REM    CONVERT RADIANS TO DEGREES
 Remark:   CONVERT RADIANS TO DEGREES
80 LET A1=A1*180/3.14159
 Variable:A1 -> .
 Variable:A1 -> .
 NumericValue:180
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:3.14159
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
88 REM  WE NOW REPEAT THE PROCESS TO FIND ANGLE B1
 Remark: WE NOW REPEAT THE PROCESS TO FIND ANGLE B1
90 LET T=(A^2+C^2-B^2)/(2*A*C)
 Variable:T -> .
 Variable:A -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 Variable:C -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:B -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 Variable:A -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:C -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
100 LET T1=SQR(1-T^2)
 Variable:T1 -> .
 NumericValue:1
 Variable:T -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSqr:SQR(.) -> .
 AssignmentOperator:= . -> .
110 LET B1=ATN(T1/T)
 Variable:B1 -> .
 Variable:T1 -> .
 Variable:T -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionArcTan:ATN(.) -> .
 AssignmentOperator:= . -> .
120 LET B1=B1*180/3.14159
 Variable:B1 -> .
 Variable:B1 -> .
 NumericValue:180
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:3.14159
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
130 PRINT "THEN ANGLES ARE",FNR(A1),FNR(B1),180-(FNR(A1)+FNR(B1))
 TextValue:"THEN ANGLES ARE"
 CarriageControl:,
 Variable:A1 -> .
 UserFunction:FNR(.) -> .
 CarriageControl:,
 Variable:B1 -> .
 UserFunction:FNR(.) -> .
 CarriageControl:,
 NumericValue:180
 Variable:A1 -> .
 UserFunction:FNR(.) -> .
 Variable:B1 -> .
 UserFunction:FNR(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:NL
140 PRINT
 CarriageControl:NL
150 GOTO 20
 LineNumber:20
500 DATA 3,4,5,300,400,500
 NumericValue:3
 NumericValue:4
 NumericValue:5
 NumericValue:300
 NumericValue:400
 NumericValue:500
510 DATA 1.73205,1,2
 NumericValue:1.73205
 NumericValue:1
 NumericValue:2
520 DATA 2,2,3
 NumericValue:2
 NumericValue:2
 NumericValue:3
530 DATA 0,0,0
 NumericValue:0
 NumericValue:0
 NumericValue:0
999 END
 

