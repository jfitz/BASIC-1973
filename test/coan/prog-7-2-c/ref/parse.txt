95 REM * PRINTING A NUMERIC OF MORE
 Remark:* PRINTING A NUMERIC OF MORE
96 REM  THAT ONE DIGIT USING STRING
 Remark: THAT ONE DIGIT USING STRING
97 REM  OUTPUT
 Remark: OUTPUT
100 DIM D$[10]
 NumericConstant:10
 Declaration:D$() -> $()
110 LET D$="0123456789"
 Variable:D$ -> $
 TextConstant:"0123456789"
 AssignmentOperator:=
120 PRINT "INPUT ANY INTEGER";
 TextConstant:"INPUT ANY INTEGER"
 CarriageControl:;
130 INPUT N
 Variable:N -> _
140 IF N=0 THEN 260
 Variable:N -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
150 PRINT "#";N;"#"
 TextConstant:"#"
 CarriageControl:;
 Variable:N -> _
 CarriageControl:;
 TextConstant:"#"
 CarriageControl:NL
160 PRINT "$";
 TextConstant:"$"
 CarriageControl:;
170 FOR E=5 TO 0 STEP -1
 control: Variable:E -> _
 start:   ["NumericConstant:5"]
 end:     ["NumericConstant:0"]
 step:    ["NumericConstant:1", "UnaryOperatorMinus:-(_) -> _"]
180 LET I = INT(N/10^E)
 Variable:I -> _
 Variable:N -> _
 NumericConstant:10
 Variable:E -> _
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:=
190 PRINT D$[I+1,I+1];
 Variable:I -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:I -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:D$(_,_) -> $
 CarriageControl:;
200 LET R=N-I*10^E
 Variable:R -> _
 Variable:N -> _
 Variable:I -> _
 NumericConstant:10
 Variable:E -> _
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:=
210 LET N=R
 Variable:N -> _
 Variable:R -> _
 AssignmentOperator:=
220 NEXT E
 Variable:E -> _
230 PRINT "$"
 TextConstant:"$"
 CarriageControl:NL
240 PRINT
 CarriageControl:NL
250 GOTO 120
 LineNumber:120
260 END
 

