8 REM LINES 0 THROUGH 40 READ AND PRINT THE FIRST POLYNOMIAL
 Remark:LINES 0 THROUGH 40 READ AND PRINT THE FIRST POLYNOMIAL
10 FOR X=3 TO 1 STEP -1
 control: Variable:X -> _
 start:   ["NumericValue:3"]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(_) -> =_"]
20 READ F[X]
 Variable:X -> _
 Variable:F(_) -> _
30 PRINT F[X];
 Variable:X -> _
 Variable:F(_) -> _
 CarriageControl:;
40 NEXT X
 Variable:X -> _
50 PRINT "TIMES  ";
 TextValue:"TIMES  "
 CarriageControl:;
58 REM LINES 60 THROUGH 90 READ AND PRINT THE SECOND POLYNOMIAL
 Remark:LINES 60 THROUGH 90 READ AND PRINT THE SECOND POLYNOMIAL
60 FOR Y=2 TO 1 STEP -1
 control: Variable:Y -> _
 start:   ["NumericValue:2"]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(_) -> =_"]
70 READ S[Y]
 Variable:Y -> _
 Variable:S(_) -> _
80 PRINT S[Y];
 Variable:Y -> _
 Variable:S(_) -> _
 CarriageControl:;
90 NEXT Y
 Variable:Y -> _
98 REM 100 THROUGH 120 SET THE RESULT LIST AT ALL ZEROS
 Remark:100 THROUGH 120 SET THE RESULT LIST AT ALL ZEROS
100 FOR W=1 TO 4
 control: Variable:W -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:4"]
110 LET P[W]=0
 Variable:W -> _
 Variable:P(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
120 NEXT W
 Variable:W -> _
128 REM LINES 130 THROUGH 170 DO THE ACTUAL MULTIPLYING
 Remark:LINES 130 THROUGH 170 DO THE ACTUAL MULTIPLYING
130 FOR I=1 TO 3
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
140 FOR J=1 TO 2
 control: Variable:J -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:2"]
150 LET P[I+J-1]=P[I+J-1]+F[I]*S[J]
 Variable:I -> _
 Variable:J -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericValue:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:P(_) -> _
 Variable:I -> _
 Variable:J -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericValue:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:P(_) -> _
 Variable:I -> _
 Variable:F(_) -> _
 Variable:J -> _
 Variable:S(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
160 NEXT J
 Variable:J -> _
170 NEXT I
 Variable:I -> _
180 PRINT "YIELDS  ";
 TextValue:"YIELDS  "
 CarriageControl:;
190 FOR Z=4 TO 1 STEP -1
 control: Variable:Z -> _
 start:   ["NumericValue:4"]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(_) -> =_"]
200 PRINT P[Z];
 Variable:Z -> _
 Variable:P(_) -> _
 CarriageControl:;
210 NEXT Z
 Variable:Z -> _
218 REM THE FIRST THREE NUMBERS REPRESENT 3X^2+11X-5
 Remark:THE FIRST THREE NUMBERS REPRESENT 3X^2+11X-5
219 REM THE NEXT TWO NUMBERS REPRESENT 2X+7
 Remark:THE NEXT TWO NUMBERS REPRESENT 2X+7
220 DATA 3,11,-5,2,7
 NumericValue:3
 NumericValue:11
 NumericValue:5
 UnaryOperatorMinus:-(_) -> =_
 NumericValue:2
 NumericValue:7
230 END
 

