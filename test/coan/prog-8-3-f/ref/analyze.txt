Statistics:

Number of lines: 35
Number of valid statements: 31
Number of comments: 4
Number of executable statements: 30

Complexity:

Comment density: 0.129
Comprehension effort: 87
McCabe complexity: 11
Halstead complexity:
 length: 101
 volume: 388.865
 difficulty: 14.733
 effort: 5729.276
 language: 1.791
 intelligence: 26.394
 time: 5.305

(0 2) 10 PRINT "INPUT THE NUMBER OF SPACES DESIRED TO THE LEFT OF ZERO";
  Origs: :start
  Dests: 20:auto
(1 2) 20 INPUT M
  Origs: 10:auto
  Dests: 30:auto
(0 2) 30 PRINT
  Origs: 20:auto
  Dests: 40:auto
(0 2) 40 PRINT "    ";
  Origs: 30:auto
  Dests: 50:auto
(1 4) 50 FOR X = 0 TO 50 STEP 10
  Origs: 40:auto
  Dests: 60:fornext, 70:fornext
(0 3) 60 PRINT "    "; X;
  Origs: 50:fornext
  Dests: 70:auto
(0 1) 70 NEXT X
  Origs: 50:fornext, 60:auto
  Dests: 80:auto
(0 2) 80 PRINT
  Origs: 70:auto
  Dests: 90:auto
(1 3) 90 FOR X = 1 TO 70
  Origs: 80:auto
  Dests: 100:fornext, 140:fornext
(1 6) 100 IF X / 10 = INT(X / 10) THEN 130
  Origs: 90:fornext
  Dests: 110:auto, 130:ifthen
(0 2) 110 PRINT "-";
  Origs: 100:auto
  Dests: 120:auto
(0 2) 120 GOTO 140
  Origs: 110:auto
  Dests: 140:goto
(0 2) 130 PRINT "^";
  Origs: 100:ifthen
  Dests: 140:auto
(0 1) 140 NEXT X
  Origs: 90:fornext, 120:goto, 130:auto
  Dests: 160:auto
FNQ(_) (0 3) 150 DEF FNQ(X) = X ^ 2
  Origs: 
  Dests: 
(1 4) 160 FOR X = -7 TO 7
  Origs: 140:auto
  Dests: 170:fornext, 340:fornext
(0 2) 170 PRINT
  Origs: 160:fornext
  Dests: 180:auto
(1 5) 180 FOR Y = -M TO 70 - M
  Origs: 170:auto
  Dests: 190:fornext, 310:fornext
(1 4) 190 IF Y <> 0 THEN 280
  Origs: 180:fornext
  Dests: 200:auto, 280:ifthen
(1 4) 200 IF X = 0 THEN 230
  Origs: 190:auto
  Dests: 210:auto, 230:ifthen
(0 2) 210 PRINT "'";
  Origs: 200:auto
  Dests: 220:auto
(0 2) 220 GOTO 240
  Origs: 210:auto
  Dests: 240:goto
(0 2) 230 PRINT "0";
  Origs: 200:ifthen
  Dests: 240:auto
(1 6) 240 IF FNQ(X) > 0 THEN 310
  Origs: 220:goto, 230:auto
  Dests: 250:auto, 270:auto, 310:ifthen
(0 1) 250 REM IF  FNQ(X) > 0 GO FIND WHERE IT IS
  Origs: 240:auto
  Dests: 270:auto
(0 1) 260 REM OTHERWISE GET THE NEXT VALUE OF X
  Origs: 
  Dests: 
(0 2) 270 GOTO 340
  Origs: 240:auto, 250:auto
  Dests: 340:goto
(1 6) 280 IF Y = FNQ(X) THEN 320
  Origs: 190:ifthen
  Dests: 290:auto, 300:auto, 320:ifthen
(0 1) 290 REM   IF Y DOES NOT EQUAL FNQ(X) THEN PRINT A BLANK SPACE
  Origs: 280:auto
  Dests: 300:auto
(0 2) 300 PRINT " ";
  Origs: 280:auto, 290:auto
  Dests: 310:auto
(0 1) 310 NEXT Y
  Origs: 180:fornext, 240:ifthen, 300:auto
  Dests: 320:auto
(0 2) 320 PRINT "*";
  Origs: 280:ifthen, 310:auto
  Dests: 340:auto
(0 1) 330 REM   PLOT THE POINT AND GO TO NEXT X
  Origs: 
  Dests: 
(0 1) 340 NEXT X
  Origs: 160:fornext, 270:goto, 320:auto
  Dests: 350:auto
(0 1) 350 END
  Origs: 340:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

