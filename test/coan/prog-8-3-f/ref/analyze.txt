Statistics:

Number of lines: 35
Number of valid statements: 31
Number of comments: 4
Number of executable statements: 30

Complexity:

Comment density: 0.129
Comprehension effort: 87
McCabe complexity: 11
Halstead complexity:
 length: 101
 volume: 388.865
 difficulty: 14.733
 effort: 5729.276
 language: 1.791
 intelligence: 26.394
 time: 5.305

10 (0 2) PRINT "INPUT THE NUMBER OF SPACES DESIRED TO THE LEFT OF ZERO";
  Origs: :start
  Dests: 20:auto
20 (1 2) INPUT M
  Origs: 10:auto
  Dests: 30:auto
30 (0 2) PRINT
  Origs: 20:auto
  Dests: 40:auto
40 (0 2) PRINT "    ";
  Origs: 30:auto
  Dests: 50:auto
50 F(X:50) (1 4) FOR X = 0 TO 50 STEP 10
  Origs: 40:auto
  Dests: 60:fornext, 70:fornext
60 F(X:50) (0 3) PRINT "    "; X;
  Origs: 50:fornext
  Dests: 70:auto
70 F(X:50) (0 1) NEXT X
  Origs: 50:fornext, 60:auto
  Dests: 80:auto
80 (0 2) PRINT
  Origs: 70:auto
  Dests: 90:auto
90 F(X:90) (1 3) FOR X = 1 TO 70
  Origs: 80:auto
  Dests: 100:fornext, 140:fornext
100 F(X:90) (1 6) IF X / 10 = INT(X / 10) THEN 130
  Origs: 90:fornext
  Dests: 110:auto, 130:ifthen
110 F(X:90) (0 2) PRINT "-";
  Origs: 100:auto
  Dests: 120:auto
120 F(X:90) (0 2) GOTO 140
  Origs: 110:auto
  Dests: 140:goto
130 F(X:90) (0 2) PRINT "^";
  Origs: 100:ifthen
  Dests: 140:auto
140 F(X:90) (0 1) NEXT X
  Origs: 90:fornext, 120:goto, 130:auto
  Dests: 160:auto
150 FNQ(.) (0 3) DEF FNQ(X) = X ^ 2
  Origs: 
  Dests: 
160 F(X:160) (1 4) FOR X = -7 TO 7
  Origs: 140:auto
  Dests: 170:fornext, 340:fornext
170 F(X:160) (0 2) PRINT
  Origs: 160:fornext
  Dests: 180:auto
180 F(X:160,Y:180) (1 5) FOR Y = -M TO 70 - M
  Origs: 170:auto
  Dests: 190:fornext, 310:fornext
190 F(X:160,Y:180) (1 4) IF Y <> 0 THEN 280
  Origs: 180:fornext
  Dests: 200:auto, 280:ifthen
200 F(X:160,Y:180) (1 4) IF X = 0 THEN 230
  Origs: 190:auto
  Dests: 210:auto, 230:ifthen
210 F(X:160,Y:180) (0 2) PRINT "'";
  Origs: 200:auto
  Dests: 220:auto
220 F(X:160,Y:180) (0 2) GOTO 240
  Origs: 210:auto
  Dests: 240:goto
230 F(X:160,Y:180) (0 2) PRINT "0";
  Origs: 200:ifthen
  Dests: 240:auto
240 F(X:160,Y:180) (1 6) IF FNQ(X) > 0 THEN 310
  Origs: 220:goto, 230:auto
  Dests: 270:auto, 310:ifthen
250 (0 1) REM IF  FNQ(X) > 0 GO FIND WHERE IT IS
  Origs: 
  Dests: 
260 (0 1) REM OTHERWISE GET THE NEXT VALUE OF X
  Origs: 
  Dests: 
270 F(X:160,Y:180) (0 2) GOTO 340
  Origs: 240:auto
  Dests: 340:goto
280 F(X:160,Y:180) (1 6) IF Y = FNQ(X) THEN 320
  Origs: 190:ifthen
  Dests: 300:auto, 320:ifthen
290 (0 1) REM   IF Y DOES NOT EQUAL FNQ(X) THEN PRINT A BLANK SPACE
  Origs: 
  Dests: 
300 F(X:160,Y:180) (0 2) PRINT " ";
  Origs: 280:auto
  Dests: 310:auto
310 F(X:160,Y:180) (0 1) NEXT Y
  Origs: 180:fornext, 240:ifthen, 300:auto
  Dests: 320:auto
320 F(X:160,Y:180) (0 2) PRINT "*";
  Origs: 280:ifthen, 310:auto
  Dests: 340:auto
330 (0 1) REM   PLOT THE POINT AND GO TO NEXT X
  Origs: 
  Dests: 
340 F(X:160,Y:180) (0 1) NEXT X
  Origs: 160:fornext, 270:goto, 320:auto
  Dests: 350:auto
350 F(X:160,Y:180) (0 1) END
    WARNING: Terminating statement in FOR/NEXT
  Origs: 340:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

