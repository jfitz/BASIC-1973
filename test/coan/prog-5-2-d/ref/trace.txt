10: LET A = 1
 A = 1
20: FOR R = 1 TO 3
 R = 1
 terminated:false
30: FOR C = 1 TO 5
 C = 1
 terminated:false
40: LET A[R, C] = A
 R: 1
 C: 1
 A: 1
 A(1,1) = 1
50: LET A = A + 1
 A: 1
 A = 2
60: NEXT C
 C: 1
 terminated:false
 C = 2
40: LET A[R, C] = A
 R: 1
 C: 2
 A: 2
 A(1,2) = 2
50: LET A = A + 1
 A: 2
 A = 3
60: NEXT C
 C: 2
 terminated:false
 C = 3
40: LET A[R, C] = A
 R: 1
 C: 3
 A: 3
 A(1,3) = 3
50: LET A = A + 1
 A: 3
 A = 4
60: NEXT C
 C: 3
 terminated:false
 C = 4
40: LET A[R, C] = A
 R: 1
 C: 4
 A: 4
 A(1,4) = 4
50: LET A = A + 1
 A: 4
 A = 5
60: NEXT C
 C: 4
 terminated:false
 C = 5
40: LET A[R, C] = A
 R: 1
 C: 5
 A: 5
 A(1,5) = 5
50: LET A = A + 1
 A: 5
 A = 6
60: NEXT C
 C: 5
 terminated:true
70: NEXT R
 R: 1
 terminated:false
 R = 2
30: FOR C = 1 TO 5
 C = 1
 terminated:false
40: LET A[R, C] = A
 R: 2
 C: 1
 A: 6
 A(2,1) = 6
50: LET A = A + 1
 A: 6
 A = 7
60: NEXT C
 C: 1
 terminated:false
 C = 2
40: LET A[R, C] = A
 R: 2
 C: 2
 A: 7
 A(2,2) = 7
50: LET A = A + 1
 A: 7
 A = 8
60: NEXT C
 C: 2
 terminated:false
 C = 3
40: LET A[R, C] = A
 R: 2
 C: 3
 A: 8
 A(2,3) = 8
50: LET A = A + 1
 A: 8
 A = 9
60: NEXT C
 C: 3
 terminated:false
 C = 4
40: LET A[R, C] = A
 R: 2
 C: 4
 A: 9
 A(2,4) = 9
50: LET A = A + 1
 A: 9
 A = 10
60: NEXT C
 C: 4
 terminated:false
 C = 5
40: LET A[R, C] = A
 R: 2
 C: 5
 A: 10
 A(2,5) = 10
50: LET A = A + 1
 A: 10
 A = 11
60: NEXT C
 C: 5
 terminated:true
70: NEXT R
 R: 2
 terminated:false
 R = 3
30: FOR C = 1 TO 5
 C = 1
 terminated:false
40: LET A[R, C] = A
 R: 3
 C: 1
 A: 11
 A(3,1) = 11
50: LET A = A + 1
 A: 11
 A = 12
60: NEXT C
 C: 1
 terminated:false
 C = 2
40: LET A[R, C] = A
 R: 3
 C: 2
 A: 12
 A(3,2) = 12
50: LET A = A + 1
 A: 12
 A = 13
60: NEXT C
 C: 2
 terminated:false
 C = 3
40: LET A[R, C] = A
 R: 3
 C: 3
 A: 13
 A(3,3) = 13
50: LET A = A + 1
 A: 13
 A = 14
60: NEXT C
 C: 3
 terminated:false
 C = 4
40: LET A[R, C] = A
 R: 3
 C: 4
 A: 14
 A(3,4) = 14
50: LET A = A + 1
 A: 14
 A = 15
60: NEXT C
 C: 4
 terminated:false
 C = 5
40: LET A[R, C] = A
 R: 3
 C: 5
 A: 15
 A(3,5) = 15
50: LET A = A + 1
 A: 15
 A = 16
60: NEXT C
 C: 5
 terminated:true
70: NEXT R
 R: 3
 terminated:true
80: PRINT "HERE IS THE ORIGINAL ARRAY"
HERE IS THE ORIGINAL ARRAY
100: FOR R = 1 TO 3
 R = 1
 terminated:false
110: FOR C = 1 TO 5
 C = 1
 terminated:false
120: PRINT A[R, C];
 R: 1
 C: 1
 A(1,1): 1
 1 
130: NEXT C
 C: 1
 terminated:false
 C = 2
120: PRINT A[R, C];
 R: 1
 C: 2
 A(1,2): 2
 2 
130: NEXT C
 C: 2
 terminated:false
 C = 3
120: PRINT A[R, C];
 R: 1
 C: 3
 A(1,3): 3
 3 
130: NEXT C
 C: 3
 terminated:false
 C = 4
120: PRINT A[R, C];
 R: 1
 C: 4
 A(1,4): 4
 4 
130: NEXT C
 C: 4
 terminated:false
 C = 5
120: PRINT A[R, C];
 R: 1
 C: 5
 A(1,5): 5
 5 
130: NEXT C
 C: 5
 terminated:true
140: PRINT

150: PRINT

160: NEXT R
 R: 1
 terminated:false
 R = 2
110: FOR C = 1 TO 5
 C = 1
 terminated:false
120: PRINT A[R, C];
 R: 2
 C: 1
 A(2,1): 6
 6 
130: NEXT C
 C: 1
 terminated:false
 C = 2
120: PRINT A[R, C];
 R: 2
 C: 2
 A(2,2): 7
 7 
130: NEXT C
 C: 2
 terminated:false
 C = 3
120: PRINT A[R, C];
 R: 2
 C: 3
 A(2,3): 8
 8 
130: NEXT C
 C: 3
 terminated:false
 C = 4
120: PRINT A[R, C];
 R: 2
 C: 4
 A(2,4): 9
 9 
130: NEXT C
 C: 4
 terminated:false
 C = 5
120: PRINT A[R, C];
 R: 2
 C: 5
 A(2,5): 10
 10 
130: NEXT C
 C: 5
 terminated:true
140: PRINT

150: PRINT

160: NEXT R
 R: 2
 terminated:false
 R = 3
110: FOR C = 1 TO 5
 C = 1
 terminated:false
120: PRINT A[R, C];
 R: 3
 C: 1
 A(3,1): 11
 11 
130: NEXT C
 C: 1
 terminated:false
 C = 2
120: PRINT A[R, C];
 R: 3
 C: 2
 A(3,2): 12
 12 
130: NEXT C
 C: 2
 terminated:false
 C = 3
120: PRINT A[R, C];
 R: 3
 C: 3
 A(3,3): 13
 13 
130: NEXT C
 C: 3
 terminated:false
 C = 4
120: PRINT A[R, C];
 R: 3
 C: 4
 A(3,4): 14
 14 
130: NEXT C
 C: 4
 terminated:false
 C = 5
120: PRINT A[R, C];
 R: 3
 C: 5
 A(3,5): 15
 15 
130: NEXT C
 C: 5
 terminated:true
140: PRINT

150: PRINT

160: NEXT R
 R: 3
 terminated:true
170: FOR I = 1 TO 5
 I = 1
 terminated:false
180: LET A[4, I] = 0
 I: 1
 A(4,1) = 0
190: NEXT I
 I: 1
 terminated:false
 I = 2
180: LET A[4, I] = 0
 I: 2
 A(4,2) = 0
190: NEXT I
 I: 2
 terminated:false
 I = 3
180: LET A[4, I] = 0
 I: 3
 A(4,3) = 0
190: NEXT I
 I: 3
 terminated:false
 I = 4
180: LET A[4, I] = 0
 I: 4
 A(4,4) = 0
190: NEXT I
 I: 4
 terminated:false
 I = 5
180: LET A[4, I] = 0
 I: 5
 A(4,5) = 0
190: NEXT I
 I: 5
 terminated:true
200: PRINT "WE NOW HAVE THE 4 BY 5 ARRAY"
WE NOW HAVE THE 4 BY 5 ARRAY
210: GOSUB 500
500: FOR R = 1 TO 4
 R = 1
 terminated:false
510: FOR C = 1 TO 5
 C = 1
 terminated:false
520: PRINT A[R, C];
 R: 1
 C: 1
 A(1,1): 1
 1 
530: NEXT C
 C: 1
 terminated:false
 C = 2
520: PRINT A[R, C];
 R: 1
 C: 2
 A(1,2): 2
 2 
530: NEXT C
 C: 2
 terminated:false
 C = 3
520: PRINT A[R, C];
 R: 1
 C: 3
 A(1,3): 3
 3 
530: NEXT C
 C: 3
 terminated:false
 C = 4
520: PRINT A[R, C];
 R: 1
 C: 4
 A(1,4): 4
 4 
530: NEXT C
 C: 4
 terminated:false
 C = 5
520: PRINT A[R, C];
 R: 1
 C: 5
 A(1,5): 5
 5 
530: NEXT C
 C: 5
 terminated:true
540: PRINT

550: PRINT

560: NEXT R
 R: 1
 terminated:false
 R = 2
510: FOR C = 1 TO 5
 C = 1
 terminated:false
520: PRINT A[R, C];
 R: 2
 C: 1
 A(2,1): 6
 6 
530: NEXT C
 C: 1
 terminated:false
 C = 2
520: PRINT A[R, C];
 R: 2
 C: 2
 A(2,2): 7
 7 
530: NEXT C
 C: 2
 terminated:false
 C = 3
520: PRINT A[R, C];
 R: 2
 C: 3
 A(2,3): 8
 8 
530: NEXT C
 C: 3
 terminated:false
 C = 4
520: PRINT A[R, C];
 R: 2
 C: 4
 A(2,4): 9
 9 
530: NEXT C
 C: 4
 terminated:false
 C = 5
520: PRINT A[R, C];
 R: 2
 C: 5
 A(2,5): 10
 10 
530: NEXT C
 C: 5
 terminated:true
540: PRINT

550: PRINT

560: NEXT R
 R: 2
 terminated:false
 R = 3
510: FOR C = 1 TO 5
 C = 1
 terminated:false
520: PRINT A[R, C];
 R: 3
 C: 1
 A(3,1): 11
 11 
530: NEXT C
 C: 1
 terminated:false
 C = 2
520: PRINT A[R, C];
 R: 3
 C: 2
 A(3,2): 12
 12 
530: NEXT C
 C: 2
 terminated:false
 C = 3
520: PRINT A[R, C];
 R: 3
 C: 3
 A(3,3): 13
 13 
530: NEXT C
 C: 3
 terminated:false
 C = 4
520: PRINT A[R, C];
 R: 3
 C: 4
 A(3,4): 14
 14 
530: NEXT C
 C: 4
 terminated:false
 C = 5
520: PRINT A[R, C];
 R: 3
 C: 5
 A(3,5): 15
 15 
530: NEXT C
 C: 5
 terminated:true
540: PRINT

550: PRINT

560: NEXT R
 R: 3
 terminated:false
 R = 4
510: FOR C = 1 TO 5
 C = 1
 terminated:false
520: PRINT A[R, C];
 R: 4
 C: 1
 A(4,1): 0
 0 
530: NEXT C
 C: 1
 terminated:false
 C = 2
520: PRINT A[R, C];
 R: 4
 C: 2
 A(4,2): 0
 0 
530: NEXT C
 C: 2
 terminated:false
 C = 3
520: PRINT A[R, C];
 R: 4
 C: 3
 A(4,3): 0
 0 
530: NEXT C
 C: 3
 terminated:false
 C = 4
520: PRINT A[R, C];
 R: 4
 C: 4
 A(4,4): 0
 0 
530: NEXT C
 C: 4
 terminated:false
 C = 5
520: PRINT A[R, C];
 R: 4
 C: 5
 A(4,5): 0
 0 
530: NEXT C
 C: 5
 terminated:true
540: PRINT

550: PRINT

560: NEXT R
 R: 4
 terminated:true
570: RETURN
220: FOR C = 1 TO 5
 C = 1
 terminated:false
230: FOR R = 1 TO 3
 R = 1
 terminated:false
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 1
 A(4,1): 0
 R: 1
 A(1,1): 1
 A(4,1) = 1
250: NEXT R
 R: 1
 terminated:false
 R = 2
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 1
 A(4,1): 1
 R: 2
 A(2,1): 6
 A(4,1) = 7
250: NEXT R
 R: 2
 terminated:false
 R = 3
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 1
 A(4,1): 7
 R: 3
 A(3,1): 11
 A(4,1) = 18
250: NEXT R
 R: 3
 terminated:true
260: NEXT C
 C: 1
 terminated:false
 C = 2
230: FOR R = 1 TO 3
 R = 1
 terminated:false
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 2
 A(4,2): 0
 R: 1
 A(1,2): 2
 A(4,2) = 2
250: NEXT R
 R: 1
 terminated:false
 R = 2
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 2
 A(4,2): 2
 R: 2
 A(2,2): 7
 A(4,2) = 9
250: NEXT R
 R: 2
 terminated:false
 R = 3
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 2
 A(4,2): 9
 R: 3
 A(3,2): 12
 A(4,2) = 21
250: NEXT R
 R: 3
 terminated:true
260: NEXT C
 C: 2
 terminated:false
 C = 3
230: FOR R = 1 TO 3
 R = 1
 terminated:false
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 3
 A(4,3): 0
 R: 1
 A(1,3): 3
 A(4,3) = 3
250: NEXT R
 R: 1
 terminated:false
 R = 2
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 3
 A(4,3): 3
 R: 2
 A(2,3): 8
 A(4,3) = 11
250: NEXT R
 R: 2
 terminated:false
 R = 3
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 3
 A(4,3): 11
 R: 3
 A(3,3): 13
 A(4,3) = 24
250: NEXT R
 R: 3
 terminated:true
260: NEXT C
 C: 3
 terminated:false
 C = 4
230: FOR R = 1 TO 3
 R = 1
 terminated:false
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 4
 A(4,4): 0
 R: 1
 A(1,4): 4
 A(4,4) = 4
250: NEXT R
 R: 1
 terminated:false
 R = 2
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 4
 A(4,4): 4
 R: 2
 A(2,4): 9
 A(4,4) = 13
250: NEXT R
 R: 2
 terminated:false
 R = 3
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 4
 A(4,4): 13
 R: 3
 A(3,4): 14
 A(4,4) = 27
250: NEXT R
 R: 3
 terminated:true
260: NEXT C
 C: 4
 terminated:false
 C = 5
230: FOR R = 1 TO 3
 R = 1
 terminated:false
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 5
 A(4,5): 0
 R: 1
 A(1,5): 5
 A(4,5) = 5
250: NEXT R
 R: 1
 terminated:false
 R = 2
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 5
 A(4,5): 5
 R: 2
 A(2,5): 10
 A(4,5) = 15
250: NEXT R
 R: 2
 terminated:false
 R = 3
240: LET A[4, C] = A[4, C] + A[R, C]
 C: 5
 A(4,5): 15
 R: 3
 A(3,5): 15
 A(4,5) = 30
250: NEXT R
 R: 3
 terminated:true
260: NEXT C
 C: 5
 terminated:true
270: PRINT "THE FOURTH ROW NOW CONTAINS THE SUMS OF THE FIRST 3 ROWS."
THE FOURTH ROW NOW CONTAINS THE SUMS OF THE FIRST 3 ROWS.
280: GOSUB 500
500: FOR R = 1 TO 4
 R = 1
 terminated:false
510: FOR C = 1 TO 5
 C = 1
 terminated:false
520: PRINT A[R, C];
 R: 1
 C: 1
 A(1,1): 1
 1 
530: NEXT C
 C: 1
 terminated:false
 C = 2
520: PRINT A[R, C];
 R: 1
 C: 2
 A(1,2): 2
 2 
530: NEXT C
 C: 2
 terminated:false
 C = 3
520: PRINT A[R, C];
 R: 1
 C: 3
 A(1,3): 3
 3 
530: NEXT C
 C: 3
 terminated:false
 C = 4
520: PRINT A[R, C];
 R: 1
 C: 4
 A(1,4): 4
 4 
530: NEXT C
 C: 4
 terminated:false
 C = 5
520: PRINT A[R, C];
 R: 1
 C: 5
 A(1,5): 5
 5 
530: NEXT C
 C: 5
 terminated:true
540: PRINT

550: PRINT

560: NEXT R
 R: 1
 terminated:false
 R = 2
510: FOR C = 1 TO 5
 C = 1
 terminated:false
520: PRINT A[R, C];
 R: 2
 C: 1
 A(2,1): 6
 6 
530: NEXT C
 C: 1
 terminated:false
 C = 2
520: PRINT A[R, C];
 R: 2
 C: 2
 A(2,2): 7
 7 
530: NEXT C
 C: 2
 terminated:false
 C = 3
520: PRINT A[R, C];
 R: 2
 C: 3
 A(2,3): 8
 8 
530: NEXT C
 C: 3
 terminated:false
 C = 4
520: PRINT A[R, C];
 R: 2
 C: 4
 A(2,4): 9
 9 
530: NEXT C
 C: 4
 terminated:false
 C = 5
520: PRINT A[R, C];
 R: 2
 C: 5
 A(2,5): 10
 10 
530: NEXT C
 C: 5
 terminated:true
540: PRINT

550: PRINT

560: NEXT R
 R: 2
 terminated:false
 R = 3
510: FOR C = 1 TO 5
 C = 1
 terminated:false
520: PRINT A[R, C];
 R: 3
 C: 1
 A(3,1): 11
 11 
530: NEXT C
 C: 1
 terminated:false
 C = 2
520: PRINT A[R, C];
 R: 3
 C: 2
 A(3,2): 12
 12 
530: NEXT C
 C: 2
 terminated:false
 C = 3
520: PRINT A[R, C];
 R: 3
 C: 3
 A(3,3): 13
 13 
530: NEXT C
 C: 3
 terminated:false
 C = 4
520: PRINT A[R, C];
 R: 3
 C: 4
 A(3,4): 14
 14 
530: NEXT C
 C: 4
 terminated:false
 C = 5
520: PRINT A[R, C];
 R: 3
 C: 5
 A(3,5): 15
 15 
530: NEXT C
 C: 5
 terminated:true
540: PRINT

550: PRINT

560: NEXT R
 R: 3
 terminated:false
 R = 4
510: FOR C = 1 TO 5
 C = 1
 terminated:false
520: PRINT A[R, C];
 R: 4
 C: 1
 A(4,1): 18
 18 
530: NEXT C
 C: 1
 terminated:false
 C = 2
520: PRINT A[R, C];
 R: 4
 C: 2
 A(4,2): 21
 21 
530: NEXT C
 C: 2
 terminated:false
 C = 3
520: PRINT A[R, C];
 R: 4
 C: 3
 A(4,3): 24
 24 
530: NEXT C
 C: 3
 terminated:false
 C = 4
520: PRINT A[R, C];
 R: 4
 C: 4
 A(4,4): 27
 27 
530: NEXT C
 C: 4
 terminated:false
 C = 5
520: PRINT A[R, C];
 R: 4
 C: 5
 A(4,5): 30
 30 
530: NEXT C
 C: 5
 terminated:true
540: PRINT

550: PRINT

560: NEXT R
 R: 4
 terminated:true
570: RETURN
490: STOP
STOP in line 490

