10 DEF FNC(Z)=INT(Z*RND(Z)+1)
 UserFunctionName:FNC -> .
 VariableName:Z -> .
 Variable:Z -> .
 Variable:Z -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
20 FOR X=1 TO 6
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:6"]
30 LET R=FNC(10)
 Variable:R -> .
 NumericValue:10
 UserFunction:FNC(.) -> .
 AssignmentOperator:= . -> .
40 LET G=FNC(360)
 Variable:G -> .
 NumericValue:360
 UserFunction:FNC(.) -> .
 AssignmentOperator:= . -> .
50 LET R1=FNC(10)
 Variable:R1 -> .
 NumericValue:10
 UserFunction:FNC(.) -> .
 AssignmentOperator:= . -> .
60 LET G1=FNC(360)
 Variable:G1 -> .
 NumericValue:360
 UserFunction:FNC(.) -> .
 AssignmentOperator:= . -> .
70 PRINT "(";R;",";G;")*(";R1;",";G1;")=(";R*R1;",";G+G1;")"
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"("
 CarriageControl:;
 Variable:R -> .
 CarriageControl:;
 TextValue:","
 CarriageControl:;
 Variable:G -> .
 CarriageControl:;
 TextValue:")*("
 CarriageControl:;
 Variable:R1 -> .
 CarriageControl:;
 TextValue:","
 CarriageControl:;
 Variable:G1 -> .
 CarriageControl:;
 TextValue:")=("
 CarriageControl:;
 Variable:R -> .
 Variable:R1 -> .
 BinaryOperatorMultiply:*(.,.) -> .
 CarriageControl:;
 TextValue:","
 CarriageControl:;
 Variable:G -> .
 Variable:G1 -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
 TextValue:")"
 CarriageControl:NL
80 NEXT X
 Variable:X -> .
90 END
 

