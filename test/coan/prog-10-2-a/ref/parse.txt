10 DEF FNC(Z)=INT(Z*RND(Z)+1)
 UserFunctionName:FNC -> _
 VariableName:Z -> _
 Variable:Z -> _
 Variable:Z -> _
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
20 FOR X=1 TO 6
 control: Variable:X -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
30 LET R=FNC(10)
 Variable:R -> _
 NumericConstant:10
 UserFunction:FNC(_) -> _
 AssignmentOperator:= _ -> _
40 LET G=FNC(360)
 Variable:G -> _
 NumericConstant:360
 UserFunction:FNC(_) -> _
 AssignmentOperator:= _ -> _
50 LET R1=FNC(10)
 Variable:R1 -> _
 NumericConstant:10
 UserFunction:FNC(_) -> _
 AssignmentOperator:= _ -> _
60 LET G1=FNC(360)
 Variable:G1 -> _
 NumericConstant:360
 UserFunction:FNC(_) -> _
 AssignmentOperator:= _ -> _
70 PRINT "(";R;",";G;")*(";R1;",";G1;")=(";R*R1;",";G+G1;")"
 WARNING: Line exceeds PRETTY width limit 72
 TextConstant:"("
 CarriageControl:;
 Variable:R -> _
 CarriageControl:;
 TextConstant:","
 CarriageControl:;
 Variable:G -> _
 CarriageControl:;
 TextConstant:")*("
 CarriageControl:;
 Variable:R1 -> _
 CarriageControl:;
 TextConstant:","
 CarriageControl:;
 Variable:G1 -> _
 CarriageControl:;
 TextConstant:")=("
 CarriageControl:;
 Variable:R -> _
 Variable:R1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 CarriageControl:;
 TextConstant:","
 CarriageControl:;
 Variable:G -> _
 Variable:G1 -> _
 BinaryOperatorPlus:+(_,_) -> _
 CarriageControl:;
 TextConstant:")"
 CarriageControl:NL
80 NEXT X
 Variable:X -> _
90 END
 

