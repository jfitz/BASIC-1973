10 DEF FNC(Z)=INT(Z*RND(Z)+1)
 UserFunctionName:FNC
 VariableName:Z
 Variable:Z numeric scalar
 Variable:Z numeric scalar
 FunctionRnd:RND(_) numeric scalar
 BinaryOperatorMultiply:*(_,_) numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) numeric scalar
 FunctionInt:INT(_) numeric scalar
20 FOR X=1 TO 6
 control: Variable:X numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:6"]
30 LET R=FNC(10)
 Variable:R numeric scalar
 NumericConstant:10
 UserFunction:FNC(_) numeric scalar
 AssignmentOperator:=
40 LET G=FNC(360)
 Variable:G numeric scalar
 NumericConstant:360
 UserFunction:FNC(_) numeric scalar
 AssignmentOperator:=
50 LET R1=FNC(10)
 Variable:R1 numeric scalar
 NumericConstant:10
 UserFunction:FNC(_) numeric scalar
 AssignmentOperator:=
60 LET G1=FNC(360)
 Variable:G1 numeric scalar
 NumericConstant:360
 UserFunction:FNC(_) numeric scalar
 AssignmentOperator:=
70 PRINT "(";R;",";G;")*(";R1;",";G1;")=(";R*R1;",";G+G1;")"
 TextConstant:"("
 CarriageControl:;
 Variable:R numeric scalar
 CarriageControl:;
 TextConstant:","
 CarriageControl:;
 Variable:G numeric scalar
 CarriageControl:;
 TextConstant:")*("
 CarriageControl:;
 Variable:R1 numeric scalar
 CarriageControl:;
 TextConstant:","
 CarriageControl:;
 Variable:G1 numeric scalar
 CarriageControl:;
 TextConstant:")=("
 CarriageControl:;
 Variable:R numeric scalar
 Variable:R1 numeric scalar
 BinaryOperatorMultiply:*(_,_) numeric scalar
 CarriageControl:;
 TextConstant:","
 CarriageControl:;
 Variable:G numeric scalar
 Variable:G1 numeric scalar
 BinaryOperatorPlus:+(_,_) numeric scalar
 CarriageControl:;
 TextConstant:")"
 CarriageControl:NL
80 NEXT X
 Variable:X numeric scalar
90 END
 

