8 REM  INTZER BEGINS HERE  (WE HAVE REMOVED THE REM STATEMENTS)
 Remark: INTZER BEGINS HERE  (WE HAVE REMOVED THE REM STATEMENTS)
9 REM  SEE THE PROGRAM FOR REM STATEMENTS
 Remark: SEE THE PROGRAM FOR REM STATEMENTS
10 DEF FNP(X)=P[4]*X^3+P[3]*X^2+P[2]*X+P[1]
 UserFunctionName:FNP -> .
 VariableName:X -> .
 NumericValue:4
 Variable:P(.) -> .
 Variable:X -> .
 NumericValue:3
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:3
 Variable:P(.) -> .
 Variable:X -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 Variable:P(.) -> .
 Variable:X -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:1
 Variable:P(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
20 PRINT
 CarriageControl:NL
30 PRINT
 CarriageControl:NL
40 FOR S=4 TO 1 STEP -1
 control: Variable:S -> .
 start:   ["NumericValue:4"]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
50 READ P[S]
 Variable:S -> .
 Variable:P(.) -> .
60 IF P[S]=.0101 THEN 430
 Variable:S -> .
 Variable:P(.) -> .
 NumericValue:.0101
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:430
70 PRINT P[S];
 Variable:S -> .
 Variable:P(.) -> .
 CarriageControl:;
80 NEXT S
 Variable:S -> .
90 PRINT "INTEGRAL ZERO:"
 TextValue:"INTEGRAL ZERO:"
 CarriageControl:NL
100 FOR X=-P[1] TO P[1] STEP SGN(P[1])
 control: Variable:X -> .
 start:   ["NumericValue:1", "Variable:P(.) -> .", "UnaryOperatorMinus:-(.) -> ."]
 end:     ["NumericValue:1", "Variable:P(.) -> ."]
 step:    ["NumericValue:1", "Variable:P(.) -> .", "FunctionSgn:SGN(.) -> ."]
110 IF X=0 THEN 160
 Variable:X -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:160
120 IF P[1]/X <> INT(P[1]/X) THEN 160
 NumericValue:1
 Variable:P(.) -> .
 Variable:X -> .
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:1
 Variable:P(.) -> .
 Variable:X -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:160
130 IF FNP(X) <> 0 THEN 160
 Variable:X -> .
 UserFunction:FNP(.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:160
140 PRINT X
 Variable:X -> .
 CarriageControl:NL
150 GOTO 170
 LineNumber:170
160 NEXT X
 Variable:X -> .
164 REM  INTZER ENDS HERE ***  SYNDIV BEGINS HERE
 Remark: INTZER ENDS HERE ***  SYNDIV BEGINS HERE
170 LET R=X
 Variable:R -> .
 Variable:X -> .
 AssignmentOperator:= . -> .
180 PRINT "SYNTHETIC DIVISION BY   X -";R;"YIELDS:"
 TextValue:"SYNTHETIC DIVISION BY   X -"
 CarriageControl:;
 Variable:R -> .
 CarriageControl:;
 TextValue:"YIELDS:"
 CarriageControl:NL
190 PRINT P[4];
 NumericValue:4
 Variable:P(.) -> .
 CarriageControl:;
200 FOR X=3 TO 1 STEP -1
 control: Variable:X -> .
 start:   ["NumericValue:3"]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
210 LET P[X]=P[X]+P[X+1]*R
 Variable:X -> .
 Variable:P(.) -> .
 Variable:X -> .
 Variable:P(.) -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:P(.) -> .
 Variable:R -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
220 IF X > 1 THEN 240
 Variable:X -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:240
230 PRINT "REMAINDER =";
 TextValue:"REMAINDER ="
 CarriageControl:;
240 PRINT P[X];
 Variable:X -> .
 Variable:P(.) -> .
 CarriageControl:;
250 NEXT X
 Variable:X -> .
252 REM SYNDIV ENDS HERE
 Remark:SYNDIV ENDS HERE
258 REM  HERE WE MOVE EACH ENTRY IN THE P LIST
 Remark: HERE WE MOVE EACH ENTRY IN THE P LIST
259 REM   TO THE LOCATION ONE SUBSCRIPT LOWER
 Remark:  TO THE LOCATION ONE SUBSCRIPT LOWER
260 FOR X=1 TO 3
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
270 LET P[X]=P[X+1]
 Variable:X -> .
 Variable:P(.) -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:P(.) -> .
 AssignmentOperator:= . -> .
280 NEXT X
 Variable:X -> .
290 PRINT
 CarriageControl:NL
298 REM COMP-1 BEGINS HERE
 Remark:COMP-1 BEGINS HERE
300 LET D=P[2]^2-4*P[3]*P[1]
 Variable:D -> .
 NumericValue:2
 Variable:P(.) -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 NumericValue:4
 NumericValue:3
 Variable:P(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 Variable:P(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
310 LET F=2*P[3]
 Variable:F -> .
 NumericValue:2
 NumericValue:3
 Variable:P(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
320 LET A=-P[2]/F
 Variable:A -> .
 NumericValue:2
 Variable:P(.) -> .
 UnaryOperatorMinus:-(.) -> .
 Variable:F -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
330 LET B=SQR(ABS(D))/F
 Variable:B -> .
 Variable:D -> .
 FunctionAbs:ABS(.) -> .
 FunctionSqr:SQR(.) -> .
 Variable:F -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
340 IF D<0 THEN 380
 Variable:D -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:380
350 PRINT "REAL ZEROS:"
 TextValue:"REAL ZEROS:"
 CarriageControl:NL
360 PRINT A+B;"AND   ";A-B
 Variable:A -> .
 Variable:B -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
 TextValue:"AND   "
 CarriageControl:;
 Variable:A -> .
 Variable:B -> .
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:NL
370 GOTO 20
 LineNumber:20
380 PRINT "NON-REAL ZEROS:"
 TextValue:"NON-REAL ZEROS:"
 CarriageControl:NL
390 PRINT "(";A;",";B;") AND (";A;",";-B;")"
 TextValue:"("
 CarriageControl:;
 Variable:A -> .
 CarriageControl:;
 TextValue:","
 CarriageControl:;
 Variable:B -> .
 CarriageControl:;
 TextValue:") AND ("
 CarriageControl:;
 Variable:A -> .
 CarriageControl:;
 TextValue:","
 CarriageControl:;
 Variable:B -> .
 UnaryOperatorMinus:-(.) -> .
 CarriageControl:;
 TextValue:")"
 CarriageControl:NL
400 GOTO 20
 LineNumber:20
405 DATA 1,2,-1,-2
 NumericValue:1
 NumericValue:2
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
410 DATA 1,-1,0,-48,1,0,0,-1,1,0,0,1,1,-1,1,-1
 NumericValue:1
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:0
 NumericValue:48
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:1
 NumericValue:0
 NumericValue:0
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:1
 NumericValue:0
 NumericValue:0
 NumericValue:1
 NumericValue:1
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:1
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
415 DATA 6,-77,-189,-90
 NumericValue:6
 NumericValue:77
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:189
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:90
 UnaryOperatorMinus:-(.) -> =.
420 DATA .0101
 NumericValue:.0101
430 END
 

