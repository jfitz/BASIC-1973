5 REM  THE MAT INSTRUCTIONS ARE CONVENIENT HERE
 Remark: THE MAT INSTRUCTIONS ARE CONVENIENT HERE
10 DIM L(1,7)
 NumericValue:1
 NumericValue:7
 Declaration:L(,) -> .(,)
20 MAT L=ZER
 Variable:L(,) -> .(,)
 FunctionZer2:ZER -> .(,)
 AssignmentOperator:= .(,) -> .(,)
38 REM THE COMPUTER DOES 50 THROUGH 110 1000 TIMES
 Remark:THE COMPUTER DOES 50 THROUGH 110 1000 TIMES
40 FOR X=1 TO 1000
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:1000"]
50 LET C=0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
55 REM  C IS GOING TO COUNT 1'S
 Remark: C IS GOING TO COUNT 1'S
56 REM LINES 60 THOUGH 100 ROLL A DICE AND COUNT 1'S
 Remark:LINES 60 THOUGH 100 ROLL A DICE AND COUNT 1'S
60 FOR R=1 TO 6
 control: Variable:R -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:6"]
70 LET U=INT(6*RND(1)+1)
 Variable:U -> .
 NumericValue:6
 NumericValue:1
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
80 IF U>1 THEN 100
 Variable:U -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:100
90 LET C=C+1
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
100 NEXT R
 Variable:R -> .
110 LET L[1,C+1]=L[1,C+1]+1
 NumericValue:1
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:L(.,.) -> .
 NumericValue:1
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:L(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
120 NEXT X
 Variable:X -> .
130 PRINT "NONE  ONE   TWO   THREE FOUR  FIVE  SIX"
 TextValue:"NONE  ONE   TWO   THREE FOUR  FIVE  SIX"
 CarriageControl:NL
140 MAT PRINT L;
 Variable:L(,) -> .(,)
 CarriageControl:;
150 END
 

