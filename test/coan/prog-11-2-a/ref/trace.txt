FNP(_) 10: DEF FNP(X) = P[4] * X ^ 3 + P[3] * X ^ 2 + P[2] * X + P[1]
170: DATA 1, -2, -11, 12
180: DATA 1, 1, -5, -2
190: DATA 1, -2, 3, -4
200: DATA 2, -3, -10, 3
20: PRINT

22: PRINT

F(S) 25: FOR S = 4 TO 1 STEP -1
 S = 4
 -1 = -1
 terminated:false
F(S) 30: READ P[S]
 S: 4
 P(4) = 1
F(S) 40: PRINT P[S];
 S: 4
 P(4): 1
 1 
F(S) 50: NEXT S
 S: 4
 terminated:false
 S = 3
F(S) 30: READ P[S]
 S: 3
 P(3) = -2
F(S) 40: PRINT P[S];
 S: 3
 P(3): -2
-2 
F(S) 50: NEXT S
 S: 3
 terminated:false
 S = 2
F(S) 30: READ P[S]
 S: 2
 P(2) = -11
F(S) 40: PRINT P[S];
 S: 2
 P(2): -11
-11 
F(S) 50: NEXT S
 S: 2
 terminated:false
 S = 1
F(S) 30: READ P[S]
 S: 1
 P(1) = 12
F(S) 40: PRINT P[S];
 S: 1
 P(1): 12
 12 
F(S) 50: NEXT S
 S: 1
 terminated:true
60: PRINT "INTEGRAL ZERO(S):  ";
INTEGRAL ZERO(S):  
70: LET K = 0
 K = 0
F(X) 80: FOR X = -P[1] TO P[1] STEP SGN(P[1])
 P(1): 12
 X = -12
 -P[1] = -12
 P[1] = 12
 SGN(P[1]) = 1
 terminated:false
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -12
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -12
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -12
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -12
 terminated:false
 X = -11
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -11
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -11
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: -11
 terminated:false
 X = -10
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -10
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -10
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: -10
 terminated:false
 X = -9
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -9
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -9
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: -9
 terminated:false
 X = -8
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -8
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -8
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: -8
 terminated:false
 X = -7
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -7
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -7
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: -7
 terminated:false
 X = -6
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -6
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -6
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -6
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -6
 terminated:false
 X = -5
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -5
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -5
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: -5
 terminated:false
 X = -4
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -4
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -4
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -4
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -4
 terminated:false
 X = -3
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -3
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -3
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -3
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: false
F(X) 120: PRINT X;
 X: -3
-3 
F(X) 130: LET K = 1
 K = 1
F(X) 140: NEXT X
 X: -3
 terminated:false
 X = -2
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -2
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -2
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -2
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -2
 terminated:false
 X = -1
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -1
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: -1
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -1
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -1
 terminated:false
 X = 0
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 0
 X = 0: true
F(X) 140: NEXT X
 X: 0
 terminated:false
 X = 1
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 1
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 1
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 1
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: false
F(X) 120: PRINT X;
 X: 1
 1 
F(X) 130: LET K = 1
 K = 1
F(X) 140: NEXT X
 X: 1
 terminated:false
 X = 2
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 2
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 2
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 2
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 2
 terminated:false
 X = 3
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 3
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 3
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 3
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 3
 terminated:false
 X = 4
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 4
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 4
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 4
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: false
F(X) 120: PRINT X;
 X: 4
 4 
F(X) 130: LET K = 1
 K = 1
F(X) 140: NEXT X
 X: 4
 terminated:false
 X = 5
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 5
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 5
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: 5
 terminated:false
 X = 6
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 6
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 6
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 6
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 6
 terminated:false
 X = 7
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 7
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 7
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: 7
 terminated:false
 X = 8
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 8
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 8
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: 8
 terminated:false
 X = 9
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 9
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 9
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: 9
 terminated:false
 X = 10
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 10
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 10
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: 10
 terminated:false
 X = 11
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 11
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 11
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: 11
 terminated:false
 X = 12
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 12
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 12
 X: 12
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 12
 P(4): 1
 P(3): -2
 P(2): -11
 P(1): 12
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 12
 terminated:true
150: IF K = 1 THEN 20
 K: 1
 K = 1: true
20: PRINT

22: PRINT

F(S) 25: FOR S = 4 TO 1 STEP -1
 S = 4
 -1 = -1
 terminated:false
F(S) 30: READ P[S]
 S: 4
 P(4) = 1
F(S) 40: PRINT P[S];
 S: 4
 P(4): 1
 1 
F(S) 50: NEXT S
 S: 4
 terminated:false
 S = 3
F(S) 30: READ P[S]
 S: 3
 P(3) = 1
F(S) 40: PRINT P[S];
 S: 3
 P(3): 1
 1 
F(S) 50: NEXT S
 S: 3
 terminated:false
 S = 2
F(S) 30: READ P[S]
 S: 2
 P(2) = -5
F(S) 40: PRINT P[S];
 S: 2
 P(2): -5
-5 
F(S) 50: NEXT S
 S: 2
 terminated:false
 S = 1
F(S) 30: READ P[S]
 S: 1
 P(1) = -2
F(S) 40: PRINT P[S];
 S: 1
 P(1): -2
-2 
F(S) 50: NEXT S
 S: 1
 terminated:true
60: PRINT "INTEGRAL ZERO(S):  ";
INTEGRAL ZERO(S):  
70: LET K = 0
 K = 0
F(X) 80: FOR X = -P[1] TO P[1] STEP SGN(P[1])
 P(1): -2
 X = 2
 -P[1] = 2
 P[1] = -2
 SGN(P[1]) = -1
 terminated:false
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 2
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -2
 X: 2
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 2
 P(4): 1
 P(3): 1
 P(2): -5
 P(1): -2
 FNP(X) <> 0: false
F(X) 120: PRINT X;
 X: 2
 2 
F(X) 130: LET K = 1
 K = 1
F(X) 140: NEXT X
 X: 2
 terminated:false
 X = 1
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 1
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -2
 X: 1
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 1
 P(4): 1
 P(3): 1
 P(2): -5
 P(1): -2
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 1
 terminated:false
 X = 0
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 0
 X = 0: true
F(X) 140: NEXT X
 X: 0
 terminated:false
 X = -1
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -1
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -2
 X: -1
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -1
 P(4): 1
 P(3): 1
 P(2): -5
 P(1): -2
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -1
 terminated:false
 X = -2
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -2
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -2
 X: -2
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -2
 P(4): 1
 P(3): 1
 P(2): -5
 P(1): -2
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -2
 terminated:true
150: IF K = 1 THEN 20
 K: 1
 K = 1: true
20: PRINT

22: PRINT

F(S) 25: FOR S = 4 TO 1 STEP -1
 S = 4
 -1 = -1
 terminated:false
F(S) 30: READ P[S]
 S: 4
 P(4) = 1
F(S) 40: PRINT P[S];
 S: 4
 P(4): 1
 1 
F(S) 50: NEXT S
 S: 4
 terminated:false
 S = 3
F(S) 30: READ P[S]
 S: 3
 P(3) = -2
F(S) 40: PRINT P[S];
 S: 3
 P(3): -2
-2 
F(S) 50: NEXT S
 S: 3
 terminated:false
 S = 2
F(S) 30: READ P[S]
 S: 2
 P(2) = 3
F(S) 40: PRINT P[S];
 S: 2
 P(2): 3
 3 
F(S) 50: NEXT S
 S: 2
 terminated:false
 S = 1
F(S) 30: READ P[S]
 S: 1
 P(1) = -4
F(S) 40: PRINT P[S];
 S: 1
 P(1): -4
-4 
F(S) 50: NEXT S
 S: 1
 terminated:true
60: PRINT "INTEGRAL ZERO(S):  ";
INTEGRAL ZERO(S):  
70: LET K = 0
 K = 0
F(X) 80: FOR X = -P[1] TO P[1] STEP SGN(P[1])
 P(1): -4
 X = 4
 -P[1] = 4
 P[1] = -4
 SGN(P[1]) = -1
 terminated:false
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 4
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -4
 X: 4
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 4
 P(4): 1
 P(3): -2
 P(2): 3
 P(1): -4
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 4
 terminated:false
 X = 3
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 3
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -4
 X: 3
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: 3
 terminated:false
 X = 2
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 2
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -4
 X: 2
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 2
 P(4): 1
 P(3): -2
 P(2): 3
 P(1): -4
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 2
 terminated:false
 X = 1
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 1
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -4
 X: 1
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 1
 P(4): 1
 P(3): -2
 P(2): 3
 P(1): -4
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 1
 terminated:false
 X = 0
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 0
 X = 0: true
F(X) 140: NEXT X
 X: 0
 terminated:false
 X = -1
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -1
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -4
 X: -1
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -1
 P(4): 1
 P(3): -2
 P(2): 3
 P(1): -4
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -1
 terminated:false
 X = -2
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -2
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -4
 X: -2
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -2
 P(4): 1
 P(3): -2
 P(2): 3
 P(1): -4
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -2
 terminated:false
 X = -3
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -3
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -4
 X: -3
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: -3
 terminated:false
 X = -4
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -4
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): -4
 X: -4
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -4
 P(4): 1
 P(3): -2
 P(2): 3
 P(1): -4
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -4
 terminated:true
150: IF K = 1 THEN 20
 K: 0
 K = 1: false
160: PRINT "NONE FOUND";
NONE FOUND
165: GOTO 20
20: PRINT

22: PRINT

F(S) 25: FOR S = 4 TO 1 STEP -1
 S = 4
 -1 = -1
 terminated:false
F(S) 30: READ P[S]
 S: 4
 P(4) = 2
F(S) 40: PRINT P[S];
 S: 4
 P(4): 2
 2 
F(S) 50: NEXT S
 S: 4
 terminated:false
 S = 3
F(S) 30: READ P[S]
 S: 3
 P(3) = -3
F(S) 40: PRINT P[S];
 S: 3
 P(3): -3
-3 
F(S) 50: NEXT S
 S: 3
 terminated:false
 S = 2
F(S) 30: READ P[S]
 S: 2
 P(2) = -10
F(S) 40: PRINT P[S];
 S: 2
 P(2): -10
-10 
F(S) 50: NEXT S
 S: 2
 terminated:false
 S = 1
F(S) 30: READ P[S]
 S: 1
 P(1) = 3
F(S) 40: PRINT P[S];
 S: 1
 P(1): 3
 3 
F(S) 50: NEXT S
 S: 1
 terminated:true
60: PRINT "INTEGRAL ZERO(S):  ";
INTEGRAL ZERO(S):  
70: LET K = 0
 K = 0
F(X) 80: FOR X = -P[1] TO P[1] STEP SGN(P[1])
 P(1): 3
 X = -3
 -P[1] = -3
 P[1] = 3
 SGN(P[1]) = 1
 terminated:false
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -3
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 3
 X: -3
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -3
 P(4): 2
 P(3): -3
 P(2): -10
 P(1): 3
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -3
 terminated:false
 X = -2
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -2
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 3
 X: -2
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: -2
 terminated:false
 X = -1
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: -1
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 3
 X: -1
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: -1
 P(4): 2
 P(3): -3
 P(2): -10
 P(1): 3
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: -1
 terminated:false
 X = 0
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 0
 X = 0: true
F(X) 140: NEXT X
 X: 0
 terminated:false
 X = 1
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 1
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 3
 X: 1
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 1
 P(4): 2
 P(3): -3
 P(2): -10
 P(1): 3
 FNP(X) <> 0: true
F(X) 140: NEXT X
 X: 1
 terminated:false
 X = 2
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 2
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 3
 X: 2
 P[1] / X <> INT(P[1] / X): true
F(X) 140: NEXT X
 X: 2
 terminated:false
 X = 3
F(X) 88: REM LINE 90 PREVENTS AN ERROR MESSAGE CAUSED BY
F(X) 90: IF X = 0 THEN 140
 X: 3
 X = 0: false
F(X) 100: IF P[1] / X <> INT(P[1] / X) THEN 140
 P(1): 3
 X: 3
 P[1] / X <> INT(P[1] / X): false
F(X) 110: IF FNP(X) <> 0 THEN 140
 X: 3
 P(4): 2
 P(3): -3
 P(2): -10
 P(1): 3
 FNP(X) <> 0: false
F(X) 120: PRINT X;
 X: 3
 3 
F(X) 130: LET K = 1
 K = 1
F(X) 140: NEXT X
 X: 3
 terminated:true
150: IF K = 1 THEN 20
 K: 1
 K = 1: true
20: PRINT

22: PRINT

F(S) 25: FOR S = 4 TO 1 STEP -1
 S = 4
 -1 = -1
 terminated:false
F(S) 30: READ P[S]
 S: 4
Error 103 Out of data in line 30

