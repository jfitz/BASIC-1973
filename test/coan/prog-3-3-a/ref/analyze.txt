Statistics:

Number of lines: 50
Number of valid statements: 46
Number of comments: 4
Number of executable statements: 44

Complexity:

Comment density: 0.087
Comprehension effort: 110
McCabe complexity: 8
Halstead complexity:
 length: 150
 volume: 574.296
 difficulty: 10.338
 effort: 5936.981
 language: 5.374
 intelligence: 55.553
 time: 5.497

(0 1) 8 REM   WE ARE READING FOUR ITEMS OF DATA WITH A LOOP
  Origs: 
  Dests: 
(1 3) 10 FOR S = 1 TO 4
  Origs: :start
  Dests: 20:fornext, 30:fornext
(1 2) 20 READ L[S]
  Origs: 10:fornext
  Dests: 30:auto
(0 1) 30 NEXT S
  Origs: 10:fornext, 20:auto
  Dests: 38:auto
(0 2) 38 PRINT "WE CAN PRINT THE ITEMS OF THE LIST EXPLICITLY"
  Origs: 30:auto
  Dests: 40:auto
(0 2) 40 PRINT "L[1]  L[2]  L[3]  L[4]"
  Origs: 38:auto
  Dests: 50:auto
(0 5) 50 PRINT L[1]; L[2]; L[3]; L[4]
  Origs: 40:auto
  Dests: 60:auto
(0 2) 60 PRINT
  Origs: 50:auto
  Dests: 70:auto
(0 2) 70 PRINT "WE CAN ALSO USE A LOOP.  THE LONGER THE LIST THE BETTER"
  Origs: 60:auto
  Dests: 80:auto
(0 2) 80 PRINT "BEING ABLE TO USE A LOOP IS"
  Origs: 70:auto
  Dests: 90:auto
(1 3) 90 FOR X = 1 TO 4
  Origs: 80:auto
  Dests: 100:fornext, 110:fornext
(0 2) 100 PRINT L[X];
  Origs: 90:fornext
  Dests: 110:auto
(0 1) 110 NEXT X
  Origs: 90:fornext, 100:auto
  Dests: 130:auto
(0 2) 130 PRINT
  Origs: 110:auto
  Dests: 135:auto
(0 2) 135 PRINT
  Origs: 130:auto
  Dests: 140:auto
(0 2) 140 PRINT "WE CAN OPERATE ON THE NUMBERS IN THE LIST"
  Origs: 135:auto
  Dests: 145:auto
(0 2) 145 PRINT "  B   L[B]  B*L[B]"
  Origs: 140:auto
  Dests: 150:auto
(1 3) 150 FOR B = 1 TO 4
  Origs: 145:auto
  Dests: 155:fornext, 160:fornext
(0 5) 155 PRINT B; L[B]; B * L[B]
  Origs: 150:fornext
  Dests: 160:auto
(0 1) 160 NEXT B
  Origs: 150:fornext, 155:auto
  Dests: 170:auto
(0 2) 170 PRINT
  Origs: 160:auto
  Dests: 180:auto
(0 2) 180 PRINT "WE CAN PRINT THE LIST BACKWARDS WITH FOR X=4 TO 1 STEP -1"
  Origs: 170:auto
  Dests: 190:auto
(1 5) 190 FOR X = 4 TO 1 STEP -1
  Origs: 180:auto
  Dests: 200:fornext, 210:fornext
(0 2) 200 PRINT L[X];
  Origs: 190:fornext
  Dests: 210:auto
(0 1) 210 NEXT X
  Origs: 190:fornext, 200:auto
  Dests: 220:auto
(0 2) 220 PRINT
  Origs: 210:auto
  Dests: 225:auto
(0 2) 225 PRINT
  Origs: 220:auto
  Dests: 230:auto
(0 2) 230 PRINT "WE CAN RELOCATE ITEMS IN THE LIST"
  Origs: 225:auto
  Dests: 240:auto
(0 2) 240 PRINT "250 LET Z=L[1], 260 LET L[1]=L[2] AND 270 LET L[2]=Z"
  Origs: 230:auto
  Dests: 245:auto
(0 2) 245 PRINT "GIVE THE FOLLOWING RESULT"
  Origs: 240:auto
  Dests: 250:auto
(0 3) 250 LET Z = L[1]
  Origs: 245:auto
  Dests: 252:auto
(0 1) 252 REM **HERE WE ARE STORING THE VALUE OF L[1] IN Z
  Origs: 250:auto
  Dests: 260:auto
(0 3) 260 LET L[1] = L[2]
  Origs: 252:auto
  Dests: 262:auto
(0 1) 262 REM   WE HAVE PUT THE VALUE OF L[2] INTO L[1]
  Origs: 260:auto
  Dests: 270:auto
(0 3) 270 LET L[2] = Z
  Origs: 262:auto
  Dests: 272:auto
(0 1) 272 REM   HERE THE OLD VALUE OF L[1] IS PUT INTO L[2] FROM Z
  Origs: 270:auto
  Dests: 280:auto
(0 3) 280 PRINT "L[1] ="; L[1]
  Origs: 272:auto
  Dests: 290:auto
(0 3) 290 PRINT "L[2] ="; L[2]
  Origs: 280:auto
  Dests: 300:auto
(0 2) 300 PRINT "LOOK CAREFULLY AT THE ORIGINAL LIST"
  Origs: 290:auto
  Dests: 310:auto
(0 2) 310 PRINT "WE HAVE EXCHANGED ITEMS ONE AND TWO"
  Origs: 300:auto
  Dests: 320:auto
(0 2) 320 PRINT
  Origs: 310:auto
  Dests: 330:auto
(0 2) 330 PRINT "WE CAN PUSH EVERY NUMBER UP FOUR LOCATIONS IN THE LIST"
  Origs: 320:auto
  Dests: 340:auto
(1 3) 340 FOR P = 1 TO 4
  Origs: 330:auto
  Dests: 350:fornext, 360:fornext
(0 3) 350 LET L[P + 4] = L[P]
  Origs: 340:fornext
  Dests: 360:auto
(0 1) 360 NEXT P
  Origs: 340:fornext, 350:auto
  Dests: 370:auto
(1 3) 370 FOR N = 1 TO 8
  Origs: 360:auto
  Dests: 380:fornext, 390:fornext
(0 2) 380 PRINT L[N];
  Origs: 370:fornext
  Dests: 390:auto
(0 1) 390 NEXT N
  Origs: 370:fornext, 380:auto
  Dests: 500:auto
(0 3) 500 DATA 4, 9, -92, 8
  Origs: 390:auto
  Dests: 9999:auto
(0 1) 9999 END
  Origs: 500:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

