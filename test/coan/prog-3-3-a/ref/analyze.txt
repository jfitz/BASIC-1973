8 (0 1) REM   WE ARE READING FOUR ITEMS OF DATA WITH A LOOP
  Origs: 
  Dests: 
10 F(S:10) (1 3) FOR S = 1 TO 4
  Origs: :start
  Dests: 20:fornext, 30:fornext
20 F(S:10) (1 2) READ L[S]
  Origs: 10:fornext
  Dests: 30:auto
30 F(S:10) (0 1) NEXT S
  Origs: 10:fornext, 20:auto
  Dests: 38:auto
38 (0 2) PRINT "WE CAN PRINT THE ITEMS OF THE LIST EXPLICITLY"
  Origs: 30:auto
  Dests: 40:auto
40 (0 2) PRINT "L[1]  L[2]  L[3]  L[4]"
  Origs: 38:auto
  Dests: 50:auto
50 (0 5) PRINT L[1]; L[2]; L[3]; L[4]
  Origs: 40:auto
  Dests: 60:auto
60 (0 2) PRINT
  Origs: 50:auto
  Dests: 70:auto
70 (0 2) PRINT "WE CAN ALSO USE A LOOP.  THE LONGER THE LIST THE BETTER"
  Origs: 60:auto
  Dests: 80:auto
80 (0 2) PRINT "BEING ABLE TO USE A LOOP IS"
  Origs: 70:auto
  Dests: 90:auto
90 F(X:90) (1 3) FOR X = 1 TO 4
  Origs: 80:auto
  Dests: 100:fornext, 110:fornext
100 F(X:90) (0 2) PRINT L[X];
  Origs: 90:fornext
  Dests: 110:auto
110 F(X:90) (0 1) NEXT X
  Origs: 90:fornext, 100:auto
  Dests: 130:auto
130 (0 2) PRINT
  Origs: 110:auto
  Dests: 135:auto
135 (0 2) PRINT
  Origs: 130:auto
  Dests: 140:auto
140 (0 2) PRINT "WE CAN OPERATE ON THE NUMBERS IN THE LIST"
  Origs: 135:auto
  Dests: 145:auto
145 (0 2) PRINT "  B   L[B]  B*L[B]"
  Origs: 140:auto
  Dests: 150:auto
150 F(B:150) (1 3) FOR B = 1 TO 4
  Origs: 145:auto
  Dests: 155:fornext, 160:fornext
155 F(B:150) (0 5) PRINT B; L[B]; B * L[B]
  Origs: 150:fornext
  Dests: 160:auto
160 F(B:150) (0 1) NEXT B
  Origs: 150:fornext, 155:auto
  Dests: 170:auto
170 (0 2) PRINT
  Origs: 160:auto
  Dests: 180:auto
180 (0 2) PRINT "WE CAN PRINT THE LIST BACKWARDS WITH FOR X=4 TO 1 STEP -1"
  Origs: 170:auto
  Dests: 190:auto
190 F(X:190) (1 5) FOR X = 4 TO 1 STEP -1
  Origs: 180:auto
  Dests: 200:fornext, 210:fornext
200 F(X:190) (0 2) PRINT L[X];
  Origs: 190:fornext
  Dests: 210:auto
210 F(X:190) (0 1) NEXT X
  Origs: 190:fornext, 200:auto
  Dests: 220:auto
220 (0 2) PRINT
  Origs: 210:auto
  Dests: 225:auto
225 (0 2) PRINT
  Origs: 220:auto
  Dests: 230:auto
230 (0 2) PRINT "WE CAN RELOCATE ITEMS IN THE LIST"
  Origs: 225:auto
  Dests: 240:auto
240 (0 2) PRINT "250 LET Z=L[1], 260 LET L[1]=L[2] AND 270 LET L[2]=Z"
  Origs: 230:auto
  Dests: 245:auto
245 (0 2) PRINT "GIVE THE FOLLOWING RESULT"
  Origs: 240:auto
  Dests: 250:auto
250 (0 3) LET Z = L[1]
  Origs: 245:auto
  Dests: 260:auto
252 (0 1) REM **HERE WE ARE STORING THE VALUE OF L[1] IN Z
  Origs: 
  Dests: 
260 (0 3) LET L[1] = L[2]
  Origs: 250:auto
  Dests: 270:auto
262 (0 1) REM   WE HAVE PUT THE VALUE OF L[2] INTO L[1]
  Origs: 
  Dests: 
270 (0 3) LET L[2] = Z
  Origs: 260:auto
  Dests: 280:auto
272 (0 1) REM   HERE THE OLD VALUE OF L[1] IS PUT INTO L[2] FROM Z
  Origs: 
  Dests: 
280 (0 3) PRINT "L[1] ="; L[1]
  Origs: 270:auto
  Dests: 290:auto
290 (0 3) PRINT "L[2] ="; L[2]
  Origs: 280:auto
  Dests: 300:auto
300 (0 2) PRINT "LOOK CAREFULLY AT THE ORIGINAL LIST"
  Origs: 290:auto
  Dests: 310:auto
310 (0 2) PRINT "WE HAVE EXCHANGED ITEMS ONE AND TWO"
  Origs: 300:auto
  Dests: 320:auto
320 (0 2) PRINT
  Origs: 310:auto
  Dests: 330:auto
330 (0 2) PRINT "WE CAN PUSH EVERY NUMBER UP FOUR LOCATIONS IN THE LIST"
  Origs: 320:auto
  Dests: 340:auto
340 F(P:340) (1 3) FOR P = 1 TO 4
  Origs: 330:auto
  Dests: 350:fornext, 360:fornext
350 F(P:340) (0 3) LET L[P + 4] = L[P]
  Origs: 340:fornext
  Dests: 360:auto
360 F(P:340) (0 1) NEXT P
  Origs: 340:fornext, 350:auto
  Dests: 370:auto
370 F(N:370) (1 3) FOR N = 1 TO 8
  Origs: 360:auto
  Dests: 380:fornext, 390:fornext
380 F(N:370) (0 2) PRINT L[N];
  Origs: 370:fornext
  Dests: 390:auto
390 F(N:370) (0 1) NEXT N
  Origs: 370:fornext, 380:auto
  Dests: 9999:auto
500 (0 3) DATA 4, 9, -92, 8
  Origs: 
  Dests: 
9999 (0 1) END
  Origs: 390:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

