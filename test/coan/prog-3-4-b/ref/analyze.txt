Statistics:

Number of lines: 32
Number of valid statements: 27
Number of comments: 5
Number of executable statements: 26

Complexity:

Comment density: 0.185
Comprehension effort: 66
McCabe complexity: 9
Halstead complexity:
 length: 110
 volume: 400.134
 difficulty: 10.893
 effort: 4358.608
 language: 3.372
 intelligence: 36.734
 time: 4.036

10 (0 1) REM  WE ARE READING THE LIST FROM DATA
  Origs: 
  Dests: 
20 F(X) (1 3) FOR X = 1 TO 10
  Origs: :start
  Dests: 30:fornext, 40:fornext
30 F(X) (1 2) READ L[X]
  Origs: 20:fornext
  Dests: 40:auto
40 F(X) (0 1) NEXT X
  Origs: 20:fornext, 30:auto
  Dests: 50:auto
50 (0 2) PRINT "HERE IS THE LIST IN ORIGINAL ORDER"
  Origs: 40:auto
  Dests: 60:auto
60 F(Y) (1 3) FOR Y = 1 TO 10
  Origs: 50:auto
  Dests: 70:fornext, 80:fornext
70 F(Y) (0 2) PRINT L[Y];
  Origs: 60:fornext
  Dests: 80:auto
80 F(Y) (0 1) NEXT Y
  Origs: 60:fornext, 70:auto
  Dests: 90:auto
90 (0 2) PRINT
  Origs: 80:auto
  Dests: 95:auto
95 (0 2) PRINT "HERE WE ARE ARRANGING THE LIST"
  Origs: 90:auto
  Dests: 110:auto
100 (0 1) REM  NOW WE TEST PAIRS OF NUMBERS TO SEE IF THEY ARE IN ORDER
  Origs: 
  Dests: 
110 F(I) (1 3) FOR I = 1 TO 9
  Origs: 95:auto
  Dests: 120:fornext, 400:fornext
118 (0 1) REM  WHY DON'T WE SAY FOR I-1 TO 10????
  Origs: 
  Dests: 
120 F(I,J) (1 4) FOR J = I + 1 TO 10
  Origs: 110:fornext
  Dests: 130:fornext, 300:fornext
130 F(I,J) (1 4) IF L[I] <= L[J] THEN 300
  Origs: 120:fornext
  Dests: 140:auto, 300:ifthen
140 F(I,J) (0 3) LET S = L[I]
  Origs: 130:auto
  Dests: 150:auto
150 F(I,J) (0 3) LET L[I] = L[J]
  Origs: 140:auto
  Dests: 160:auto
160 F(I,J) (0 3) LET L[J] = S
  Origs: 150:auto
  Dests: 200:auto
170 (0 1) REM  WE HAVE REVERSED TWO ELEMENTS OF THE LIST
  Origs: 
  Dests: 
180 (0 1) REM ****  SEE PROGRAM LIST1  ****
  Origs: 
  Dests: 
200 F(I,J,Y) (1 3) FOR Y = 1 TO 10
  Origs: 160:auto
  Dests: 210:fornext, 220:fornext
210 F(I,J,Y) (0 2) PRINT L[Y];
  Origs: 200:fornext
  Dests: 220:auto
220 F(I,J,Y) (0 1) NEXT Y
  Origs: 200:fornext, 210:auto
  Dests: 230:auto
230 F(I,J) (0 2) PRINT
  Origs: 220:auto
  Dests: 300:auto
300 F(I,J) (0 1) NEXT J
  Origs: 120:fornext, 130:ifthen, 230:auto
  Dests: 400:auto
400 F(I) (0 1) NEXT I
  Origs: 110:fornext, 300:auto
  Dests: 405:auto
405 (0 2) PRINT "AND HERE IS THE LIST IN ORDER FROM SMALLEST TO GREATEST"
  Origs: 400:auto
  Dests: 410:auto
410 F(Y) (1 3) FOR Y = 1 TO 10
  Origs: 405:auto
  Dests: 420:fornext, 430:fornext
420 F(Y) (0 2) PRINT L[Y];
  Origs: 410:fornext
  Dests: 430:auto
430 F(Y) (0 1) NEXT Y
  Origs: 410:fornext, 420:auto
  Dests: 999:auto
500 (0 4) DATA 6, -19, 28, 20, -32, 74, 19, 28, 23, 43
  Origs: 
  Dests: 
999 (0 1) END
  Origs: 430:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

