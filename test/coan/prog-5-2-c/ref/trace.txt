10: LET A = 1
 A = 1
20: FOR R = 1 TO 3
 R = 1
 terminated:false
30: FOR C = 1 TO 5
 C = 1
 terminated:false
40: LET A[R, C] = A
 R: 1
 C: 1
 A: 1
 A(1,1) = 1
50: LET A = A + 1
 A: 1
 A = 2
60: NEXT C
 C: 1
 terminated:false
 C = 2
40: LET A[R, C] = A
 R: 1
 C: 2
 A: 2
 A(1,2) = 2
50: LET A = A + 1
 A: 2
 A = 3
60: NEXT C
 C: 2
 terminated:false
 C = 3
40: LET A[R, C] = A
 R: 1
 C: 3
 A: 3
 A(1,3) = 3
50: LET A = A + 1
 A: 3
 A = 4
60: NEXT C
 C: 3
 terminated:false
 C = 4
40: LET A[R, C] = A
 R: 1
 C: 4
 A: 4
 A(1,4) = 4
50: LET A = A + 1
 A: 4
 A = 5
60: NEXT C
 C: 4
 terminated:false
 C = 5
40: LET A[R, C] = A
 R: 1
 C: 5
 A: 5
 A(1,5) = 5
50: LET A = A + 1
 A: 5
 A = 6
60: NEXT C
 C: 5
 terminated:true
70: NEXT R
 R: 1
 terminated:false
 R = 2
30: FOR C = 1 TO 5
 C = 1
 terminated:false
40: LET A[R, C] = A
 R: 2
 C: 1
 A: 6
 A(2,1) = 6
50: LET A = A + 1
 A: 6
 A = 7
60: NEXT C
 C: 1
 terminated:false
 C = 2
40: LET A[R, C] = A
 R: 2
 C: 2
 A: 7
 A(2,2) = 7
50: LET A = A + 1
 A: 7
 A = 8
60: NEXT C
 C: 2
 terminated:false
 C = 3
40: LET A[R, C] = A
 R: 2
 C: 3
 A: 8
 A(2,3) = 8
50: LET A = A + 1
 A: 8
 A = 9
60: NEXT C
 C: 3
 terminated:false
 C = 4
40: LET A[R, C] = A
 R: 2
 C: 4
 A: 9
 A(2,4) = 9
50: LET A = A + 1
 A: 9
 A = 10
60: NEXT C
 C: 4
 terminated:false
 C = 5
40: LET A[R, C] = A
 R: 2
 C: 5
 A: 10
 A(2,5) = 10
50: LET A = A + 1
 A: 10
 A = 11
60: NEXT C
 C: 5
 terminated:true
70: NEXT R
 R: 2
 terminated:false
 R = 3
30: FOR C = 1 TO 5
 C = 1
 terminated:false
40: LET A[R, C] = A
 R: 3
 C: 1
 A: 11
 A(3,1) = 11
50: LET A = A + 1
 A: 11
 A = 12
60: NEXT C
 C: 1
 terminated:false
 C = 2
40: LET A[R, C] = A
 R: 3
 C: 2
 A: 12
 A(3,2) = 12
50: LET A = A + 1
 A: 12
 A = 13
60: NEXT C
 C: 2
 terminated:false
 C = 3
40: LET A[R, C] = A
 R: 3
 C: 3
 A: 13
 A(3,3) = 13
50: LET A = A + 1
 A: 13
 A = 14
60: NEXT C
 C: 3
 terminated:false
 C = 4
40: LET A[R, C] = A
 R: 3
 C: 4
 A: 14
 A(3,4) = 14
50: LET A = A + 1
 A: 14
 A = 15
60: NEXT C
 C: 4
 terminated:false
 C = 5
40: LET A[R, C] = A
 R: 3
 C: 5
 A: 15
 A(3,5) = 15
50: LET A = A + 1
 A: 15
 A = 16
60: NEXT C
 C: 5
 terminated:true
70: NEXT R
 R: 3
 terminated:true
90: PRINT "WE PRINT THE ORIGINAL ARRAY"
WE PRINT THE ORIGINAL ARRAY
100: GOSUB 900
(900) 900: FOR R = 1 TO 3
 R = 1
 terminated:false
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 1
 C: 1
 A(1,1): 1
 1 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 1
 C: 2
 A(1,2): 2
 2 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 1
 C: 3
 A(1,3): 3
 3 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 1
 C: 4
 A(1,4): 4
 4 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 1
 C: 5
 A(1,5): 5
 5 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 1
 terminated:false
 R = 2
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 2
 C: 1
 A(2,1): 6
 6 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 2
 C: 2
 A(2,2): 7
 7 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 2
 C: 3
 A(2,3): 8
 8 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 2
 C: 4
 A(2,4): 9
 9 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 2
 C: 5
 A(2,5): 10
 10 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 2
 terminated:false
 R = 3
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 3
 C: 1
 A(3,1): 11
 11 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 3
 C: 2
 A(3,2): 12
 12 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 3
 C: 3
 A(3,3): 13
 13 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 3
 C: 4
 A(3,4): 14
 14 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 3
 C: 5
 A(3,5): 15
 15 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 3
 terminated:true
(900) 970: RETURN
110: PRINT "WE CAN MULTIPLY EVERY ELEMENT IN THE 4TH COLUMN BY 6"
WE CAN MULTIPLY EVERY ELEMENT IN THE 4TH COLUMN BY 6
120: FOR R = 1 TO 3
 R = 1
 terminated:false
130: LET A[R, 4] = A[R, 4] * 6
 R: 1
 A(1,4): 4
 A(1,4) = 24
140: NEXT R
 R: 1
 terminated:false
 R = 2
130: LET A[R, 4] = A[R, 4] * 6
 R: 2
 A(2,4): 9
 A(2,4) = 54
140: NEXT R
 R: 2
 terminated:false
 R = 3
130: LET A[R, 4] = A[R, 4] * 6
 R: 3
 A(3,4): 14
 A(3,4) = 84
140: NEXT R
 R: 3
 terminated:true
150: GOSUB 900
(900) 900: FOR R = 1 TO 3
 R = 1
 terminated:false
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 1
 C: 1
 A(1,1): 1
 1 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 1
 C: 2
 A(1,2): 2
 2 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 1
 C: 3
 A(1,3): 3
 3 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 1
 C: 4
 A(1,4): 24
 24 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 1
 C: 5
 A(1,5): 5
 5 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 1
 terminated:false
 R = 2
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 2
 C: 1
 A(2,1): 6
 6 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 2
 C: 2
 A(2,2): 7
 7 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 2
 C: 3
 A(2,3): 8
 8 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 2
 C: 4
 A(2,4): 54
 54 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 2
 C: 5
 A(2,5): 10
 10 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 2
 terminated:false
 R = 3
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 3
 C: 1
 A(3,1): 11
 11 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 3
 C: 2
 A(3,2): 12
 12 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 3
 C: 3
 A(3,3): 13
 13 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 3
 C: 4
 A(3,4): 84
 84 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 3
 C: 5
 A(3,5): 15
 15 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 3
 terminated:true
(900) 970: RETURN
160: PRINT "WE CAN SUBTRACT THE 3RD ROW FROM THE 2ND ROW"
WE CAN SUBTRACT THE 3RD ROW FROM THE 2ND ROW
170: PRINT "AND PUT THE RESULT IN THE 3RD ROW"
AND PUT THE RESULT IN THE 3RD ROW
180: FOR C = 1 TO 5
 C = 1
 terminated:false
190: LET A[3, C] = A[2, C] - A[3, C]
 C: 1
 A(2,1): 6
 A(3,1): 11
 A(3,1) = -5
200: NEXT C
 C: 1
 terminated:false
 C = 2
190: LET A[3, C] = A[2, C] - A[3, C]
 C: 2
 A(2,2): 7
 A(3,2): 12
 A(3,2) = -5
200: NEXT C
 C: 2
 terminated:false
 C = 3
190: LET A[3, C] = A[2, C] - A[3, C]
 C: 3
 A(2,3): 8
 A(3,3): 13
 A(3,3) = -5
200: NEXT C
 C: 3
 terminated:false
 C = 4
190: LET A[3, C] = A[2, C] - A[3, C]
 C: 4
 A(2,4): 54
 A(3,4): 84
 A(3,4) = -30
200: NEXT C
 C: 4
 terminated:false
 C = 5
190: LET A[3, C] = A[2, C] - A[3, C]
 C: 5
 A(2,5): 10
 A(3,5): 15
 A(3,5) = -5
200: NEXT C
 C: 5
 terminated:true
210: GOSUB 900
(900) 900: FOR R = 1 TO 3
 R = 1
 terminated:false
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 1
 C: 1
 A(1,1): 1
 1 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 1
 C: 2
 A(1,2): 2
 2 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 1
 C: 3
 A(1,3): 3
 3 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 1
 C: 4
 A(1,4): 24
 24 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 1
 C: 5
 A(1,5): 5
 5 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 1
 terminated:false
 R = 2
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 2
 C: 1
 A(2,1): 6
 6 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 2
 C: 2
 A(2,2): 7
 7 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 2
 C: 3
 A(2,3): 8
 8 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 2
 C: 4
 A(2,4): 54
 54 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 2
 C: 5
 A(2,5): 10
 10 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 2
 terminated:false
 R = 3
(900) 910: FOR C = 1 TO 5
 C = 1
 terminated:false
(900) 920: PRINT A[R, C];
 R: 3
 C: 1
 A(3,1): -5
-5 
(900) 930: NEXT C
 C: 1
 terminated:false
 C = 2
(900) 920: PRINT A[R, C];
 R: 3
 C: 2
 A(3,2): -5
-5 
(900) 930: NEXT C
 C: 2
 terminated:false
 C = 3
(900) 920: PRINT A[R, C];
 R: 3
 C: 3
 A(3,3): -5
-5 
(900) 930: NEXT C
 C: 3
 terminated:false
 C = 4
(900) 920: PRINT A[R, C];
 R: 3
 C: 4
 A(3,4): -30
-30 
(900) 930: NEXT C
 C: 4
 terminated:false
 C = 5
(900) 920: PRINT A[R, C];
 R: 3
 C: 5
 A(3,5): -5
-5 
(900) 930: NEXT C
 C: 5
 terminated:true
(900) 940: PRINT

(900) 950: PRINT

(900) 960: NEXT R
 R: 3
 terminated:true
(900) 970: RETURN
880: STOP
STOP in line 880

