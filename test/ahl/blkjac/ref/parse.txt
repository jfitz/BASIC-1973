10 PRINT "DO YOU WANT INSTRUCTIONS (IF SO TYPE A 1)";
 TextConstant:"DO YOU WANT INSTRUCTIONS (IF SO TYPE A 1)"
 CarriageControl:;
15 INPUT K
 Variable:K -> _
25 IF K<>1 THEN 85
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:85
30 PRINT
 CarriageControl:NL
35 PRINT
 CarriageControl:NL
40 PRINT
 CarriageControl:NL
45 PRINT
 CarriageControl:NL
50 PRINT"THIS IS A GAME OF BLACKJACK, LAS VEGAS STYLE."
 TextConstant:"THIS IS A GAME OF BLACKJACK, LAS VEGAS STYLE."
 CarriageControl:NL
55 PRINT"HERE ARE THE RULES OF THE HOUSE. THE DEALER"
 TextConstant:"HERE ARE THE RULES OF THE HOUSE. THE DEALER"
 CarriageControl:NL
60 PRINT"MUST HIT ON 16 OR LESS AND WILL STAY ON 17 OR"
 TextConstant:"MUST HIT ON 16 OR LESS AND WILL STAY ON 17 OR"
 CarriageControl:NL
65 PRINT"MORE. YOU MAY SPLIT TWO CARDS IF THEY ARE THE"
 TextConstant:"MORE. YOU MAY SPLIT TWO CARDS IF THEY ARE THE"
 CarriageControl:NL
70 PRINT"SAME AND PLAY ONE HAND WITH EACH OF THEM. ALSO"
 TextConstant:"SAME AND PLAY ONE HAND WITH EACH OF THEM. ALSO"
 CarriageControl:NL
75 PRINT"YOU MAY DOUBLE YOUR SET AND RECEIVE EXACTLY ONE"
 TextConstant:"YOU MAY DOUBLE YOUR SET AND RECEIVE EXACTLY ONE"
 CarriageControl:NL
80 PRINT"MORE CARD ANY TIME ON YOUR FIRST HIT, THE TYPING"
 TextConstant:"MORE CARD ANY TIME ON YOUR FIRST HIT, THE TYPING"
 CarriageControl:NL
85 PRINT"INSTRUCTIONS ARE: 0-NO HIT; 1 HIT; 2-DOUBLE; AND"
 TextConstant:"INSTRUCTIONS ARE: 0-NO HIT; 1 HIT; 2-DOUBLE; AND"
 CarriageControl:NL
90 PRINT "3-SPLIT A PAIR."
 TextConstant:"3-SPLIT A PAIR."
 CarriageControl:NL
95 IF K<>1 THEN 155
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:155
100 PRINT"WHEN THE DEALER HAS AN EXPOSED ACE HE WILL ASK"
 TextConstant:"WHEN THE DEALER HAS AN EXPOSED ACE HE WILL ASK"
 CarriageControl:NL
105 PRINT"YOU FOR AN INSURANCE BET, AN INSURANCE BET WILL"
 TextConstant:"YOU FOR AN INSURANCE BET, AN INSURANCE BET WILL"
 CarriageControl:NL
110 PRINT"RISK HALF YOUR BET FOR AN AMOUNT EQUAL TO YOUR BET"
 TextConstant:"RISK HALF YOUR BET FOR AN AMOUNT EQUAL TO YOUR BET"
 CarriageControl:NL
115 PRINT"IF YOU WIN, YOU WIN IF THE DEALER HAS A BLACKJACK"
 TextConstant:"IF YOU WIN, YOU WIN IF THE DEALER HAS A BLACKJACK"
 CarriageControl:NL
120 PRINT"AND LOSE IF HE DOESN'T, THE HOUSE LIMIT IS $500.00"
 TextConstant:"AND LOSE IF HE DOESN'T, THE HOUSE LIMIT IS $500.00"
 CarriageControl:NL
125 PRINT"GOOD LUCK, OH, BY THE WAY, THE DEALER IS NOTED FOR"
 TextConstant:"GOOD LUCK, OH, BY THE WAY, THE DEALER IS NOTED FOR"
 CarriageControl:NL
130 PRINT"DEALING OFF THE BOTTOM OF THE DECK, WATCH HIM, VERY"
 TextConstant:"DEALING OFF THE BOTTOM OF THE DECK, WATCH HIM, VERY"
 CarriageControl:NL
135 PRINT"CLOSELY, HERE HE IS NOW."
 TextConstant:"CLOSELY, HERE HE IS NOW."
 CarriageControl:NL
140 PRINT
 CarriageControl:NL
145 PRINT
 CarriageControl:NL
150 PRINT
 CarriageControl:NL
155 LET K=0
 Variable:K -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
160 LET W1=0
 Variable:W1 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
165 RANDOMIZE
 
170 LET N=INT(1945*RND(0)+1)
 Variable:N -> _
 NumericConstant:1945
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
175 PRINT
 CarriageControl:NL
180 PRINT"ANY TIME YOU WANT ME TO RESHUFFLE THE CARDS SIMPLY"
 TextConstant:"ANY TIME YOU WANT ME TO RESHUFFLE THE CARDS SIMPLY"
 CarriageControl:NL
185 PRINT"TYPE 7777 WHEN I ASK FOR YOUR WAGER AND I'LL BE VERY"
 TextConstant:"TYPE 7777 WHEN I ASK FOR YOUR WAGER AND I'LL BE VERY"
 CarriageControl:NL
190 PRINT"HAPPY TO OBLIGE, O.K., HERE IS THE FIRST HAND."
 TextConstant:"HAPPY TO OBLIGE, O.K., HERE IS THE FIRST HAND."
 CarriageControl:NL
200 LET X=INT(10*RND(0))
 Variable:X -> _
 NumericConstant:10
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
210 DIM D(52),E(5),V(5),T(5),W(5)
 NumericConstant:52
 Declaration:D() -> _()
 NumericConstant:5
 Declaration:E() -> _()
 NumericConstant:5
 Declaration:V() -> _()
 NumericConstant:5
 Declaration:T() -> _()
 NumericConstant:5
 Declaration:W() -> _()
215 FOR A=1 TO 52
 control: Variable:A -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:52"]
220 LET D(A)=0
 Variable:A -> _
 Variable:D(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
225 NEXT A
 Variable:A -> _
230 DIM Q(52)
 NumericConstant:52
 Declaration:Q() -> _()
235 FOR A=0 TO 39 STEP 13 
 control: Variable:A -> _
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:39"]
 step:    ["NumericConstant:13"]
240 FOR C=1 TO 13
 control: Variable:C -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:13"]
245 LET Q(A+C)=C
 Variable:A -> _
 Variable:C -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:Q(_) -> _
 Variable:C -> _
 AssignmentOperator:= _ -> _
250 NEXT C
 Variable:C -> _
255 NEXT A
 Variable:A -> _
260 PRINT
 CarriageControl:NL
265 LET K=K+1
 Variable:K -> _
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
270 FOR P=1 TO 5
 control: Variable:P -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:5"]
275 LET E(P)=0
 Variable:P -> _
 Variable:E(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
280 LET V(P)=0
 Variable:P -> _
 Variable:V(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
285 LET T(P)=0
 Variable:P -> _
 Variable:T(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
290 NEXT P
 Variable:P -> _
295 LET V(3)=1
 NumericConstant:3
 Variable:V(_) -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
300 PRINT
 CarriageControl:NL
305 PRINT
 CarriageControl:NL
310 PRINT
 CarriageControl:NL
315 PRINT"WAGER";
 TextConstant:"WAGER"
 CarriageControl:;
320 LET P=1
 Variable:P -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
325 INPUT W
 Variable:W -> _
330 LET W(2)=W
 NumericConstant:2
 Variable:W(_) -> _
 Variable:W -> _
 AssignmentOperator:= _ -> _
335 IF W<=0 THEN 1685
 Variable:W -> _
 NumericConstant:0
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:1685
340 IF W<=500 THEN 370
 Variable:W -> _
 NumericConstant:500
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:370
345 IF W<>7777 THEN 360
 Variable:W -> _
 NumericConstant:7777
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:360
350 GOSUB 1645
 LineNumber:1645
355 GOTO 315
 WARNING: Branch to line before GOSUB start
 LineNumber:315
360 PRINT"THAT'S TOO MUCH - HOUSE LIMIT IS $500"
 TextConstant:"THAT'S TOO MUCH - HOUSE LIMIT IS $500"
 CarriageControl:NL
365 GOTO 315
 WARNING: Branch to line before GOSUB start
 LineNumber:315
370 PRINT
 CarriageControl:NL
375 PRINT "I SHOW",
 TextConstant:"I SHOW"
 CarriageControl:,
380 GOSUB 865
 LineNumber:865
385 IF E(1)=0 THEN 395
 NumericConstant:1
 Variable:E(_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:395
390 LET V(4)=1
 NumericConstant:4
 Variable:V(_) -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
395 LET V(5)=1
 NumericConstant:5
 Variable:V(_) -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
400 GOSUB 865
 LineNumber:865
405 LET M=X
 Variable:M -> _
 Variable:X -> _
 AssignmentOperator:= _ -> _
410 LET P=2
 Variable:P -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
415 PRINT"FIRST CARD IS",
 TextConstant:"FIRST CARD IS"
 CarriageControl:,
420 GOSUB 865
 LineNumber:865
425 LET G=X
 Variable:G -> _
 Variable:X -> _
 AssignmentOperator:= _ -> _
430 PRINT"NEXT CARD IS",
 TextConstant:"NEXT CARD IS"
 CarriageControl:,
435 GOSUB 865
 LineNumber:865
440 IF V(2)>0 THEN 605
 NumericConstant:2
 Variable:V(_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:605
445 LET S=X 
 Variable:S -> _
 Variable:X -> _
 AssignmentOperator:= _ -> _
450 IF V(3)<>1 THEN 605
 NumericConstant:3
 Variable:V(_) -> _
 NumericConstant:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:605
455 IF T(P)<>21 THEN 505
 Variable:P -> _
 Variable:T(_) -> _
 NumericConstant:21
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:505
460 PRINT "***BLACKJACK***"
 TextConstant:"***BLACKJACK***"
 CarriageControl:NL
465 PRINT
 CarriageControl:NL
470 PRINT"THAT'S GETTING A BIT RIDICULOUS!!!"
 TextConstant:"THAT'S GETTING A BIT RIDICULOUS!!!"
 CarriageControl:NL
475 PRINT
 CarriageControl:NL
480 PRINT "MY HOLE CARD WAS",
 TextConstant:"MY HOLE CARD WAS"
 CarriageControl:,
485 LET X=M
 Variable:X -> _
 Variable:M -> _
 AssignmentOperator:= _ -> _
490 GOSUB 1035
 LineNumber:1035
495 LET W1=W1+1.5*W
 Variable:W1 -> _
 Variable:W1 -> _
 NumericConstant:1.5
 Variable:W -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
500 GOSUB 1335
 LineNumber:1335
505 IF V(4)=0 THEN 570
 NumericConstant:4
 Variable:V(_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:570
510 PRINT"INSURANCE ANYONE   (TYPE 1 OR 0, 1 MEANS YES)"
 TextConstant:"INSURANCE ANYONE   (TYPE 1 OR 0, 1 MEANS YES)"
 CarriageControl:NL
515 INPUT I
 Variable:I -> _
520 PRINT
 CarriageControl:NL
525 IF I=0 THEN 570
 Variable:I -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:570
530 IF T(1)<>21 THEN 555
 NumericConstant:1
 Variable:T(_) -> _
 NumericConstant:21
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:555
535 LET W1=W1+W 
 Variable:W1 -> _
 Variable:W1 -> _
 Variable:W -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
540 PRINT 
 CarriageControl:NL
545 PRINT "YOU WIN $"W;" ON YOUR INSURANCE BET"
 TextConstant:"YOU WIN $"
 CarriageControl:
 Variable:W -> _
 CarriageControl:;
 TextConstant:" ON YOUR INSURANCE BET"
 CarriageControl:NL
550 GOTO 570
 LineNumber:570
555 LET W1=W1-W/2
 Variable:W1 -> _
 Variable:W1 -> _
 Variable:W -> _
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
560 PRINT
 CarriageControl:NL
565 PRINT"YOU LOST $"W/2;" ON YOUR INSURANCE BET - I DON'T HAVE BLACKJACK"
 WARNING: Line exceeds PRETTY width limit 72
 TextConstant:"YOU LOST $"
 CarriageControl:
 Variable:W -> _
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> _
 CarriageControl:;
 TextConstant:" ON YOUR INSURANCE BET - I DON'T HAVE BLACKJACK"
 CarriageControl:NL
570 IF T(1)<>21 THEN 605
 NumericConstant:1
 Variable:T(_) -> _
 NumericConstant:21
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:605
575 PRINT
 CarriageControl:NL
580 PRINT"**I HAVE BLACKJACK**"
 TextConstant:"**I HAVE BLACKJACK**"
 CarriageControl:NL
585 PRINT "MY HOLE CARD WAS",
 TextConstant:"MY HOLE CARD WAS"
 CarriageControl:,
590 LET X=M
 Variable:X -> _
 Variable:M -> _
 AssignmentOperator:= _ -> _
595 GOSUB 1035
 LineNumber:1035
600 GOTO 1300
 LineNumber:1300
605 IF T(P)<=21 THEN 650
 Variable:P -> _
 Variable:T(_) -> _
 NumericConstant:21
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:650
610 IF E(P)>0 THEN 640
 Variable:P -> _
 Variable:E(_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:640
615 PRINT"YOU BUSTED, ";
 TextConstant:"YOU BUSTED, "
 CarriageControl:;
620 PRINT"YOUR TOTAL IS "T(P) 
 TextConstant:"YOUR TOTAL IS "
 CarriageControl:
 Variable:P -> _
 Variable:T(_) -> _
 CarriageControl:NL
625 LET C1=T(P)-5*(INT(T(P)/5))
 Variable:C1 -> _
 Variable:P -> _
 Variable:T(_) -> _
 NumericConstant:5
 Variable:P -> _
 Variable:T(_) -> _
 NumericConstant:5
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
630 IF V(2)=1 THEN 775
 NumericConstant:2
 Variable:V(_) -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:775
635 GOTO 1175
 LineNumber:1175
640 LET E(P)=E(P)-1
 Variable:P -> _
 Variable:E(_) -> _
 Variable:P -> _
 Variable:E(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
645 LET T(P)=T(P)-10
 Variable:P -> _
 Variable:T(_) -> _
 Variable:P -> _
 Variable:T(_) -> _
 NumericConstant:10
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
650 IF V(1)=2 THEN 620
 WARNING: Branch to line before GOSUB start
 NumericConstant:1
 Variable:V(_) -> _
 NumericConstant:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:620
655 LET V(3)=V(3)+1
 NumericConstant:3
 Variable:V(_) -> _
 NumericConstant:3
 Variable:V(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
660 PRINT"HIT ";
 TextConstant:"HIT "
 CarriageControl:;
665 INPUT V(1)
 NumericConstant:1
 Variable:V(_) -> _
670 IF V(1)<>3 THEN 830
 NumericConstant:1
 Variable:V(_) -> _
 NumericConstant:3
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:830
675 IF V(2)>0 THEN 820
 NumericConstant:2
 Variable:V(_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:820
680 IF V(3)<>2 THEN 820
 NumericConstant:3
 Variable:V(_) -> _
 NumericConstant:2
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:820
685 IF Q(G)=Q(8) THEN 700
 Variable:G -> _
 Variable:Q(_) -> _
 NumericConstant:8
 Variable:Q(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:700
690 PRINT"N0W IS THAT A PAIR?"
 TextConstant:"N0W IS THAT A PAIR?"
 CarriageControl:NL
695 GOTO 660
 WARNING: Branch to line before GOSUB start
 LineNumber:660
700 LET V(2)=1
 NumericConstant:2
 Variable:V(_) -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
705 IF Q(G)<>1 THEN 715
 Variable:G -> _
 Variable:Q(_) -> _
 NumericConstant:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:715
710 LET V(1)=2
 NumericConstant:1
 Variable:V(_) -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
715 LET P=3
 Variable:P -> _
 NumericConstant:3
 AssignmentOperator:= =_ -> _
720 PRINT" PLAY HAND ONE NOW"
 TextConstant:" PLAY HAND ONE NOW"
 CarriageControl:NL
725 PRINT"FIRST CARD IS ",
 TextConstant:"FIRST CARD IS "
 CarriageControl:,
730 LET W(3)=W
 NumericConstant:3
 Variable:W(_) -> _
 Variable:W -> _
 AssignmentOperator:= _ -> _
735 LET X=G
 Variable:X -> _
 Variable:G -> _
 AssignmentOperator:= _ -> _
740 GOSUB 750
 LineNumber:750
745 GOTO 430
 WARNING: Branch to line before GOSUB start
 LineNumber:430
750 GOSUB 990
 LineNumber:990
755 GOSUB 1035
 LineNumber:1035
760 LET V(3)=1
 NumericConstant:3
 Variable:V(_) -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
765 LET T(P)=C
 Variable:P -> _
 Variable:T(_) -> _
 Variable:C -> _
 AssignmentOperator:= _ -> _
770 RETURN
 
775 LET P=2
 Variable:P -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
780 LET V(2)=2
 NumericConstant:2
 Variable:V(_) -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
785 PRINT" PLAY HAND TWO NOW"
 TextConstant:" PLAY HAND TWO NOW"
 CarriageControl:NL
790 PRINT"FIRST CARD IS",
 TextConstant:"FIRST CARD IS"
 CarriageControl:,
795 LET X=S
 Variable:X -> _
 Variable:S -> _
 AssignmentOperator:= _ -> _
800 GOSUB 750
 LineNumber:750
805 IF Q(G)=1 THEN 815
 Variable:G -> _
 Variable:Q(_) -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:815
810 LET V(1)=0
 NumericConstant:1
 Variable:V(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
815 GOTO 430
 WARNING: Branch to line before GOSUB start
 LineNumber:430
820 PRINT"NO SPLITS NOW  TRY AGAIN"
 TextConstant:"NO SPLITS NOW  TRY AGAIN"
 CarriageControl:NL
825 GOTO 660
 WARNING: Branch to line before GOSUB start
 LineNumber:660
830 IF V(1)<>2 THEN 855
 NumericConstant:1
 Variable:V(_) -> _
 NumericConstant:2
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:855
835 IF V(3)=2 THEN 850
 NumericConstant:3
 Variable:V(_) -> _
 NumericConstant:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:850
840 PRINT"TOO LATE TO DOUBLE, CHARLIE"
 TextConstant:"TOO LATE TO DOUBLE, CHARLIE"
 CarriageControl:NL
845 GOTO 660
 WARNING: Branch to line before GOSUB start
 LineNumber:660
850 LET W(P)=2*W(P)
 Variable:P -> _
 Variable:W(_) -> _
 NumericConstant:2
 Variable:P -> _
 Variable:W(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
855 IF V(1)>0 THEN 430
 WARNING: Branch to line before GOSUB start
 NumericConstant:1
 Variable:V(_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:430
860 GOTO 620
 WARNING: Branch to line before GOSUB start
 LineNumber:620
865 GOSUB 900
 LineNumber:900
870 LET T(P)=T(P)+C
 Variable:P -> _
 Variable:T(_) -> _
 Variable:P -> _
 Variable:T(_) -> _
 Variable:C -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
875 IF V(5)=0 THEN 890
 NumericConstant:5
 Variable:V(_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:890
880 LET V(5)=0
 NumericConstant:5
 Variable:V(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
885 RETURN
 
890 GOSUB 1035
 LineNumber:1035
895 RETURN
 
900 IF R>=50 THEN 945
 WARNING: Inconsistent GOSUB origins
 Variable:R -> _
 NumericConstant:50
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:945
905 LET N=10*(1+ABS(COS(N+W1)))
 Variable:N -> _
 NumericConstant:10
 NumericConstant:1
 Variable:N -> _
 Variable:W1 -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionCos:COS(_) -> _
 FunctionAbs:ABS(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
910 FOR A=1 TO N
 control: Variable:A -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
915 LET X=INT(52.999999*RND(Y))
 Variable:X -> _
 NumericConstant:52.999999
 Variable:Y -> _
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
920 IF X=0 THEN 915
 Variable:X -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:915
925 NEXT A
 Variable:A -> _
930 IF D(X)=0 THEN 980
 Variable:X -> _
 Variable:D(_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:980
935 LET R=R+1
 Variable:R -> _
 Variable:R -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
940 IF R<50 THEN 900
 Variable:R -> _
 NumericConstant:50
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:900
945 FOR A=1 TO 52
 control: Variable:A -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:52"]
950 IF D(A)=K THEN 960
 Variable:A -> _
 Variable:D(_) -> _
 Variable:K -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:960
955 LET D(A)=0
 Variable:A -> _
 Variable:D(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
960 NEXT A
 Variable:A -> _
965 LET R=0
 Variable:R -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
970 PRINT" I RESHUFFLED ";
 TextConstant:" I RESHUFFLED "
 CarriageControl:;
975 GOTO 900
 LineNumber:900
980 LET R=0
 Variable:R -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
985 LET D(X)=K
 Variable:X -> _
 Variable:D(_) -> _
 Variable:K -> _
 AssignmentOperator:= _ -> _
990 IF Q(X)<>1 THEN 1010
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:X -> _
 Variable:Q(_) -> _
 NumericConstant:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:1010
995 LET C=11
 WARNING: Multiple GOSUB entry points
 Variable:C -> _
 NumericConstant:11
 AssignmentOperator:= =_ -> _
1000 LET E(P)=E(P)+1
 WARNING: Multiple GOSUB entry points
 Variable:P -> _
 Variable:E(_) -> _
 Variable:P -> _
 Variable:E(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1005 RETURN
 WARNING: Multiple GOSUB entry points
 
1010 IF Q(X)>10 THEN 1025
 WARNING: Multiple GOSUB entry points
 Variable:X -> _
 Variable:Q(_) -> _
 NumericConstant:10
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1025
1015 LET C=Q(X)
 WARNING: Multiple GOSUB entry points
 Variable:C -> _
 Variable:X -> _
 Variable:Q(_) -> _
 AssignmentOperator:= _ -> _
1020 RETURN
 WARNING: Multiple GOSUB entry points
 
1025 LET C=10
 WARNING: Multiple GOSUB entry points
 Variable:C -> _
 NumericConstant:10
 AssignmentOperator:= =_ -> _
1030 RETURN
 WARNING: Multiple GOSUB entry points
 
1035 GOSUB 1050
 LineNumber:1050
1040 GOSUB 1120
 LineNumber:1120
1045 RETURN
 
1050 IF Q(X)<>1 THEN 1065
 Variable:X -> _
 Variable:Q(_) -> _
 NumericConstant:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:1065
1055 PRINT" ACE  ";
 TextConstant:" ACE  "
 CarriageControl:;
1060 RETURN
 
1065 IF Q(X)>10 THEN 1080
 Variable:X -> _
 Variable:Q(_) -> _
 NumericConstant:10
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1080
1070 PRINT Q(X);
 Variable:X -> _
 Variable:Q(_) -> _
 CarriageControl:;
1075 RETURN
 
1080 IF Q(X)>11 THEN 1095
 Variable:X -> _
 Variable:Q(_) -> _
 NumericConstant:11
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1095
1085 PRINT " JACK ";
 TextConstant:" JACK "
 CarriageControl:;
1090 RETURN
 
1095 IF Q(X)>12 THEN 1110
 Variable:X -> _
 Variable:Q(_) -> _
 NumericConstant:12
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1110
1100 PRINT" QUEEN";
 TextConstant:" QUEEN"
 CarriageControl:;
1105 RETURN
 
1110 PRINT" KING ";
 TextConstant:" KING "
 CarriageControl:;
1115 RETURN
 
1120 IF X>39 THEN 1145
 Variable:X -> _
 NumericConstant:39
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1145
1125 IF X>26 THEN 1155
 Variable:X -> _
 NumericConstant:26
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1155
1130 IF X>13 THEN 1165
 Variable:X -> _
 NumericConstant:13
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1165
1135 PRINT" OF SPADES"
 TextConstant:" OF SPADES"
 CarriageControl:NL
1140 RETURN
 
1145 PRINT" OF CLUBS"
 TextConstant:" OF CLUBS"
 CarriageControl:NL
1150 RETURN
 
1155 PRINT" OF HEARTS"
 TextConstant:" OF HEARTS"
 CarriageControl:NL
1160 RETURN
 
1165 PRINT" OF DIAMONDS"
 TextConstant:" OF DIAMONDS"
 CarriageControl:NL
1170 RETURN
 
1175 LET P=2
 Variable:P -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
1180 PRINT "MY HOLE CARD WAS",
 TextConstant:"MY HOLE CARD WAS"
 CarriageControl:,
1185 LET X=M
 Variable:X -> _
 Variable:M -> _
 AssignmentOperator:= _ -> _
1190 GOSUB 1035
 LineNumber:1035
1195 IF T(2)<22 THEN 1210
 NumericConstant:2
 Variable:T(_) -> _
 NumericConstant:22
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1210
1200 IF V(2)=0 THEN 1300
 NumericConstant:2
 Variable:V(_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1300
1205 IF T(3)>21 THEN 1300
 NumericConstant:3
 Variable:T(_) -> _
 NumericConstant:21
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1300
1210 LET P=1
 Variable:P -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
1215 IF T(1)<17 THEN 1360
 NumericConstant:1
 Variable:T(_) -> _
 NumericConstant:17
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1360
1220 IF T(1)>17 THEN 1230
 NumericConstant:1
 Variable:T(_) -> _
 NumericConstant:17
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1230
1225 IF E(1)>0 THEN 1360
 NumericConstant:1
 Variable:E(_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1360
1230 IF T(1)>21 THEN 1375
 NumericConstant:1
 Variable:T(_) -> _
 NumericConstant:21
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1375
1235 LET P=2
 Variable:P -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
1240 PRINT"MY TOTAL IS "T(1)
 TextConstant:"MY TOTAL IS "
 CarriageControl:
 NumericConstant:1
 Variable:T(_) -> _
 CarriageControl:NL
1245 IF T(P)>21 THEN 1300
 Variable:P -> _
 Variable:T(_) -> _
 NumericConstant:21
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1300
1250 IF T(1)>21 THEN 1265
 NumericConstant:1
 Variable:T(_) -> _
 NumericConstant:21
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1265
1255 IF T(1)>T(P) THEN 1300
 NumericConstant:1
 Variable:T(_) -> _
 Variable:P -> _
 Variable:T(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1300
1260 IF T(1)=T(P) THEN 1330
 NumericConstant:1
 Variable:T(_) -> _
 Variable:P -> _
 Variable:T(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1330
1265 LET W1=W1+W(P)
 Variable:W1 -> _
 Variable:W1 -> _
 Variable:P -> _
 Variable:W(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1270 IF C1>3 THEN 1445
 Variable:C1 -> _
 NumericConstant:3
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1445
1275 IF C1>2 THEN 1465
 Variable:C1 -> _
 NumericConstant:2
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1465
1280 IF C1>1 THEN 1485
 Variable:C1 -> _
 NumericConstant:1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1485
1285 IF C1>0 THEN 1505
 Variable:C1 -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1505
1290 GOTO 1525
 LineNumber:1525
1295 GOTO 1330
 LineNumber:1330
1300 LET W1=W1-W(P)
 Variable:W1 -> _
 Variable:W1 -> _
 Variable:P -> _
 Variable:W(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1305 IF C1>3 THEN 1545
 Variable:C1 -> _
 NumericConstant:3
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1545
1310 IF C1>2 THEN 1565
 Variable:C1 -> _
 NumericConstant:2
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1565
1315 IF C1>1 THEN 1585
 Variable:C1 -> _
 NumericConstant:1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1585
1320 IF C1>0 THEN 1605
 Variable:C1 -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1605
1325 GOTO 1625
 LineNumber:1625
1330 IF V(2)>0 THEN 1345
 NumericConstant:2
 Variable:V(_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1345
1335 GOSUB 1405
 WARNING: Inconsistent GOSUB origins
 WARNING: GOSUB length exceeds limit 40
 LineNumber:1405
1340 GOTO 265
 WARNING: Branch to line before GOSUB start
 LineNumber:265
1345 LET P=3
 Variable:P -> _
 NumericConstant:3
 AssignmentOperator:= =_ -> _
1350 LET V(2)=0
 NumericConstant:2
 Variable:V(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1355 GOTO 1245
 WARNING: Branch to line before GOSUB start
 LineNumber:1245
1360 PRINT "I DRAW",
 TextConstant:"I DRAW"
 CarriageControl:,
1365 GOSUB 865
 LineNumber:865
1370 GOTO 1210
 WARNING: Branch to line before GOSUB start
 LineNumber:1210
1375 IF E(1)=0 THEN 1395
 NumericConstant:1
 Variable:E(_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1395
1380 LET E(1)=E(1)-1
 NumericConstant:1
 Variable:E(_) -> _
 NumericConstant:1
 Variable:E(_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1385 LET T(1)=T(1)-10
 NumericConstant:1
 Variable:T(_) -> _
 NumericConstant:1
 Variable:T(_) -> _
 NumericConstant:10
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1390 GOTO 1210
 WARNING: Branch to line before GOSUB start
 LineNumber:1210
1395 PRINT"I BUSTED*****"
 TextConstant:"I BUSTED*****"
 CarriageControl:NL
1400 GOTO 1235
 WARNING: Branch to line before GOSUB start
 LineNumber:1235
1405 IF W1<0 THEN 1425
 Variable:W1 -> _
 NumericConstant:0
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1425
1410 IF W1=0 THEN 1435
 Variable:W1 -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1435
1415 PRINT"YOU'RE AHEAD $"W1
 TextConstant:"YOU'RE AHEAD $"
 CarriageControl:
 Variable:W1 -> _
 CarriageControl:NL
1420 RETURN
 
1425 PRINT USING "YOU'RE BEHIND $**##,.##", -W1
 Keyword:USING
 TextConstant:"YOU'RE BEHIND $**##,.##"
 CarriageControl:,
 Variable:W1 -> _
 UnaryOperatorMinus:-(_) -> _
 CarriageControl:NL
1430 RETURN
 
1435 PRINT"YOU'RE EVEN"
 TextConstant:"YOU'RE EVEN"
 CarriageControl:NL
1440 RETURN
 
1445 PRINT
 CarriageControl:NL
1450 PRINT "I MUST HAVE DEALT WRONG."
 TextConstant:"I MUST HAVE DEALT WRONG."
 CarriageControl:NL
1455 PRINT
 CarriageControl:NL
1460 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1465 PRINT
 CarriageControl:NL
1470 PRINT"YOU LUCKED OUT AGAIN."
 TextConstant:"YOU LUCKED OUT AGAIN."
 CarriageControl:NL
1475 PRINT
 CarriageControl:NL
1480 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1485 PRINT
 CarriageControl:NL
1490 PRINT"YOU MUST HAVE BEEN PEEKING."
 TextConstant:"YOU MUST HAVE BEEN PEEKING."
 CarriageControl:NL
1495 PRINT
 CarriageControl:NL
1500 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1505 PRINT
 CarriageControl:NL
1510 PRINT"I COULD LOSE MY JOB THIS WAY."
 TextConstant:"I COULD LOSE MY JOB THIS WAY."
 CarriageControl:NL
1515 PRINT
 CarriageControl:NL
1520 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1525 PRINT
 CarriageControl:NL
1530 PRINT"THE CARDS HAVE TURNED AGAINST ME."
 TextConstant:"THE CARDS HAVE TURNED AGAINST ME."
 CarriageControl:NL
1535 PRINT
 CarriageControl:NL
1540 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1545 PRINT
 CarriageControl:NL
1550 PRINT"THE BOTTOM OF THE DECK STRIKES AGAIN."
 TextConstant:"THE BOTTOM OF THE DECK STRIKES AGAIN."
 CarriageControl:NL
1555 PRINT
 CarriageControl:NL
1560 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1565 PRINT
 CarriageControl:NL
1570 PRINT"A VICTORY FOR US GOOD GUYS."
 TextConstant:"A VICTORY FOR US GOOD GUYS."
 CarriageControl:NL
1575 PRINT
 CarriageControl:NL
1580 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1585 PRINT
 CarriageControl:NL
1590 PRINT"YOU CAN'T BEAT SKILL."
 TextConstant:"YOU CAN'T BEAT SKILL."
 CarriageControl:NL
1595 PRINT
 CarriageControl:NL
1600 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1605 PRINT
 CarriageControl:NL
1610 PRINT"YOU CAN'T WIN 'EM ALL."
 TextConstant:"YOU CAN'T WIN 'EM ALL."
 CarriageControl:NL
1615 PRINT
 CarriageControl:NL
1620 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1625 PRINT
 CarriageControl:NL
1630 PRINT"BABY GETS A NEW PAIR OF SHOES."
 TextConstant:"BABY GETS A NEW PAIR OF SHOES."
 CarriageControl:NL
1635 PRINT
 CarriageControl:NL
1640 GOTO 1330
 WARNING: Branch to line before GOSUB start
 LineNumber:1330
1645 FOR M9=1 TO 52
 control: Variable:M9 -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:52"]
1650 LET D(M9)=0
 Variable:M9 -> _
 Variable:D(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1655 NEXT M9
 Variable:M9 -> _
1660 LET R=0
 Variable:R -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1665 PRINT
 CarriageControl:NL
1670 PRINT" I RESHUFFLED"
 TextConstant:" I RESHUFFLED"
 CarriageControl:NL
1675 PRINT""
 TextConstant:""
 CarriageControl:NL
1680 RETURN
 
1685 END
 WARNING: Terminating statement in GOSUB
 

