100 REM THIS PROGRAM USES A STRATEGY AS PRESENTED IN 'GAMES OF FUN AND
 RemarkToken:THIS PROGRAM USES A STRATEGY AS PRESENTED IN 'GAMES OF FUN AND
105 REM STRATEGY', A PUBLICATION OF THE MATHEMATICAL SERVICES DEPART-
 RemarkToken:STRATEGY', A PUBLICATION OF THE MATHEMATICAL SERVICES DEPART-
110 REM MENT OF COMPUTER CONTROL CO., INC.
 RemarkToken:MENT OF COMPUTER CONTROL CO., INC.
115 PRINT "THIS PROGRAM PLAYS NIM."
 ITEMS
 TextConstant:"THIS PROGRAM PLAYS NIM."
 CarriageControl:NL
120 PRINT "DO YOU WANT INSTRUCTIONS";\INPUT Q$
 ITEMS
 TextConstant:"DO YOU WANT INSTRUCTIONS"
 CarriageControl:;
 ScalarReference:Q$
125 IF Q$="YES" THEN 135\IF Q$="NO" THEN 190
 ScalarValue:Q$
 TextConstant:"YES"
 BinaryOperator:=
 ScalarValue:Q$
 TextConstant:"NO"
 BinaryOperator:=
130 PRINT "TYPE YES OR NO."\INPUT Q$\GOTO 125
 ITEMS
 TextConstant:"TYPE YES OR NO."
 CarriageControl:NL
 ScalarReference:Q$
 LineNumber:125
135 PRINT
 ITEMS
 CarriageControl:NL
140 PRINT "    NIM IS PLAYED BY TWO PEOPLE PLAYING ALTERNATELY, BEFORE"
 ITEMS
 TextConstant:"    NIM IS PLAYED BY TWO PEOPLE PLAYING ALTERNATELY, BEFORE"
 CarriageControl:NL
145 PRINT "THE PLAY STARTS, AN ARBITRARY NUMBER OF STICKS OR OBJECTS IS"
 ITEMS
 TextConstant:"THE PLAY STARTS, AN ARBITRARY NUMBER OF STICKS OR OBJECTS IS"
 CarriageControl:NL
150 PRINT "PUT INTO AN ARBITRARY NUMBER OF PILES, IN ANY DISTRIBUTION"
 ITEMS
 TextConstant:"PUT INTO AN ARBITRARY NUMBER OF PILES, IN ANY DISTRIBUTION"
 CarriageControl:NL
155 PRINT "WHATEVER, THEN EACH PLAYER IN HIS TURN REMOVES AS MANY"
 ITEMS
 TextConstant:"WHATEVER, THEN EACH PLAYER IN HIS TURN REMOVES AS MANY"
 CarriageControl:NL
160 PRINT "STICKS AS HE WISHES FROM ANY PILEBUT FROM ONLY ONE PILE,"
 ITEMS
 TextConstant:"STICKS AS HE WISHES FROM ANY PILEBUT FROM ONLY ONE PILE,"
 CarriageControl:NL
165 PRINT "AND AT LEAST ONE STICK, THE PLAYER WHO TAKES THE LAST STICK"
 ITEMS
 TextConstant:"AND AT LEAST ONE STICK, THE PLAYER WHO TAKES THE LAST STICK"
 CarriageControl:NL
170 PRINT "IS THE WINNER."
 ITEMS
 TextConstant:"IS THE WINNER."
 CarriageControl:NL
175 PRINT "    THIS PROGRAM ALLOWS YOU TO SET UP THE INITIAL ARRANGEMENT"
 ITEMS
 TextConstant:"    THIS PROGRAM ALLOWS YOU TO SET UP THE INITIAL ARRANGEMENT"
 CarriageControl:NL
180 PRINT "OF PILES AND STICKS. IT WILL NOT ACCEPT MORE THAN TWENTY"
 ITEMS
 TextConstant:"OF PILES AND STICKS. IT WILL NOT ACCEPT MORE THAN TWENTY"
 CarriageControl:NL
185 PRINT "PILES OR STICKS IN EACH PILE."
 ITEMS
 TextConstant:"PILES OR STICKS IN EACH PILE."
 CarriageControl:NL
190 RANDOM
 
195 REM-------------------CONFIGURATION INPUT----------------------------
 RemarkToken:-------------------CONFIGURATION INPUT----------------------------
200 DIM X(20,4),S(20),L(20),S2(20),N2(4),C(20),S3(20),V(20)
 NumericConstant:20
 NumericConstant:4
 CompoundDeclaration:X
 NumericConstant:20
 CompoundDeclaration:S
 NumericConstant:20
 CompoundDeclaration:L
 NumericConstant:20
 CompoundDeclaration:S2
 NumericConstant:4
 CompoundDeclaration:N2
 NumericConstant:20
 CompoundDeclaration:C
 NumericConstant:20
 CompoundDeclaration:S3
 NumericConstant:20
 CompoundDeclaration:V
205 PRINT\PRINT "HOW MANY PILES";\INPUT P\IF P>20 THEN 215
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"HOW MANY PILES"
 CarriageControl:;
 ScalarReference:P
 ScalarValue:P
 NumericConstant:20
 BinaryOperator:>
210 IF P>INT(P) THEN 215\IF P<=0 THEN 215\GO TO 220
 ScalarValue:P
 ScalarValue:P
 FunctionInt
 BinaryOperator:>
 ScalarValue:P
 NumericConstant:0
 BinaryOperator:<=
 LineNumber:220
215 PRINT "ILLEGAL PILE NUMBER. "\PRINT\GO TO 205
 ITEMS
 TextConstant:"ILLEGAL PILE NUMBER. "
 CarriageControl:NL
 ITEMS
 CarriageControl:NL
 LineNumber:205
220 PRINT\FOR I=1 TO P
 ITEMS
 CarriageControl:NL
 control: VariableToken:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:P"]
 step:    ["NumericConstant:1"]
225 PRINT "HOW MANY STICKS IN PILE"I;\INPUT L(I)\IF L(I)>20 THEN 235
 ITEMS
 TextConstant:"HOW MANY STICKS IN PILE"
 CarriageControl:
 ScalarValue:I
 CarriageControl:;
 ScalarValue:I
 ScalarReference:L
 ScalarValue:I
 ScalarValue:L
 NumericConstant:20
 BinaryOperator:>
230 IF L(I)>INT(L(I)) THEN 235\IF L(I)<=0 THEN 235\GO TO 240
 ScalarValue:I
 ScalarValue:L
 ScalarValue:I
 ScalarValue:L
 FunctionInt
 BinaryOperator:>
 ScalarValue:I
 ScalarValue:L
 NumericConstant:0
 BinaryOperator:<=
 LineNumber:240
235 PRINT "ILLEGAL STICK NUMBER"\PRINT\GO TO 225
 ITEMS
 TextConstant:"ILLEGAL STICK NUMBER"
 CarriageControl:NL
 ITEMS
 CarriageControl:NL
 LineNumber:225
240 NEXT I
 VariableToken:I
245 FOR I=1 TO P\S(I)=L(I)\G=G+L(I)\NEXT I
 control: VariableToken:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:P"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarReference:S
 ScalarValue:I
 ScalarValue:L
 AssignmentOperator:=
 ScalarReference:G
 ScalarValue:G
 ScalarValue:I
 ScalarValue:L
 BinaryOperator:+
 AssignmentOperator:=
 VariableToken:I
250 PRINT\PRINT "DO YOU WANT TO GO FIRST";
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"DO YOU WANT TO GO FIRST"
 CarriageControl:;
255 INPUT Q$\IF Q$="YES" THEN 340\IF Q$="NO" THEN 390
 ScalarReference:Q$
 ScalarValue:Q$
 TextConstant:"YES"
 BinaryOperator:=
 ScalarValue:Q$
 TextConstant:"NO"
 BinaryOperator:=
260 PRINT "TYPE YES OR NO."\GO TO 255
 ITEMS
 TextConstant:"TYPE YES OR NO."
 CarriageControl:NL
 LineNumber:255
265 REM  CONTROL OF GAME REPEATS AND TESTS FOR END OF GAME- 
 RemarkToken: CONTROL OF GAME REPEATS AND TESTS FOR END OF GAME- 
270 IF G=0 THEN 275\IF F=1 THEN 390\GO TO 320
 ScalarValue:G
 NumericConstant:0
 BinaryOperator:=
 ScalarValue:F
 NumericConstant:1
 BinaryOperator:=
 LineNumber:320
275 IF F=1 THEN 315
 ScalarValue:F
 NumericConstant:1
 BinaryOperator:=
280 PRINT\PRINT "I WON. DO YOU WANT TO PLAY AGAIN";
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"I WON. DO YOU WANT TO PLAY AGAIN"
 CarriageControl:;
285 INPUT Q$\IF Q$="NO" THEN 290\IF Q$="YES" THEN 300\GO TO 295
 ScalarReference:Q$
 ScalarValue:Q$
 TextConstant:"NO"
 BinaryOperator:=
 ScalarValue:Q$
 TextConstant:"YES"
 BinaryOperator:=
 LineNumber:295
290 STOP
 
295 PRINT "TYPE YES OR NO."\GO TO 285
 ITEMS
 TextConstant:"TYPE YES OR NO."
 CarriageControl:NL
 LineNumber:285
300 PRINT\PRINT "SAME ARRANGEMENT";
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"SAME ARRANGEMENT"
 CarriageControl:;
305 INPUT Q$\IF Q$="NO" THEN 205\IF Q$="YES" THEN 345
 ScalarReference:Q$
 ScalarValue:Q$
 TextConstant:"NO"
 BinaryOperator:=
 ScalarValue:Q$
 TextConstant:"YES"
 BinaryOperator:=
310 PRINT "TYPE YES OR NO."\GO TO 305
 ITEMS
 TextConstant:"TYPE YES OR NO."
 CarriageControl:NL
 LineNumber:305
315 PRINT\PRINT "YOU WON, DO YOU WANT TO PLAY AGAIN";\GO TO 285
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"YOU WON, DO YOU WANT TO PLAY AGAIN"
 CarriageControl:;
 LineNumber:285
320 PRINT\PRINT "PlLE NUMBER","STICKS LEFT"
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"PlLE NUMBER"
 CarriageControl:,
 TextConstant:"STICKS LEFT"
 CarriageControl:NL
325 FOR I=1 TO P\IF S(I)=0 THEN 330\PRINT I,S(I)
 control: VariableToken:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:P"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarValue:S
 NumericConstant:0
 BinaryOperator:=
 ITEMS
 ScalarValue:I
 CarriageControl:,
 ScalarValue:I
 ScalarValue:S
 CarriageControl:NL
330 NEXT I
 VariableToken:I
335 REM -------------------PLAYER'S MOVE-------------------------
 RemarkToken:-------------------PLAYER'S MOVE-------------------------
340 PRINT\PRINT "WHICH PILE DO YOU WANT STICKS FROM";\INPUT N
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"WHICH PILE DO YOU WANT STICKS FROM"
 CarriageControl:;
 ScalarReference:N
345 IF N>P THEN 355\IF N>INT(N) THEN 355\IF N<=0 THEN 355
 ScalarValue:N
 ScalarValue:P
 BinaryOperator:>
 ScalarValue:N
 ScalarValue:N
 FunctionInt
 BinaryOperator:>
 ScalarValue:N
 NumericConstant:0
 BinaryOperator:<=
350 IF S(N)=0 THEN 355\GO TO 360
 ScalarValue:N
 ScalarValue:S
 NumericConstant:0
 BinaryOperator:=
 LineNumber:360
355 PRINT "ILLEGAL PILE NUMBER."\PRINT\GO TO 340
 ITEMS
 TextConstant:"ILLEGAL PILE NUMBER."
 CarriageControl:NL
 ITEMS
 CarriageControl:NL
 LineNumber:340
360 PRINT\PRINT "HOW MANY STICKS";\INPUT T
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"HOW MANY STICKS"
 CarriageControl:;
 ScalarReference:T
365 IF T>S(N) THEN 370\IF T>INT(T) THEN 370\IF T<=0 THEN 370\GO TO 375
 ScalarValue:T
 ScalarValue:N
 ScalarValue:S
 BinaryOperator:>
 ScalarValue:T
 ScalarValue:T
 FunctionInt
 BinaryOperator:>
 ScalarValue:T
 NumericConstant:0
 BinaryOperator:<=
 LineNumber:375
370 PRINT "ILLEGAL STICK NUMBER."\PRINT\GO TO 360
 ITEMS
 TextConstant:"ILLEGAL STICK NUMBER."
 CarriageControl:NL
 ITEMS
 CarriageControl:NL
 LineNumber:360
375 S(N)=S(N)-T\G=G-T
 ScalarValue:N
 ScalarReference:S
 ScalarValue:N
 ScalarValue:S
 ScalarValue:T
 BinaryOperator:-
 AssignmentOperator:=
 ScalarReference:G
 ScalarValue:G
 ScalarValue:T
 BinaryOperator:-
 AssignmentOperator:=
380 F=1\GO TO 270
 ScalarReference:F
 NumericConstant:1
 AssignmentOperator:=
 LineNumber:270
385 REM -------------------MACHINE'S MOVE-------------------------
 RemarkToken:-------------------MACHINE'S MOVE-------------------------
390 FOR I=0 TO 4\V(I)=0\NEXT I
 control: VariableToken:I
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:4"]
 step:    ["NumericConstant:1"]
 ScalarValue:I
 ScalarReference:V
 NumericConstant:0
 AssignmentOperator:=
 VariableToken:I
395 FOR I=1 TO P
 control: VariableToken:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:P"]
 step:    ["NumericConstant:1"]
400    C(I)=S(I)
 ScalarValue:I
 ScalarReference:C
 ScalarValue:I
 ScalarValue:S
 AssignmentOperator:=
405    FOR E=4 TO 0 STEP -1
 control: VariableToken:E
 start:   ["NumericConstant:4"]
 end:     ["NumericConstant:0"]
 step:    ["NumericConstant:1", "UnaryOperator:-"]
410       IF S(I)<2^E THEN 415\S2(I)=S2(I)+10^E\S(I)=S(I)-2^E
 ScalarValue:I
 ScalarValue:S
 NumericConstant:2
 ScalarValue:E
 BinaryOperator:^
 BinaryOperator:<
 ScalarValue:I
 ScalarReference:S2
 ScalarValue:I
 ScalarValue:S2
 NumericConstant:10
 ScalarValue:E
 BinaryOperator:^
 BinaryOperator:+
 AssignmentOperator:=
 ScalarValue:I
 ScalarReference:S
 ScalarValue:I
 ScalarValue:S
 NumericConstant:2
 ScalarValue:E
 BinaryOperator:^
 BinaryOperator:-
 AssignmentOperator:=
415    NEXT E
 VariableToken:E
420    FOR Y=4 TO 0 STEP -1
 control: VariableToken:Y
 start:   ["NumericConstant:4"]
 end:     ["NumericConstant:0"]
 step:    ["NumericConstant:1", "UnaryOperator:-"]
425       X(I,Y)=INT(S2(I)/10^Y)\S2(I)=S2(I)-X(I,Y)*10^Y
 ScalarValue:I
 ScalarValue:Y
 ScalarReference:X
 ScalarValue:I
 ScalarValue:S2
 NumericConstant:10
 ScalarValue:Y
 BinaryOperator:^
 BinaryOperator:/
 FunctionInt
 AssignmentOperator:=
 ScalarValue:I
 ScalarReference:S2
 ScalarValue:I
 ScalarValue:S2
 ScalarValue:I
 ScalarValue:Y
 ScalarValue:X
 NumericConstant:10
 ScalarValue:Y
 BinaryOperator:^
 BinaryOperator:*
 BinaryOperator:-
 AssignmentOperator:=
430       V(Y)=V(Y)+X(I,Y)
 ScalarValue:Y
 ScalarReference:V
 ScalarValue:Y
 ScalarValue:V
 ScalarValue:I
 ScalarValue:Y
 ScalarValue:X
 BinaryOperator:+
 AssignmentOperator:=
435    NEXT Y
 VariableToken:Y
440 NEXT I
 VariableToken:I
445 R=0
 ScalarReference:R
 NumericConstant:0
 AssignmentOperator:=
450 FOR Y=4 TO 0 STEP -1
 control: VariableToken:Y
 start:   ["NumericConstant:4"]
 end:     ["NumericConstant:0"]
 step:    ["NumericConstant:1", "UnaryOperator:-"]
455    IF V(Y)/2-INT(V(Y)/2)=0 THEN 480
 ScalarValue:Y
 ScalarValue:V
 NumericConstant:2
 BinaryOperator:/
 ScalarValue:Y
 ScalarValue:V
 NumericConstant:2
 BinaryOperator:/
 FunctionInt
 BinaryOperator:-
 NumericConstant:0
 BinaryOperator:=
460    IF R=1 THEN 470\Q=INT(P*RND(X))+1
 ScalarValue:R
 NumericConstant:1
 BinaryOperator:=
 ScalarReference:Q
 ScalarValue:P
 ScalarValue:X
 FunctionRnd
 BinaryOperator:*
 FunctionInt
 NumericConstant:1
 BinaryOperator:+
 AssignmentOperator:=
465    IF X(Q,Y)<>1 THEN 460\X(Q,Y)=0\R=1\GO TO 480
 ScalarValue:Q
 ScalarValue:Y
 ScalarValue:X
 NumericConstant:1
 BinaryOperator:<>
 ScalarValue:Q
 ScalarValue:Y
 ScalarReference:X
 NumericConstant:0
 AssignmentOperator:=
 ScalarReference:R
 NumericConstant:1
 AssignmentOperator:=
 LineNumber:480
470    IF X(Q,Y)=1 THEN 475\X(Q,Y)=1\GO TO 480
 ScalarValue:Q
 ScalarValue:Y
 ScalarValue:X
 NumericConstant:1
 BinaryOperator:=
 ScalarValue:Q
 ScalarValue:Y
 ScalarReference:X
 NumericConstant:1
 AssignmentOperator:=
 LineNumber:480
475    X(Q,Y)=0
 ScalarValue:Q
 ScalarValue:Y
 ScalarReference:X
 NumericConstant:0
 AssignmentOperator:=
480 NEXT Y
 VariableToken:Y
485 FOR I=1 TO P
 control: VariableToken:I
 start:   ["NumericConstant:1"]
 end:     ["ScalarValue:P"]
 step:    ["NumericConstant:1"]
490    S2(I)=0
 ScalarValue:I
 ScalarReference:S2
 NumericConstant:0
 AssignmentOperator:=
495    FOR Y=4 TO 0 STEP -1
 control: VariableToken:Y
 start:   ["NumericConstant:4"]
 end:     ["NumericConstant:0"]
 step:    ["NumericConstant:1", "UnaryOperator:-"]
500       S3(I)=X(I,Y)*10^Y\S2(I)=S2(I)+S3(I)
 ScalarValue:I
 ScalarReference:S3
 ScalarValue:I
 ScalarValue:Y
 ScalarValue:X
 NumericConstant:10
 ScalarValue:Y
 BinaryOperator:^
 BinaryOperator:*
 AssignmentOperator:=
 ScalarValue:I
 ScalarReference:S2
 ScalarValue:I
 ScalarValue:S2
 ScalarValue:I
 ScalarValue:S3
 BinaryOperator:+
 AssignmentOperator:=
505    NEXT Y
 VariableToken:Y
510    FOR E=4 TO 0 STEP -1
 control: VariableToken:E
 start:   ["NumericConstant:4"]
 end:     ["NumericConstant:0"]
 step:    ["NumericConstant:1", "UnaryOperator:-"]
515       IF S2(I)<10^E THEN 520\S(I)=S(I)+2^E\S2(I)=S2(I)-10^E
 ScalarValue:I
 ScalarValue:S2
 NumericConstant:10
 ScalarValue:E
 BinaryOperator:^
 BinaryOperator:<
 ScalarValue:I
 ScalarReference:S
 ScalarValue:I
 ScalarValue:S
 NumericConstant:2
 ScalarValue:E
 BinaryOperator:^
 BinaryOperator:+
 AssignmentOperator:=
 ScalarValue:I
 ScalarReference:S2
 ScalarValue:I
 ScalarValue:S2
 NumericConstant:10
 ScalarValue:E
 BinaryOperator:^
 BinaryOperator:-
 AssignmentOperator:=
520    NEXT E
 VariableToken:E
525 NEXT I 
 VariableToken:I
530 IF R=1 THEN 535\Q=INT(P*RND(X))+1\IF S(Q)=0 THEN 530\S(Q)=S(Q)-1
 ScalarValue:R
 NumericConstant:1
 BinaryOperator:=
 ScalarReference:Q
 ScalarValue:P
 ScalarValue:X
 FunctionRnd
 BinaryOperator:*
 FunctionInt
 NumericConstant:1
 BinaryOperator:+
 AssignmentOperator:=
 ScalarValue:Q
 ScalarValue:S
 NumericConstant:0
 BinaryOperator:=
 ScalarValue:Q
 ScalarReference:S
 ScalarValue:Q
 ScalarValue:S
 NumericConstant:1
 BinaryOperator:-
 AssignmentOperator:=
535 D=C(Q)-S(Q)\G=G-D
 ScalarReference:D
 ScalarValue:Q
 ScalarValue:C
 ScalarValue:Q
 ScalarValue:S
 BinaryOperator:-
 AssignmentOperator:=
 ScalarReference:G
 ScalarValue:G
 ScalarValue:D
 BinaryOperator:-
 AssignmentOperator:=
540 IF D=1 THEN 550
 ScalarValue:D
 NumericConstant:1
 BinaryOperator:=
545 PRINT\PRINT "I'LL TAKE";D;"STICKS FROM PILE";Q;"."\GO TO 555
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"I'LL TAKE"
 CarriageControl:;
 ScalarValue:D
 CarriageControl:;
 TextConstant:"STICKS FROM PILE"
 CarriageControl:;
 ScalarValue:Q
 CarriageControl:;
 TextConstant:"."
 CarriageControl:NL
 LineNumber:555
550 PRINT\PRINT "I'LL TAKE 1 STICK FROM PILE";Q;"."
 ITEMS
 CarriageControl:NL
 ITEMS
 TextConstant:"I'LL TAKE 1 STICK FROM PILE"
 CarriageControl:;
 ScalarValue:Q
 CarriageControl:;
 TextConstant:"."
 CarriageControl:NL
555 F=0\GO TO 270
 ScalarReference:F
 NumericConstant:0
 AssignmentOperator:=
 LineNumber:270
560 END
 
