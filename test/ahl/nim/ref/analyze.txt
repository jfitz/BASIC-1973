Statistics:

Number of lines: 93
Number of valid statements: 165
Number of comments: 7
Number of executable statements: 165

Complexity:

Comment density: 0.042
Comprehension effort: 514
McCabe complexity: 55
Halstead complexity:
 length: 721
 volume: 3557.756
 difficulty: 36.479
 effort: 129782.063
 language: 2.674
 intelligence: 97.530
 time: 120.169

100 (0 1) REM THIS PROGRAM USES A STRATEGY AS PRESENTED IN 'GAMES OF FUN AND
  Origs: 
  Dests: 
105 (0 1) REM STRATEGY', A PUBLICATION OF THE MATHEMATICAL SERVICES DEPART-
  Origs: 
  Dests: 
110 (0 1) REM MENT OF COMPUTER CONTROL CO., INC.
  Origs: 
  Dests: 
115 (0 2) PRINT "THIS PROGRAM PLAYS NIM."
  Origs: :start
  Dests: 120:auto
120 (0 2) PRINT "DO YOU WANT INSTRUCTIONS";
    (1 2) INPUT Q$
  Origs: 115:auto
  Dests: 125:auto
125 (1 4) IF Q$ = "YES" THEN 135
    (1 4) IF Q$ = "NO" THEN 190
  Origs: 120:auto, 130:goto
  Dests: 130:auto, 135:ifthen, 190:ifthen
130 (0 2) PRINT "TYPE YES OR NO."
    (1 2) INPUT Q$
    (0 3) GOTO 125
  Origs: 125:auto
  Dests: 125:goto
135 (0 2) PRINT
  Origs: 125:ifthen
  Dests: 140:auto
140 (0 2) PRINT "    NIM IS PLAYED BY TWO PEOPLE PLAYING ALTERNATELY, BEFORE"
  Origs: 135:auto
  Dests: 145:auto
145 (0 2) PRINT "THE PLAY STARTS, AN ARBITRARY NUMBER OF STICKS OR OBJECTS IS"
  Origs: 140:auto
  Dests: 150:auto
150 (0 2) PRINT "PUT INTO AN ARBITRARY NUMBER OF PILES, IN ANY DISTRIBUTION"
  Origs: 145:auto
  Dests: 155:auto
155 (0 2) PRINT "WHATEVER, THEN EACH PLAYER IN HIS TURN REMOVES AS MANY"
  Origs: 150:auto
  Dests: 160:auto
160 (0 2) PRINT "STICKS AS HE WISHES FROM ANY PILEBUT FROM ONLY ONE PILE,"
  Origs: 155:auto
  Dests: 165:auto
165 (0 2) PRINT "AND AT LEAST ONE STICK, THE PLAYER WHO TAKES THE LAST STICK"
  Origs: 160:auto
  Dests: 170:auto
170 (0 2) PRINT "IS THE WINNER."
  Origs: 165:auto
  Dests: 175:auto
175 (0 2) PRINT "    THIS PROGRAM ALLOWS YOU TO SET UP THE INITIAL ARRANGEMENT"
  Origs: 170:auto
  Dests: 180:auto
180 (0 2) PRINT "OF PILES AND STICKS. IT WILL NOT ACCEPT MORE THAN TWENTY"
  Origs: 175:auto
  Dests: 185:auto
185 (0 2) PRINT "PILES OR STICKS IN EACH PILE."
  Origs: 180:auto
  Dests: 190:auto
190 (0 1) RANDOM
  Origs: 125:ifthen, 185:auto
  Dests: 200:auto
195 (0 1) REM -------------------CONFIGURATION INPUT----------------------------
  Origs: 
  Dests: 
200 (0 9) DIM X(20, 4), S(20), L(20), S2(20), N2(4), C(20), S3(20), V(20)
  Origs: 190:auto
  Dests: 205:auto
205 (0 2) PRINT
    (0 2) PRINT "HOW MANY PILES";
    (1 2) INPUT P
    (1 4) IF P > 20 THEN 215
  Origs: 200:auto, 215:goto, 305:ifthen
  Dests: 210:auto, 215:ifthen
210 (1 5) IF P > INT(P) THEN 215
    (1 4) IF P <= 0 THEN 215
    (0 2) GOTO 220
  Origs: 205:auto
  Dests: 215:auto, 215:ifthen, 220:goto
215 (0 2) PRINT "ILLEGAL PILE NUMBER. "
    (0 2) PRINT
    (0 3) GOTO 205
  Origs: 205:ifthen, 210:auto, 210:ifthen
  Dests: 205:goto
220 (0 2) PRINT
    F(I) (1 3) FOR I = 1 TO P
  Origs: 210:goto
  Dests: 225:fornext, 240:fornext
225 F(I) (0 3) PRINT "HOW MANY STICKS IN PILE" I;
    F(I) (1 2) INPUT L(I)
    F(I) (1 4) IF L(I) > 20 THEN 235
  Origs: 220:fornext, 235:goto
  Dests: 230:auto, 235:ifthen
230 F(I) (1 5) IF L(I) > INT(L(I)) THEN 235
    F(I) (1 4) IF L(I) <= 0 THEN 235
    F(I) (0 2) GOTO 240
  Origs: 225:auto
  Dests: 235:auto, 235:ifthen, 240:goto
235 F(I) (0 2) PRINT "ILLEGAL STICK NUMBER"
    F(I) (0 2) PRINT
    F(I) (0 3) GOTO 225
  Origs: 225:ifthen, 230:auto, 230:ifthen
  Dests: 225:goto
240 F(I) (0 1) NEXT I
  Origs: 220:fornext, 230:goto
  Dests: 245:auto
245 F(I) (1 3) FOR I = 1 TO P
    F(I) (0 3) S(I) = L(I)
    F(I) (0 4) G = G + L(I)
    F(I) (0 1) NEXT I
  Origs: 240:auto
  Dests: 250:auto
250 (0 2) PRINT
    (0 2) PRINT "DO YOU WANT TO GO FIRST";
  Origs: 245:auto
  Dests: 255:auto
255 (1 2) INPUT Q$
    (1 4) IF Q$ = "YES" THEN 340
    (1 4) IF Q$ = "NO" THEN 390
  Origs: 250:auto, 260:goto
  Dests: 260:auto, 340:ifthen, 390:ifthen
260 (0 2) PRINT "TYPE YES OR NO."
    (0 3) GOTO 255
  Origs: 255:auto
  Dests: 255:goto
265 (0 1) REM  CONTROL OF GAME REPEATS AND TESTS FOR END OF GAME- 
  Origs: 
  Dests: 
270 (1 4) IF G = 0 THEN 275
    (1 4) IF F = 1 THEN 390
    (0 2) GOTO 320
  Origs: 380:goto, 555:goto
  Dests: 275:auto, 275:ifthen, 320:goto, 390:ifthen
275 (1 4) IF F = 1 THEN 315
  Origs: 270:auto, 270:ifthen
  Dests: 280:auto, 315:ifthen
280 (0 2) PRINT
    (0 2) PRINT "I WON. DO YOU WANT TO PLAY AGAIN";
  Origs: 275:auto
  Dests: 285:auto
285 (1 2) INPUT Q$
    (1 4) IF Q$ = "NO" THEN 290
    (1 4) IF Q$ = "YES" THEN 300
    (0 2) GOTO 295
  Origs: 280:auto, 295:goto, 315:goto
  Dests: 290:auto, 290:ifthen, 295:goto, 300:ifthen
290 (0 1) STOP
  Origs: 285:auto, 285:ifthen
  Dests: :stop
295 (0 2) PRINT "TYPE YES OR NO."
    (0 3) GOTO 285
  Origs: 285:goto
  Dests: 285:goto
300 (0 2) PRINT
    (0 2) PRINT "SAME ARRANGEMENT";
  Origs: 285:ifthen
  Dests: 305:auto
305 (1 2) INPUT Q$
    (1 5) IF Q$ = "NO" THEN 205
    (1 4) IF Q$ = "YES" THEN 345
  Origs: 300:auto, 310:goto
  Dests: 205:ifthen, 310:auto, 345:ifthen
310 (0 2) PRINT "TYPE YES OR NO."
    (0 3) GOTO 305
  Origs: 305:auto
  Dests: 305:goto
315 (0 2) PRINT
    (0 2) PRINT "YOU WON, DO YOU WANT TO PLAY AGAIN";
    (0 3) GOTO 285
  Origs: 275:ifthen
  Dests: 285:goto
320 (0 2) PRINT
    (0 3) PRINT "PlLE NUMBER", "STICKS LEFT"
  Origs: 270:goto
  Dests: 325:auto
325 F(I) (1 3) FOR I = 1 TO P
    F(I) (1 4) IF S(I) = 0 THEN 330
    F(I) (0 3) PRINT I, S(I)
  Origs: 320:auto
  Dests: 330:auto, 330:fornext, 330:ifthen
330 F(I) (0 1) NEXT I
  Origs: 325:auto, 325:fornext, 325:ifthen
  Dests: 340:auto
335 (0 1) REM -------------------PLAYER'S MOVE-------------------------
  Origs: 
  Dests: 
340 (0 2) PRINT
    (0 2) PRINT "WHICH PILE DO YOU WANT STICKS FROM";
    (1 2) INPUT N
  Origs: 255:ifthen, 330:auto, 355:goto
  Dests: 345:auto
345 (1 4) IF N > P THEN 355
    (1 5) IF N > INT(N) THEN 355
    (1 4) IF N <= 0 THEN 355
  Origs: 305:ifthen, 340:auto
  Dests: 350:auto, 355:ifthen
350 (1 4) IF S(N) = 0 THEN 355
    (0 2) GOTO 360
  Origs: 345:auto
  Dests: 355:auto, 355:ifthen, 360:goto
355 (0 2) PRINT "ILLEGAL PILE NUMBER."
    (0 2) PRINT
    (0 3) GOTO 340
  Origs: 345:ifthen, 350:auto, 350:ifthen
  Dests: 340:goto
360 (0 2) PRINT
    (0 2) PRINT "HOW MANY STICKS";
    (1 2) INPUT T
  Origs: 350:goto, 370:goto
  Dests: 365:auto
365 (1 4) IF T > S(N) THEN 370
    (1 5) IF T > INT(T) THEN 370
    (1 4) IF T <= 0 THEN 370
    (0 2) GOTO 375
  Origs: 360:auto
  Dests: 370:auto, 370:ifthen, 375:goto
370 (0 2) PRINT "ILLEGAL STICK NUMBER."
    (0 2) PRINT
    (0 3) GOTO 360
  Origs: 365:auto, 365:ifthen
  Dests: 360:goto
375 (0 4) S(N) = S(N) - T
    (0 4) G = G - T
  Origs: 365:goto
  Dests: 380:auto
380 (0 3) F = 1
    (0 3) GOTO 270
  Origs: 375:auto
  Dests: 270:goto
385 (0 1) REM -------------------MACHINE'S MOVE-------------------------
  Origs: 
  Dests: 
390 F(I) (1 3) FOR I = 0 TO 4
    F(I) (0 3) V(I) = 0
    F(I) (0 1) NEXT I
  Origs: 255:ifthen, 270:ifthen
  Dests: 395:auto
395 F(I) (1 3) FOR I = 1 TO P
  Origs: 390:auto
  Dests: 400:fornext, 440:fornext
400 F(I) (0 3) C(I) = S(I)
  Origs: 395:fornext
  Dests: 405:auto
405 F(I,E) (1 5) FOR E = 4 TO 0 STEP -1
  Origs: 400:auto
  Dests: 410:fornext, 415:fornext
410 F(I,E) (1 6) IF S(I) < 2 ^ E THEN 415
    F(I,E) (0 6) S2(I) = S2(I) + 10 ^ E
    F(I,E) (0 6) S(I) = S(I) - 2 ^ E
  Origs: 405:fornext
  Dests: 415:auto, 415:ifthen
415 F(I,E) (0 1) NEXT E
  Origs: 405:fornext, 410:auto, 410:ifthen
  Dests: 420:auto
420 F(I,Y) (1 5) FOR Y = 4 TO 0 STEP -1
  Origs: 415:auto
  Dests: 425:fornext, 435:fornext
425 F(I,Y) (0 4) X(I, Y) = INT(S2(I) / 10 ^ Y)
    F(I,Y) (0 8) S2(I) = S2(I) - X(I, Y) * 10 ^ Y
  Origs: 420:fornext
  Dests: 430:auto
430 F(I,Y) (0 4) V(Y) = V(Y) + X(I, Y)
  Origs: 425:auto
  Dests: 435:auto
435 F(I,Y) (0 1) NEXT Y
  Origs: 420:fornext, 430:auto
  Dests: 440:auto
440 F(I) (0 1) NEXT I
  Origs: 395:fornext, 435:auto
  Dests: 445:auto
445 (0 3) R = 0
  Origs: 440:auto
  Dests: 450:auto
450 F(Y) (1 5) FOR Y = 4 TO 0 STEP -1
  Origs: 445:auto
  Dests: 455:fornext, 480:fornext
455 F(Y) (1 7) IF V(Y) / 2 - INT(V(Y) / 2) = 0 THEN 480
  Origs: 450:fornext
  Dests: 460:auto, 480:ifthen
460 F(Y) (1 4) IF R = 1 THEN 470
    F(Y) (0 5) Q = INT(P * RND(X)) + 1
  Origs: 455:auto, 465:ifthen
  Dests: 465:auto, 470:ifthen
465 F(Y) (1 5) IF X(Q, Y) <> 1 THEN 460
    F(Y) (0 3) X(Q, Y) = 0
    F(Y) (0 3) R = 1
    F(Y) (0 2) GOTO 480
  Origs: 460:auto
  Dests: 460:ifthen, 470:auto, 480:goto
470 F(Y) (1 4) IF X(Q, Y) = 1 THEN 475
    F(Y) (0 3) X(Q, Y) = 1
    F(Y) (0 2) GOTO 480
  Origs: 460:ifthen, 465:auto
  Dests: 475:auto, 475:ifthen, 480:goto
475 F(Y) (0 3) X(Q, Y) = 0
  Origs: 470:auto, 470:ifthen
  Dests: 480:auto
480 F(Y) (0 1) NEXT Y
  Origs: 450:fornext, 455:ifthen, 465:goto, 470:goto, 475:auto
  Dests: 485:auto
485 F(I) (1 3) FOR I = 1 TO P
  Origs: 480:auto
  Dests: 490:fornext, 525:fornext
490 F(I) (0 3) S2(I) = 0
  Origs: 485:fornext
  Dests: 495:auto
495 F(I,Y) (1 5) FOR Y = 4 TO 0 STEP -1
  Origs: 490:auto
  Dests: 500:fornext, 505:fornext
500 F(I,Y) (0 6) S3(I) = X(I, Y) * 10 ^ Y
    F(I,Y) (0 4) S2(I) = S2(I) + S3(I)
  Origs: 495:fornext
  Dests: 505:auto
505 F(I,Y) (0 1) NEXT Y
  Origs: 495:fornext, 500:auto
  Dests: 510:auto
510 F(I,E) (1 5) FOR E = 4 TO 0 STEP -1
  Origs: 505:auto
  Dests: 515:fornext, 520:fornext
515 F(I,E) (1 6) IF S2(I) < 10 ^ E THEN 520
    F(I,E) (0 6) S(I) = S(I) + 2 ^ E
    F(I,E) (0 6) S2(I) = S2(I) - 10 ^ E
  Origs: 510:fornext
  Dests: 520:auto, 520:ifthen
520 F(I,E) (0 1) NEXT E
  Origs: 510:fornext, 515:auto, 515:ifthen
  Dests: 525:auto
525 F(I) (0 1) NEXT I
  Origs: 485:fornext, 520:auto
  Dests: 530:auto
530 (1 4) IF R = 1 THEN 535
    (0 5) Q = INT(P * RND(X)) + 1
    (1 5) IF S(Q) = 0 THEN 530
    (0 4) S(Q) = S(Q) - 1
  Origs: 525:auto
  Dests: 535:auto, 535:ifthen
535 (0 4) D = C(Q) - S(Q)
    (0 4) G = G - D
  Origs: 530:auto, 530:ifthen
  Dests: 540:auto
540 (1 4) IF D = 1 THEN 550
  Origs: 535:auto
  Dests: 545:auto, 550:ifthen
545 (0 2) PRINT
    (0 6) PRINT "I'LL TAKE"; D; "STICKS FROM PILE"; Q; "."
    (0 2) GOTO 555
  Origs: 540:auto
  Dests: 555:goto
550 (0 2) PRINT
    (0 4) PRINT "I'LL TAKE 1 STICK FROM PILE"; Q; "."
  Origs: 540:ifthen
  Dests: 555:auto
555 (0 3) F = 0
    (0 3) GOTO 270
  Origs: 545:goto, 550:auto
  Dests: 270:goto
560 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

560: END

