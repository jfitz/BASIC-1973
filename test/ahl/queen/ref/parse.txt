1 REM PLAYS QUEEN GAME.
 Remark:PLAYS QUEEN GAME.
2 PRINT "DO YOU WISH INSTRUCTIONS";
 TextConstant:"DO YOU WISH INSTRUCTIONS"
 CarriageControl:;
9 RANDOMIZE
 
10 DIM S(64)
 NumericConstant:64
 Declaration:S scalar
11 FOR I = 1 TO 64
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:64"]
12 READ S(I)
 Variable:I numeric scalar
 Variable:S numeric scalar
13 NEXT I
 Variable:I numeric scalar
14 DATA  81,  71,  61,  51,  41,  31,  21,  11
 NumericConstant:81
 NumericConstant:71
 NumericConstant:61
 NumericConstant:51
 NumericConstant:41
 NumericConstant:31
 NumericConstant:21
 NumericConstant:11
15 DATA  92,  82,  72,  62,  52,  42,  32,  22
 NumericConstant:92
 NumericConstant:82
 NumericConstant:72
 NumericConstant:62
 NumericConstant:52
 NumericConstant:42
 NumericConstant:32
 NumericConstant:22
16 DATA 103,  93,  83,  73,  63,  53,  43,  33
 NumericConstant:103
 NumericConstant:93
 NumericConstant:83
 NumericConstant:73
 NumericConstant:63
 NumericConstant:53
 NumericConstant:43
 NumericConstant:33
17 DATA 114, 104,  94,  84,  74,  64,  54,  44
 NumericConstant:114
 NumericConstant:104
 NumericConstant:94
 NumericConstant:84
 NumericConstant:74
 NumericConstant:64
 NumericConstant:54
 NumericConstant:44
18 DATA 125, 115, 105,  95,  85,  75,  65,  55
 NumericConstant:125
 NumericConstant:115
 NumericConstant:105
 NumericConstant:95
 NumericConstant:85
 NumericConstant:75
 NumericConstant:65
 NumericConstant:55
19 DATA 136, 126, 116, 106,  96,  86,  76,  66
 NumericConstant:136
 NumericConstant:126
 NumericConstant:116
 NumericConstant:106
 NumericConstant:96
 NumericConstant:86
 NumericConstant:76
 NumericConstant:66
20 DATA 147, 137, 127, 117, 107,  97,  87,  77
 NumericConstant:147
 NumericConstant:137
 NumericConstant:127
 NumericConstant:117
 NumericConstant:107
 NumericConstant:97
 NumericConstant:87
 NumericConstant:77
21 DATA 158, 148, 138, 128, 118, 108,  98,  88
 NumericConstant:158
 NumericConstant:148
 NumericConstant:138
 NumericConstant:128
 NumericConstant:118
 NumericConstant:108
 NumericConstant:98
 NumericConstant:88
22 INPUT W$
 Variable:W$ string scalar
23 IF W$="NO" THEN 30
 Variable:W$ string scalar
 TextConstant:"NO"
 BinaryOperatorEqual:= boolean scalar
24 IF W$="YES" THEN 28
 Variable:W$ string scalar
 TextConstant:"YES"
 BinaryOperatorEqual:= boolean scalar
25 PRINT "INCORRECT ANSWER. PLEASE TYPE 'YES' OR 'NO'";
 TextConstant:"INCORRECT ANSWER. PLEASE TYPE 'YES' OR 'NO'"
 CarriageControl:;
26 GOTO 22
 LineNumber:22
28 GOSUB 5000
 LineNumber:5000
29 GO TO 100
 LineNumber:100
30 GOSUB 5150
 LineNumber:5150
90 REM ERROR CHECKS.
 Remark:ERROR CHECKS.
100 PRINT "WHERE WOULD YOU LIKE TO START";
 TextConstant:"WHERE WOULD YOU LIKE TO START"
 CarriageControl:;
110 INPUT M1
 Variable:M1 numeric scalar
115 IF M1=0 THEN 232
 Variable:M1 numeric scalar
 NumericConstant:0
 BinaryOperatorEqual:= boolean scalar
120 LET T1 = INT(M1/10)
 Variable:T1 numeric scalar
 Variable:M1 numeric scalar
 NumericConstant:10
 BinaryOperatorDivide:/ numeric scalar
 FunctionInt:INT(_) numeric scalar
 AssignmentOperator:=
130 LET U1 = M1 - 10*T1
 Variable:U1 numeric scalar
 Variable:M1 numeric scalar
 NumericConstant:10
 Variable:T1 numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
140 IF U1 = 1 THEN 200
 Variable:U1 numeric scalar
 NumericConstant:1
 BinaryOperatorEqual:= boolean scalar
150 IF U1 = T1 THEN 200
 Variable:U1 numeric scalar
 Variable:T1 numeric scalar
 BinaryOperatorEqual:= boolean scalar
160 PRINT "PLEASE READ THE DIRECTIONS AGAIN."
 TextConstant:"PLEASE READ THE DIRECTIONS AGAIN."
 CarriageControl:NL
165 PRINT "YOU HAVE BEGUN ILLEGALLY."
 TextConstant:"YOU HAVE BEGUN ILLEGALLY."
 CarriageControl:NL
170 PRINT
 CarriageControl:NL
180 GO TO 100
 LineNumber:100
200 GO SUB 2000
 LineNumber:2000
210 PRINT "MACHINE MOVES TO SQUARE"M
 TextConstant:"MACHINE MOVES TO SQUARE"
 CarriageControl:
 Variable:M numeric scalar
 CarriageControl:NL
215 IF M = 158 THEN 3400
 Variable:M numeric scalar
 NumericConstant:158
 BinaryOperatorEqual:= boolean scalar
220 PRINT "WHAT IS YOUR MOVE";
 TextConstant:"WHAT IS YOUR MOVE"
 CarriageControl:;
230 INPUT M1
 Variable:M1 numeric scalar
231 IF M1 <> 0 THEN 239
 Variable:M1 numeric scalar
 NumericConstant:0
 BinaryOperatorNotEqual:<> boolean scalar
232 PRINT
 CarriageControl:NL
233 PRINT "IT LOOKS LIKE I HAVE WON BY FORFEIT."
 TextConstant:"IT LOOKS LIKE I HAVE WON BY FORFEIT."
 CarriageControl:NL
234 PRINT
 CarriageControl:NL
235 GO TO 4000
 LineNumber:4000
239 IF M1 <= M THEN 3200
 Variable:M1 numeric scalar
 Variable:M numeric scalar
 BinaryOperatorLessEqual:<= boolean scalar
240 LET T1 = INT(M1/10)
 Variable:T1 numeric scalar
 Variable:M1 numeric scalar
 NumericConstant:10
 BinaryOperatorDivide:/ numeric scalar
 FunctionInt:INT(_) numeric scalar
 AssignmentOperator:=
250 LET U1 = M1 - 10*T1
 Variable:U1 numeric scalar
 Variable:M1 numeric scalar
 NumericConstant:10
 Variable:T1 numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
260 LET P = U1 - U
 Variable:P numeric scalar
 Variable:U1 numeric scalar
 Variable:U numeric scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
270 IF P <> 0 THEN 300
 Variable:P numeric scalar
 NumericConstant:0
 BinaryOperatorNotEqual:<> boolean scalar
280 LET L = T1 - T
 Variable:L numeric scalar
 Variable:T1 numeric scalar
 Variable:T numeric scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
290 IF L <= 0 THEN 3200
 Variable:L numeric scalar
 NumericConstant:0
 BinaryOperatorLessEqual:<= boolean scalar
295 GO TO 200
 LineNumber:200
300 IF T1 - T <> P THEN 320
 Variable:T1 numeric scalar
 Variable:T numeric scalar
 BinaryOperatorMinus:- numeric scalar
 Variable:P numeric scalar
 BinaryOperatorNotEqual:<> boolean scalar
310 GO TO 200
 LineNumber:200
320 IF T1 - T <> 2*P THEN 3200
 Variable:T1 numeric scalar
 Variable:T numeric scalar
 BinaryOperatorMinus:- numeric scalar
 NumericConstant:2
 Variable:P numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 BinaryOperatorNotEqual:<> boolean scalar
330 GO TO 200
 LineNumber:200
1990 REM LOCATE MOVE FOR MACHINE
 Remark:LOCATE MOVE FOR MACHINE
2000 IF M1 = 41 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:41
 BinaryOperatorEqual:= boolean scalar
2010 IF M1 = 44 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:44
 BinaryOperatorEqual:= boolean scalar
2020 IF M1 = 73 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:73
 BinaryOperatorEqual:= boolean scalar
2030 IF M1 = 75 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:75
 BinaryOperatorEqual:= boolean scalar
2040 IF M1 = 126 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:126
 BinaryOperatorEqual:= boolean scalar
2050 IF M1 = 127 THEN 2180
 Variable:M1 numeric scalar
 NumericConstant:127
 BinaryOperatorEqual:= boolean scalar
2060 IF M1 = 158 THEN 3300
 Variable:M1 numeric scalar
 NumericConstant:158
 BinaryOperatorEqual:= boolean scalar
2065 LET C = 0
 Variable:C numeric scalar
 NumericConstant:0
 AssignmentOperator:=
2070 FOR K = 7 TO 1 STEP -1
 control: Variable:K numeric scalar
 start:   ["NumericConstant:7"]
 end:     ["NumericConstant:1"]
 step:    ["NumericConstant:1", "UnaryOperatorMinus:- numeric scalar"]
2080 LET U = U1
 Variable:U numeric scalar
 Variable:U1 numeric scalar
 AssignmentOperator:=
2090 LET T = T1 + K
 Variable:T numeric scalar
 Variable:T1 numeric scalar
 Variable:K numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
2100 GO SUB 3500
 LineNumber:3500
2105 IF C = 1 THEN 2160
 Variable:C numeric scalar
 NumericConstant:1
 BinaryOperatorEqual:= boolean scalar
2110 LET U = U + K
 Variable:U numeric scalar
 Variable:U numeric scalar
 Variable:K numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
2120 GO SUB 3500
 LineNumber:3500
2125 IF C = 1 THEN 2160
 Variable:C numeric scalar
 NumericConstant:1
 BinaryOperatorEqual:= boolean scalar
2130 LET T = T + K
 Variable:T numeric scalar
 Variable:T numeric scalar
 Variable:K numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
2140 GO SUB 3500
 LineNumber:3500
2145 IF C = 1 THEN 2160
 Variable:C numeric scalar
 NumericConstant:1
 BinaryOperatorEqual:= boolean scalar
2150 NEXT K
 Variable:K numeric scalar
2155 GO TO 2180
 LineNumber:2180
2160 LET C = 0
 Variable:C numeric scalar
 NumericConstant:0
 AssignmentOperator:=
2170 RETURN
 
2180 GO SUB 3000
 LineNumber:3000
2190 RETURN
 
2990 REM RANDOM MOVE.
 Remark:RANDOM MOVE.
3000 LET Z=RND
 Variable:Z numeric scalar
 FunctionRnd:RND numeric scalar
 AssignmentOperator:=
3010 IF Z > .6 THEN 3110
 Variable:Z numeric scalar
 NumericConstant:.6
 BinaryOperatorGreater:> boolean scalar
3020 IF Z > .3 THEN 3070
 Variable:Z numeric scalar
 NumericConstant:.3
 BinaryOperatorGreater:> boolean scalar
3030 LET U = U1
 Variable:U numeric scalar
 Variable:U1 numeric scalar
 AssignmentOperator:=
3040 LET T = T1 + 1
 Variable:T numeric scalar
 Variable:T1 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
3050 LET M = 10*T + U
 Variable:M numeric scalar
 NumericConstant:10
 Variable:T numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:U numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
3060 RETURN
 
3070 LET U = U1 + 1
 Variable:U numeric scalar
 Variable:U1 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
3080 LET T = T1 + 2
 Variable:T numeric scalar
 Variable:T1 numeric scalar
 NumericConstant:2
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
3090 LET M = 10*T * U
 Variable:M numeric scalar
 NumericConstant:10
 Variable:T numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:U numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 AssignmentOperator:=
3100 RETURN
 
3110 LET U = U1 + 1
 Variable:U numeric scalar
 Variable:U1 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
3120 LET T = T1 + 1
 Variable:T numeric scalar
 Variable:T1 numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
3130 LET M = 10*T + U
 Variable:M numeric scalar
 NumericConstant:10
 Variable:T numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:U numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
3140 RETURN
 
3190 REM ILLEGAL MOVE MESSAGE.
 Remark:ILLEGAL MOVE MESSAGE.
3200 PRINT
 CarriageControl:NL
3210 PRINT "Y O U   C H E A T . . . TRY AGAIN"
 TextConstant:"Y O U   C H E A T . . . TRY AGAIN"
 CarriageControl:NL
3220 GO TO 230
 LineNumber:230
3290 REM PLAYER WINS.
 Remark:PLAYER WINS.
3300 PRINT
 CarriageControl:NL
3310 PRINT "C O N G R A T U L A T I O N S .  . ."
 TextConstant:"C O N G R A T U L A T I O N S .  . ."
 CarriageControl:NL
3320 PRINT
 CarriageControl:NL
3330 PRINT "YOU HAVE WON--VERY WELL PLAYED."
 TextConstant:"YOU HAVE WON--VERY WELL PLAYED."
 CarriageControl:NL
3340 PRINT "IT LOOKS LIKE I HAVE MET MY MATCH."
 TextConstant:"IT LOOKS LIKE I HAVE MET MY MATCH."
 CarriageControl:NL
3350 PRINT "THANKS FOR PLAYING  I CAN'T WIN ALL THE TIME."
 TextConstant:"THANKS FOR PLAYING  I CAN'T WIN ALL THE TIME."
 CarriageControl:NL
3360 PRINT
 CarriageControl:NL
3370 GO TO 4000
 LineNumber:4000
3390 REM MACHINE WINS.
 Remark:MACHINE WINS.
3400 PRINT
 CarriageControl:NL
3410 PRINT "NICE TRY, BUT IT LOOKS LIKE I HAVE WON."
 TextConstant:"NICE TRY, BUT IT LOOKS LIKE I HAVE WON."
 CarriageControl:NL
3420 PRINT "THANKS FOR PLAYING."
 TextConstant:"THANKS FOR PLAYING."
 CarriageControl:NL
3430 PRINT
 CarriageControl:NL
3440 GO TO 4000
 LineNumber:4000
3490 REM TEST FOR MACHINE MOVE.
 Remark:TEST FOR MACHINE MOVE.
3500 LET M = 10*T + U
 Variable:M numeric scalar
 NumericConstant:10
 Variable:T numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:U numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
3510 IF M = 158 THEN 3570
 Variable:M numeric scalar
 NumericConstant:158
 BinaryOperatorEqual:= boolean scalar
3520 IF M = 127 THEN 3570
 Variable:M numeric scalar
 NumericConstant:127
 BinaryOperatorEqual:= boolean scalar
3530 IF M = 126 THEN 3570
 Variable:M numeric scalar
 NumericConstant:126
 BinaryOperatorEqual:= boolean scalar
3540 IF M = 75 THEN 3570
 Variable:M numeric scalar
 NumericConstant:75
 BinaryOperatorEqual:= boolean scalar
3550 IF M = 73 THEN 3570
 Variable:M numeric scalar
 NumericConstant:73
 BinaryOperatorEqual:= boolean scalar
3560 RETURN
 
3570 LET C = 1
 Variable:C numeric scalar
 NumericConstant:1
 AssignmentOperator:=
3580 GO TO 3560
 LineNumber:3560
3990 REM ANOTHER GAME?
 Remark:ANOTHER GAME?
4000 PRINT "ANYONE ELSE CARE TO TRY";
 TextConstant:"ANYONE ELSE CARE TO TRY"
 CarriageControl:;
4020 INPUT Q$
 Variable:Q$ string scalar
4030 PRINT
 CarriageControl:NL
4040 IF Q$="YES" THEN100
 Variable:Q$ string scalar
 TextConstant:"YES"
 BinaryOperatorEqual:= boolean scalar
4042 IF Q$="NO" THEN 4050
 Variable:Q$ string scalar
 TextConstant:"NO"
 BinaryOperatorEqual:= boolean scalar
4045 PRINT "INCORRECT ANSWER, PLEASE TYPE 'YES' OR 'NO'";
 TextConstant:"INCORRECT ANSWER, PLEASE TYPE 'YES' OR 'NO'"
 CarriageControl:;
4046 GOTO 4020
 LineNumber:4020
4050 PRINT "OK - - THANKS AGAIN."
 TextConstant:"OK - - THANKS AGAIN."
 CarriageControl:NL
4060 STOP
 
4990 REM DIRECTIONS, ETC...
 Remark:DIRECTIONS, ETC...
5000 PRINT "WE ARE GOING TO PLAY A GAME BASED ON ONE OF THE CHESS MOVES."
 TextConstant:"WE ARE GOING TO PLAY A GAME BASED ON ONE OF THE CHESS MOVES."
 CarriageControl:NL
5010 PRINT "OUR QUEEN WILL BE ABLE TO MOVE ONLY TO THE LEFT."
 TextConstant:"OUR QUEEN WILL BE ABLE TO MOVE ONLY TO THE LEFT."
 CarriageControl:NL
5020 PRINT "DOWN, AND DIAGONALLY DOWN TO THE LEFT."
 TextConstant:"DOWN, AND DIAGONALLY DOWN TO THE LEFT."
 CarriageControl:NL
5030 PRINT
 CarriageControl:NL
5040 PRINT "THE OBJECT OF THE GAME IS TO PLACE THE QUEEN IN THE"
 TextConstant:"THE OBJECT OF THE GAME IS TO PLACE THE QUEEN IN THE"
 CarriageControl:NL
5050 PRINT "LOWER LEFT-HAND SQUARE BY ALTERNATING MOVES BETWEEN"
 TextConstant:"LOWER LEFT-HAND SQUARE BY ALTERNATING MOVES BETWEEN"
 CarriageControl:NL
5060 PRINT "YOU AND THE MACHINE/ THE FIRST ONE TO PLACE THE QUEEN"
 TextConstant:"YOU AND THE MACHINE/ THE FIRST ONE TO PLACE THE QUEEN"
 CarriageControl:NL
5070 PRINT "THERE, WINS."
 TextConstant:"THERE, WINS."
 CarriageControl:NL
5080 PRINT
 CarriageControl:NL
5090 PRINT "YOU GO FIRST AND PLACE THE QUEEN IN ANY ONE OF THE"
 TextConstant:"YOU GO FIRST AND PLACE THE QUEEN IN ANY ONE OF THE"
 CarriageControl:NL
5100 PRINT "SQUARES ON THE TOP ROW OR THE PIGHT'HAND COLUMN."
 TextConstant:"SQUARES ON THE TOP ROW OR THE PIGHT'HAND COLUMN."
 CarriageControl:NL
5110 PRINT "THAT WILL BE YOUR FIRST MOVE."
 TextConstant:"THAT WILL BE YOUR FIRST MOVE."
 CarriageControl:NL
5120 PRINT "WE WILL THEN ALTERNATE MOVES."
 TextConstant:"WE WILL THEN ALTERNATE MOVES."
 CarriageControl:NL
5130 PRINT "YOU MAY FORFEIT AT ANY TIME BY TYPING '0' AS YOUR MOVE."
 TextConstant:"YOU MAY FORFEIT AT ANY TIME BY TYPING '0' AS YOUR MOVE."
 CarriageControl:NL
5140 PRINT "BE SURE TO PUSH THE 'RETURN' KEY AFTER EACH RESPONSE."
 TextConstant:"BE SURE TO PUSH THE 'RETURN' KEY AFTER EACH RESPONSE."
 CarriageControl:NL
5150 PRINT
 CarriageControl:NL
5160 FOR A = 0 TO 7
 control: Variable:A numeric scalar
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:7"]
5170 FOR B = 1 TO 8
 control: Variable:B numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
5180 LET I = 8*A + B
 Variable:I numeric scalar
 NumericConstant:8
 Variable:A numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:B numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
5190 PRINT S(I);
 Variable:I numeric scalar
 Variable:S numeric scalar
 CarriageControl:;
5200 NEXT B
 Variable:B numeric scalar
5210 PRINT
 CarriageControl:NL
5220 PRINT
 CarriageControl:NL
5225 PRINT
 CarriageControl:NL
5230 NEXT A
 Variable:A numeric scalar
5240 PRINT
 CarriageControl:NL
5250 RETURN
 
9999 END
 

