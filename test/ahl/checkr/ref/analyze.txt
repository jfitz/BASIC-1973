Statistics:

Number of lines: 192
Number of valid statements: 185
Number of comments: 7
Number of executable statements: 183

Complexity:

Comment density: 0.038
Comprehension effort: 609
McCabe complexity: 76
Halstead complexity:
 length: 919
 volume: 4528.146
 difficulty: 47.224
 effort: 213837.798
 language: 2.030
 intelligence: 95.886
 time: 197.998

(0 2) 100 PRINT "  THIS PROGRAM WILL PLAY CHECKERS. THE COMPUTER IS X,"
(0 2) 200 PRINT "AND YOU ARE O. THE COMPUTER WILL GO FIRST,-NOTE: SQUARES"
(0 2) 300 PRINT "ARE IN THE FORM-(X,Y) AND SQ. 1,1 IS THE BOTTOM LEFT!"
(0 2) 400 PRINT "DO NOT ATTEMPT A DOUBLE JUMP OR YOUR PIECE MIGHT JUST "
(0 2) 500 PRINT "DISAPPEAR(SAME FOR A TRIPLE!)"
(0 2) 600 PRINT "     WAIT FOR THE COMP. TO MOVE!!!!!"
(0 4) 700 LET G = -1
(0 2) 800 DIM R(50)
(0 4) 900 LET L = -1
(0 2) 1000 DIM S(10, 10)
(0 5) 1100 DATA 1, 0, 1, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, -1, 0, -1, 15
(1 3) 1200 FOR X = 1 TO 8
(1 3) 1300 FOR Y = 1 TO 8
(1 2) 1400 READ J
(1 4) 1500 IF J = 15 THEN 1800
(0 3) 1600 LET S(X, Y) = J
(0 2) 1700 GOTO 2000
(0 1) 1800 RESTORE
(1 2) 1900 READ S(X, Y)
(0 1) 2000 NEXT Y
(0 1) 2100 NEXT X
(0 1) 2200 REM
(0 5) 2300 LET L = -1 * L
(1 3) 2400 FOR X = 1 TO 8
(1 3) 2500 FOR Y = 1 TO 8
(1 4) 2600 IF S(X, Y) = 0 THEN 3500
(1 4) 2700 IF G > 0 THEN 3000
(1 4) 2800 IF S(X, Y) > 0 THEN 3500
(0 2) 2900 GOTO 3100
(1 4) 3000 IF S(X, Y) < 0 THEN 3500
(1 5) 3100 IF ABS(S(X, Y)) <> 1 THEN 3300
(0 2) 3200 GOSUB 4300
(1 5) 3300 IF ABS(S(X, Y)) <> 2 THEN 3500
(0 2) 3400 GOSUB 6500
(1 4) 3500 IF X <> 8 THEN 3800
(1 4) 3600 IF L = 1 THEN 3800
(0 1) 3700 RETURN
(0 1) 3800 NEXT Y
(0 1) 3900 NEXT X
(0 2) 4000 PRINT
(0 2) 4100 GOSUB 11400
(0 3) 4200 GOTO 2300
(1 5) 4300 FOR A = -1 TO 1 STEP 2
(0 4) 4400 LET U = X + A
(0 4) 4500 LET V = Y + G
(1 4) 4600 IF U < 1 THEN 6300
(1 4) 4700 IF U > 8 THEN 6300
(1 4) 4800 IF V < 1 THEN 6300
(1 4) 4900 IF V > 8 THEN 6300
(1 4) 5000 IF S(U, V) <> 0 THEN 5300
(0 2) 5100 GOSUB 9100
(0 2) 5200 GOTO 6300
(1 4) 5300 IF S(U, V) = G THEN 6300
(1 6) 5400 IF S(U, V) = 2 * G THEN 6300
(0 4) 5500 LET U = U + A
(0 4) 5600 LET V = V + G
(1 4) 5700 IF U < 1 THEN 6300
(1 4) 5800 IF U > 8 THEN 6300
(1 4) 5900 IF V < 1 THEN 6300
(1 4) 6000 IF V > 8 THEN 6300
(1 4) 6100 IF S(U, V) <> 0 THEN 6300
(0 2) 6200 GOSUB 9100
(0 1) 6300 NEXT A
(0 1) 6400 RETURN
(0 1) 6500 REM KING MOVES
(1 5) 6600 FOR A = -1 TO 1 STEP 2
(1 5) 6700 FOR B = -1 TO 1 STEP 2
(0 4) 6800 LET U = X + A
(0 4) 6900 LET V = Y + B
(1 4) 7000 IF U < 1 THEN 8700
(1 4) 7100 IF U > 8 THEN 8700
(1 4) 7200 IF V < 1 THEN 8700
(1 4) 7300 IF V > 8 THEN 8700
(1 4) 7400 IF S(U, V) <> 0 THEN 7700
(0 2) 7500 GOSUB 9100
(0 2) 7600 GOTO 8700
(1 4) 7700 IF S(U, V) = G THEN 8700
(1 6) 7800 IF S(U, V) = 2 * G THEN 8700
(0 4) 7900 LET U = U + A
(0 4) 8000 LET V = V + B
(1 4) 8100 IF U < 1 THEN 8700
(1 4) 8200 IF U > 8 THEN 8700
(1 4) 8300 IF V < 1 THEN 8700
(1 4) 8400 IF V > 8 THEN 8700
(1 4) 8500 IF S(U, V) <> 0 THEN 8700
(0 2) 8600 GOSUB 9100
(0 1) 8700 NEXT B
(0 1) 8800 NEXT A
(0 1) 8900 RETURN
(0 2) 9000 GOTO 14200
(0 1) 9100 REM
(0 4) 9200 LET P = P + 1
(1 4) 9300 IF P = K THEN 12300
(1 8) 9400 IF V <> (4.5 + (3.5 * G)) THEN 9600
(0 4) 9500 LET Q = Q + 2
(1 8) 9600 IF X <> (4.5 - (3.5 * G)) THEN 9800
(0 4) 9700 LET Q = Q - 2
(0 1) 9800 REM
(1 4) 9900 IF U <> 1 THEN 10100
(0 4) 10000 LET Q = Q + 1
(1 4) 10100 IF U <> 8 THEN 10300
(0 4) 10200 LET Q = Q + 1
(1 5) 10300 FOR C = -1 TO 1 STEP 2
(1 4) 10400 IF S(U + C, V + G) < 1 THEN 10800
(0 4) 10500 LET Q = Q - 1
(1 4) 10600 IF S(U - C, V - G) <> 0 THEN 10800
(0 4) 10700 LET Q = Q - 1
(0 1) 10800 REM THIS WAS THE EVALUATION SECTION
(0 1) 10900 REM
(0 1) 11000 NEXT C
(0 3) 11100 LET R(P) = Q
(0 3) 11200 LET Q = 0
(0 1) 11300 RETURN
(1 4) 11400 IF P = 0 THEN 18800
(1 6) 11500 FOR J = 10 TO -10 STEP -1
(1 3) 11600 FOR F = 1 TO P
(1 4) 11700 IF R(F) = J THEN 12000
(0 1) 11800 NEXT F
(0 1) 11900 NEXT J
(0 4) 12000 LET K = F + P
(0 3) 12100 GOSUB 2300
(0 1) 12200 RETURN
(0 8) 12300 PRINT " I MOVE FROM (" X; Y ") TO (" U; V ")"
(0 3) 12400 LET F = 0
(0 3) 12500 LET P = 0
(0 3) 12600 LET K = 0
(1 8) 12700 IF V <> (4.5 + (3.5 * G)) THEN 13000
(0 4) 12800 LET S(U, V) = 2 * G
(0 2) 12900 GOTO 13100
(0 3) 13000 LET S(U, V) = S(X, Y)
(0 3) 13100 LET S(X, Y) = 0
(1 5) 13200 IF ABS(X - U) <> 2 THEN 13400
(0 3) 13300 LET S((X + U) / 2, (Y + V) / 2) = 0
(0 2) 13400 PRINT "BOARD";
(1 2) 13500 INPUT D$
(1 4) 13600 IF D$ <> "YES" THEN 13900
(0 2) 13700 GOSUB 14100
(0 1) 13800 RETURN
(0 2) 13900 GOSUB 15800
(0 1) 14000 RETURN
(0 2) 14100 PRINT
(1 5) 14200 FOR Y = 8 TO 1 STEP -1
(1 3) 14300 FOR X = 1 TO 8
(0 4) 14400 LET I = 2 * X
(1 4) 14500 IF S(X, Y) <> 0 THEN 14700
(0 4) 14600 PRINT TAB(I) ".";
(1 4) 14700 IF S(X, Y) <> 1 THEN 14900
(0 4) 14800 PRINT TAB(I) "O";
(1 6) 14900 IF S(X, Y) <> -1 THEN 15100
(0 4) 15000 PRINT TAB(I) "X";
(1 6) 15100 IF S(X, Y) <> -2 THEN 15300
(0 7) 15200 PRINT TAB(I) "X"; TAB(I) "*";
(1 4) 15300 IF S(X, Y) <> 2 THEN 15500
(0 7) 15400 PRINT TAB(I) "O"; TAB(I) "*";
(0 1) 15500 NEXT X
(0 2) 15600 PRINT
(0 1) 15700 NEXT Y
(0 2) 15800 PRINT
(0 2) 15900 PRINT "FROM";
(2 3) 16000 INPUT E, H
(0 3) 16100 LET X = E
(0 3) 16200 LET Y = H
(1 4) 16300 IF S(X, Y) <> 0 THEN 16700
(0 2) 16400 PRINT "THERE IS NO ONE OCCUPING THAT SPACE"
(0 2) 16500 PRINT
(0 3) 16600 GOTO 15900
(0 2) 16700 PRINT "TO";
(2 3) 16800 INPUT A, B
(0 3) 16900 LET X = A
(0 3) 17000 LET Y = B
(1 4) 17100 IF S(X, Y) = 0 THEN 17500
(0 2) 17200 PRINT "THAT SPACE IS ALREADY OCCUPIED"
(0 2) 17300 PRINT
(0 3) 17400 GOTO 16700
(0 1) 17500 REM LET S(A$B)=S(E,H)
(0 3) 17600 LET S(A, B) = S(E, H)
(0 3) 17700 LET S(E, H) = 0
(0 6) 17800 LET T = (4.5 - (3.5 * G))
(1 5) 17900 IF ABS(E - A) <> 2 THEN 18100
(0 3) 18000 LET S((E + A) / 2, (H + B) / 2) = 0
(1 4) 18100 IF B <> T THEN 18300
(0 5) 18200 LET S(A, B) = -2 * G
(1 3) 18300 FOR X = 8 TO 8
(1 3) 18400 FOR Y = 8 TO 8
(0 1) 18500 RETURN
(0 1) 18600 NEXT Y
(0 1) 18700 NEXT X
(0 2) 18800 PRINT "    VERY GOOD, YOU WIN!"
(0 2) 18900 PRINT
(0 2) 19000 PRINT
(0 2) 19100 PRINT "                       -CHUCK OUT"
(0 1) 19200 END

Unreachable code:

9000: GOTO 14200
18600: NEXT Y
18700: NEXT X

