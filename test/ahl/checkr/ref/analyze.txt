Statistics:

Number of lines: 192
Number of valid statements: 185
Number of comments: 7
Number of executable statements: 183

Complexity:

Comment density: 0.038
Comprehension effort: 609
McCabe complexity: 76
Halstead complexity:
 length: 919
 volume: 4528.146
 difficulty: 47.224
 effort: 213837.798
 language: 2.030
 intelligence: 95.886
 time: 197.998

(0 2) 100 PRINT "  THIS PROGRAM WILL PLAY CHECKERS. THE COMPUTER IS X,"
  Origs: 
  Dests: 200
(0 2) 200 PRINT "AND YOU ARE O. THE COMPUTER WILL GO FIRST,-NOTE: SQUARES"
  Origs: 100
  Dests: 300
(0 2) 300 PRINT "ARE IN THE FORM-(X,Y) AND SQ. 1,1 IS THE BOTTOM LEFT!"
  Origs: 200
  Dests: 400
(0 2) 400 PRINT "DO NOT ATTEMPT A DOUBLE JUMP OR YOUR PIECE MIGHT JUST "
  Origs: 300
  Dests: 500
(0 2) 500 PRINT "DISAPPEAR(SAME FOR A TRIPLE!)"
  Origs: 400
  Dests: 600
(0 2) 600 PRINT "     WAIT FOR THE COMP. TO MOVE!!!!!"
  Origs: 500
  Dests: 700
(0 4) 700 LET G = -1
  Origs: 600
  Dests: 800
(0 2) 800 DIM R(50)
  Origs: 700
  Dests: 900
(0 4) 900 LET L = -1
  Origs: 800
  Dests: 1000
(0 2) 1000 DIM S(10, 10)
  Origs: 900
  Dests: 1100
(0 5) 1100 DATA 1, 0, 1, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, -1, 0, -1, 15
  Origs: 1000
  Dests: 1200
(1 3) 1200 FOR X = 1 TO 8
  Origs: 1100
  Dests: 1300
(1 3) 1300 FOR Y = 1 TO 8
  Origs: 1200
  Dests: 1400
(1 2) 1400 READ J
  Origs: 1300
  Dests: 1500
(1 4) 1500 IF J = 15 THEN 1800
  Origs: 1400
  Dests: 1600, 1800
(0 3) 1600 LET S(X, Y) = J
  Origs: 1500
  Dests: 1700
(0 2) 1700 GOTO 2000
  Origs: 1600
  Dests: 2000
(0 1) 1800 RESTORE
  Origs: 1500
  Dests: 1900
(1 2) 1900 READ S(X, Y)
  Origs: 1800
  Dests: 2000
(0 1) 2000 NEXT Y
  Origs: 1700, 1900
  Dests: 2100
(0 1) 2100 NEXT X
  Origs: 2000
  Dests: 2200
(0 1) 2200 REM
  Origs: 2100
  Dests: 2300
(0 5) 2300 LET L = -1 * L
  Origs: 2200, 4200, 12100
  Dests: 2400
(1 3) 2400 FOR X = 1 TO 8
  Origs: 2300
  Dests: 2500
(1 3) 2500 FOR Y = 1 TO 8
  Origs: 2400
  Dests: 2600
(1 4) 2600 IF S(X, Y) = 0 THEN 3500
  Origs: 2500
  Dests: 2700, 3500
(1 4) 2700 IF G > 0 THEN 3000
  Origs: 2600
  Dests: 2800, 3000
(1 4) 2800 IF S(X, Y) > 0 THEN 3500
  Origs: 2700
  Dests: 2900, 3500
(0 2) 2900 GOTO 3100
  Origs: 2800
  Dests: 3100
(1 4) 3000 IF S(X, Y) < 0 THEN 3500
  Origs: 2700
  Dests: 3100, 3500
(1 5) 3100 IF ABS(S(X, Y)) <> 1 THEN 3300
  Origs: 2900, 3000
  Dests: 3200, 3300
(0 2) 3200 GOSUB 4300
  Origs: 3100
  Dests: 3300, 4300
(1 5) 3300 IF ABS(S(X, Y)) <> 2 THEN 3500
  Origs: 3100, 3200
  Dests: 3400, 3500
(0 2) 3400 GOSUB 6500
  Origs: 3300
  Dests: 3500, 6500
(1 4) 3500 IF X <> 8 THEN 3800
  Origs: 2600, 2800, 3000, 3300, 3400
  Dests: 3600, 3800
(1 4) 3600 IF L = 1 THEN 3800
  Origs: 3500
  Dests: 3700, 3800
(0 1) 3700 RETURN
  Origs: 3600
  Dests: 
(0 1) 3800 NEXT Y
  Origs: 3500, 3600
  Dests: 3900
(0 1) 3900 NEXT X
  Origs: 3800
  Dests: 4000
(0 2) 4000 PRINT
  Origs: 3900
  Dests: 4100
(0 2) 4100 GOSUB 11400
  Origs: 4000
  Dests: 4200, 11400
(0 3) 4200 GOTO 2300
  Origs: 4100
  Dests: 2300
(1 5) 4300 FOR A = -1 TO 1 STEP 2
  Origs: 3200
  Dests: 4400
(0 4) 4400 LET U = X + A
  Origs: 4300
  Dests: 4500
(0 4) 4500 LET V = Y + G
  Origs: 4400
  Dests: 4600
(1 4) 4600 IF U < 1 THEN 6300
  Origs: 4500
  Dests: 4700, 6300
(1 4) 4700 IF U > 8 THEN 6300
  Origs: 4600
  Dests: 4800, 6300
(1 4) 4800 IF V < 1 THEN 6300
  Origs: 4700
  Dests: 4900, 6300
(1 4) 4900 IF V > 8 THEN 6300
  Origs: 4800
  Dests: 5000, 6300
(1 4) 5000 IF S(U, V) <> 0 THEN 5300
  Origs: 4900
  Dests: 5100, 5300
(0 2) 5100 GOSUB 9100
  Origs: 5000
  Dests: 5200, 9100
(0 2) 5200 GOTO 6300
  Origs: 5100
  Dests: 6300
(1 4) 5300 IF S(U, V) = G THEN 6300
  Origs: 5000
  Dests: 5400, 6300
(1 6) 5400 IF S(U, V) = 2 * G THEN 6300
  Origs: 5300
  Dests: 5500, 6300
(0 4) 5500 LET U = U + A
  Origs: 5400
  Dests: 5600
(0 4) 5600 LET V = V + G
  Origs: 5500
  Dests: 5700
(1 4) 5700 IF U < 1 THEN 6300
  Origs: 5600
  Dests: 5800, 6300
(1 4) 5800 IF U > 8 THEN 6300
  Origs: 5700
  Dests: 5900, 6300
(1 4) 5900 IF V < 1 THEN 6300
  Origs: 5800
  Dests: 6000, 6300
(1 4) 6000 IF V > 8 THEN 6300
  Origs: 5900
  Dests: 6100, 6300
(1 4) 6100 IF S(U, V) <> 0 THEN 6300
  Origs: 6000
  Dests: 6200, 6300
(0 2) 6200 GOSUB 9100
  Origs: 6100
  Dests: 6300, 9100
(0 1) 6300 NEXT A
  Origs: 4600, 4700, 4800, 4900, 5200, 5300, 5400, 5700, 5800, 5900, 6000, 6100, 6200
  Dests: 6400
(0 1) 6400 RETURN
  Origs: 6300
  Dests: 
(0 1) 6500 REM KING MOVES
  Origs: 3400
  Dests: 6600
(1 5) 6600 FOR A = -1 TO 1 STEP 2
  Origs: 6500
  Dests: 6700
(1 5) 6700 FOR B = -1 TO 1 STEP 2
  Origs: 6600
  Dests: 6800
(0 4) 6800 LET U = X + A
  Origs: 6700
  Dests: 6900
(0 4) 6900 LET V = Y + B
  Origs: 6800
  Dests: 7000
(1 4) 7000 IF U < 1 THEN 8700
  Origs: 6900
  Dests: 7100, 8700
(1 4) 7100 IF U > 8 THEN 8700
  Origs: 7000
  Dests: 7200, 8700
(1 4) 7200 IF V < 1 THEN 8700
  Origs: 7100
  Dests: 7300, 8700
(1 4) 7300 IF V > 8 THEN 8700
  Origs: 7200
  Dests: 7400, 8700
(1 4) 7400 IF S(U, V) <> 0 THEN 7700
  Origs: 7300
  Dests: 7500, 7700
(0 2) 7500 GOSUB 9100
  Origs: 7400
  Dests: 7600, 9100
(0 2) 7600 GOTO 8700
  Origs: 7500
  Dests: 8700
(1 4) 7700 IF S(U, V) = G THEN 8700
  Origs: 7400
  Dests: 7800, 8700
(1 6) 7800 IF S(U, V) = 2 * G THEN 8700
  Origs: 7700
  Dests: 7900, 8700
(0 4) 7900 LET U = U + A
  Origs: 7800
  Dests: 8000
(0 4) 8000 LET V = V + B
  Origs: 7900
  Dests: 8100
(1 4) 8100 IF U < 1 THEN 8700
  Origs: 8000
  Dests: 8200, 8700
(1 4) 8200 IF U > 8 THEN 8700
  Origs: 8100
  Dests: 8300, 8700
(1 4) 8300 IF V < 1 THEN 8700
  Origs: 8200
  Dests: 8400, 8700
(1 4) 8400 IF V > 8 THEN 8700
  Origs: 8300
  Dests: 8500, 8700
(1 4) 8500 IF S(U, V) <> 0 THEN 8700
  Origs: 8400
  Dests: 8600, 8700
(0 2) 8600 GOSUB 9100
  Origs: 8500
  Dests: 8700, 9100
(0 1) 8700 NEXT B
  Origs: 7000, 7100, 7200, 7300, 7600, 7700, 7800, 8100, 8200, 8300, 8400, 8500, 8600
  Dests: 8800
(0 1) 8800 NEXT A
  Origs: 8700
  Dests: 8900
(0 1) 8900 RETURN
  Origs: 8800
  Dests: 
(0 2) 9000 GOTO 14200
  Origs: 
  Dests: 14200
(0 1) 9100 REM
  Origs: 5100, 6200, 7500, 8600
  Dests: 9200
(0 4) 9200 LET P = P + 1
  Origs: 9100
  Dests: 9300
(1 4) 9300 IF P = K THEN 12300
  Origs: 9200
  Dests: 9400, 12300
(1 8) 9400 IF V <> (4.5 + (3.5 * G)) THEN 9600
  Origs: 9300
  Dests: 9500, 9600
(0 4) 9500 LET Q = Q + 2
  Origs: 9400
  Dests: 9600
(1 8) 9600 IF X <> (4.5 - (3.5 * G)) THEN 9800
  Origs: 9400, 9500
  Dests: 9700, 9800
(0 4) 9700 LET Q = Q - 2
  Origs: 9600
  Dests: 9800
(0 1) 9800 REM
  Origs: 9600, 9700
  Dests: 9900
(1 4) 9900 IF U <> 1 THEN 10100
  Origs: 9800
  Dests: 10000, 10100
(0 4) 10000 LET Q = Q + 1
  Origs: 9900
  Dests: 10100
(1 4) 10100 IF U <> 8 THEN 10300
  Origs: 9900, 10000
  Dests: 10200, 10300
(0 4) 10200 LET Q = Q + 1
  Origs: 10100
  Dests: 10300
(1 5) 10300 FOR C = -1 TO 1 STEP 2
  Origs: 10100, 10200
  Dests: 10400
(1 4) 10400 IF S(U + C, V + G) < 1 THEN 10800
  Origs: 10300
  Dests: 10500, 10800
(0 4) 10500 LET Q = Q - 1
  Origs: 10400
  Dests: 10600
(1 4) 10600 IF S(U - C, V - G) <> 0 THEN 10800
  Origs: 10500
  Dests: 10700, 10800
(0 4) 10700 LET Q = Q - 1
  Origs: 10600
  Dests: 10800
(0 1) 10800 REM THIS WAS THE EVALUATION SECTION
  Origs: 10400, 10600, 10700
  Dests: 10900
(0 1) 10900 REM
  Origs: 10800
  Dests: 11000
(0 1) 11000 NEXT C
  Origs: 10900
  Dests: 11100
(0 3) 11100 LET R(P) = Q
  Origs: 11000
  Dests: 11200
(0 3) 11200 LET Q = 0
  Origs: 11100
  Dests: 11300
(0 1) 11300 RETURN
  Origs: 11200
  Dests: 
(1 4) 11400 IF P = 0 THEN 18800
  Origs: 4100
  Dests: 11500, 18800
(1 6) 11500 FOR J = 10 TO -10 STEP -1
  Origs: 11400
  Dests: 11600
(1 3) 11600 FOR F = 1 TO P
  Origs: 11500
  Dests: 11700
(1 4) 11700 IF R(F) = J THEN 12000
  Origs: 11600
  Dests: 11800, 12000
(0 1) 11800 NEXT F
  Origs: 11700
  Dests: 11900
(0 1) 11900 NEXT J
  Origs: 11800
  Dests: 12000
(0 4) 12000 LET K = F + P
  Origs: 11700, 11900
  Dests: 12100
(0 3) 12100 GOSUB 2300
  Origs: 12000
  Dests: 2300, 12200
(0 1) 12200 RETURN
  Origs: 12100
  Dests: 
(0 8) 12300 PRINT " I MOVE FROM (" X; Y ") TO (" U; V ")"
  Origs: 9300
  Dests: 12400
(0 3) 12400 LET F = 0
  Origs: 12300
  Dests: 12500
(0 3) 12500 LET P = 0
  Origs: 12400
  Dests: 12600
(0 3) 12600 LET K = 0
  Origs: 12500
  Dests: 12700
(1 8) 12700 IF V <> (4.5 + (3.5 * G)) THEN 13000
  Origs: 12600
  Dests: 12800, 13000
(0 4) 12800 LET S(U, V) = 2 * G
  Origs: 12700
  Dests: 12900
(0 2) 12900 GOTO 13100
  Origs: 12800
  Dests: 13100
(0 3) 13000 LET S(U, V) = S(X, Y)
  Origs: 12700
  Dests: 13100
(0 3) 13100 LET S(X, Y) = 0
  Origs: 12900, 13000
  Dests: 13200
(1 5) 13200 IF ABS(X - U) <> 2 THEN 13400
  Origs: 13100
  Dests: 13300, 13400
(0 3) 13300 LET S((X + U) / 2, (Y + V) / 2) = 0
  Origs: 13200
  Dests: 13400
(0 2) 13400 PRINT "BOARD";
  Origs: 13200, 13300
  Dests: 13500
(1 2) 13500 INPUT D$
  Origs: 13400
  Dests: 13600
(1 4) 13600 IF D$ <> "YES" THEN 13900
  Origs: 13500
  Dests: 13700, 13900
(0 2) 13700 GOSUB 14100
  Origs: 13600
  Dests: 13800, 14100
(0 1) 13800 RETURN
  Origs: 13700
  Dests: 
(0 2) 13900 GOSUB 15800
  Origs: 13600
  Dests: 14000, 15800
(0 1) 14000 RETURN
  Origs: 13900
  Dests: 
(0 2) 14100 PRINT
  Origs: 13700
  Dests: 14200
(1 5) 14200 FOR Y = 8 TO 1 STEP -1
  Origs: 9000, 14100
  Dests: 14300
(1 3) 14300 FOR X = 1 TO 8
  Origs: 14200
  Dests: 14400
(0 4) 14400 LET I = 2 * X
  Origs: 14300
  Dests: 14500
(1 4) 14500 IF S(X, Y) <> 0 THEN 14700
  Origs: 14400
  Dests: 14600, 14700
(0 4) 14600 PRINT TAB(I) ".";
  Origs: 14500
  Dests: 14700
(1 4) 14700 IF S(X, Y) <> 1 THEN 14900
  Origs: 14500, 14600
  Dests: 14800, 14900
(0 4) 14800 PRINT TAB(I) "O";
  Origs: 14700
  Dests: 14900
(1 6) 14900 IF S(X, Y) <> -1 THEN 15100
  Origs: 14700, 14800
  Dests: 15000, 15100
(0 4) 15000 PRINT TAB(I) "X";
  Origs: 14900
  Dests: 15100
(1 6) 15100 IF S(X, Y) <> -2 THEN 15300
  Origs: 14900, 15000
  Dests: 15200, 15300
(0 7) 15200 PRINT TAB(I) "X"; TAB(I) "*";
  Origs: 15100
  Dests: 15300
(1 4) 15300 IF S(X, Y) <> 2 THEN 15500
  Origs: 15100, 15200
  Dests: 15400, 15500
(0 7) 15400 PRINT TAB(I) "O"; TAB(I) "*";
  Origs: 15300
  Dests: 15500
(0 1) 15500 NEXT X
  Origs: 15300, 15400
  Dests: 15600
(0 2) 15600 PRINT
  Origs: 15500
  Dests: 15700
(0 1) 15700 NEXT Y
  Origs: 15600
  Dests: 15800
(0 2) 15800 PRINT
  Origs: 13900, 15700
  Dests: 15900
(0 2) 15900 PRINT "FROM";
  Origs: 15800, 16600
  Dests: 16000
(2 3) 16000 INPUT E, H
  Origs: 15900
  Dests: 16100
(0 3) 16100 LET X = E
  Origs: 16000
  Dests: 16200
(0 3) 16200 LET Y = H
  Origs: 16100
  Dests: 16300
(1 4) 16300 IF S(X, Y) <> 0 THEN 16700
  Origs: 16200
  Dests: 16400, 16700
(0 2) 16400 PRINT "THERE IS NO ONE OCCUPING THAT SPACE"
  Origs: 16300
  Dests: 16500
(0 2) 16500 PRINT
  Origs: 16400
  Dests: 16600
(0 3) 16600 GOTO 15900
  Origs: 16500
  Dests: 15900
(0 2) 16700 PRINT "TO";
  Origs: 16300, 17400
  Dests: 16800
(2 3) 16800 INPUT A, B
  Origs: 16700
  Dests: 16900
(0 3) 16900 LET X = A
  Origs: 16800
  Dests: 17000
(0 3) 17000 LET Y = B
  Origs: 16900
  Dests: 17100
(1 4) 17100 IF S(X, Y) = 0 THEN 17500
  Origs: 17000
  Dests: 17200, 17500
(0 2) 17200 PRINT "THAT SPACE IS ALREADY OCCUPIED"
  Origs: 17100
  Dests: 17300
(0 2) 17300 PRINT
  Origs: 17200
  Dests: 17400
(0 3) 17400 GOTO 16700
  Origs: 17300
  Dests: 16700
(0 1) 17500 REM LET S(A$B)=S(E,H)
  Origs: 17100
  Dests: 17600
(0 3) 17600 LET S(A, B) = S(E, H)
  Origs: 17500
  Dests: 17700
(0 3) 17700 LET S(E, H) = 0
  Origs: 17600
  Dests: 17800
(0 6) 17800 LET T = (4.5 - (3.5 * G))
  Origs: 17700
  Dests: 17900
(1 5) 17900 IF ABS(E - A) <> 2 THEN 18100
  Origs: 17800
  Dests: 18000, 18100
(0 3) 18000 LET S((E + A) / 2, (H + B) / 2) = 0
  Origs: 17900
  Dests: 18100
(1 4) 18100 IF B <> T THEN 18300
  Origs: 17900, 18000
  Dests: 18200, 18300
(0 5) 18200 LET S(A, B) = -2 * G
  Origs: 18100
  Dests: 18300
(1 3) 18300 FOR X = 8 TO 8
  Origs: 18100, 18200
  Dests: 18400
(1 3) 18400 FOR Y = 8 TO 8
  Origs: 18300
  Dests: 18500
(0 1) 18500 RETURN
  Origs: 18400
  Dests: 
(0 1) 18600 NEXT Y
  Origs: 
  Dests: 18700
(0 1) 18700 NEXT X
  Origs: 18600
  Dests: 18800
(0 2) 18800 PRINT "    VERY GOOD, YOU WIN!"
  Origs: 11400, 18700
  Dests: 18900
(0 2) 18900 PRINT
  Origs: 18800
  Dests: 19000
(0 2) 19000 PRINT
  Origs: 18900
  Dests: 19100
(0 2) 19100 PRINT "                       -CHUCK OUT"
  Origs: 19000
  Dests: 19200
(0 1) 19200 END
  Origs: 19100
  Dests: 

Unreachable code:

9000: GOTO 14200
18600: NEXT Y
18700: NEXT X

