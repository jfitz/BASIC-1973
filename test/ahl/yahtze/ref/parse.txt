1000 A(0)=5
 NumericValue:0
 Variable:A(.) -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
1010 FOR U=1 TO 5
 control: Variable:U -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
1020 A(U)=7
 Variable:U -> .
 Variable:A(.) -> .
 NumericValue:7
 AssignmentOperator:= =. -> .
1030 NEXT U
 Variable:U -> .
1040 CHANGE A TO C$
 Variable:A() -> .()
 Variable:C$ -> $
1060DIMA(15,15),T(15,15),F(15,15),S(15,15),L(15,15),K(15,15),H(15,15)
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:15
 NumericValue:15
 Declaration:A(,) -> .(,)
 NumericValue:15
 NumericValue:15
 Declaration:T(,) -> .(,)
 NumericValue:15
 NumericValue:15
 Declaration:F(,) -> .(,)
 NumericValue:15
 NumericValue:15
 Declaration:S(,) -> .(,)
 NumericValue:15
 NumericValue:15
 Declaration:L(,) -> .(,)
 NumericValue:15
 NumericValue:15
 Declaration:K(,) -> .(,)
 NumericValue:15
 NumericValue:15
 Declaration:H(,) -> .(,)
1070 FOR I=1 TO 5
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
1080 B(I)=0
 Variable:I -> .
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1090 Q(I)=0
 Variable:I -> .
 Variable:Q(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1100 A(I)=0
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1110 NEXT I
 Variable:I -> .
1120 RANDOM
 
1130 PRINT "HOW MANY PLAYERS [TYPE '0' FOP INSTRUCTIONS]";I
 TextValue:"HOW MANY PLAYERS [TYPE '0' FOP INSTRUCTIONS]"
 CarriageControl:;
 Variable:I -> .
 CarriageControl:NL
1140 INPUT P
 Variable:P -> .
1150 IF P>15 THEN 1180
 Variable:P -> .
 NumericValue:15
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1180
1160 IF P=0 THEN 4980
 Variable:P -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4980
1170 GO TO 1200
 LineNumber:1200
1180 GOSUB 5710
 LineNumber:5710
1190 GO TO 1130
 LineNumber:1130
1200 IF P=.01 THEN 1220
 Variable:P -> .
 NumericValue:.01
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1220
1210 GO TO 1240
 LineNumber:1240
1220 GOSUB 5730
 LineNumber:5730
1230 GO TO 1140
 LineNumber:1140
1240 FOR I=1 TO P
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P -> ."]
1250 A(1,I)=-5
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1260 T(1,I)=-5
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1270 T(2,I)=-5
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1280 F(1,I)=-5
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1290 F(2,I)=-5
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1300 S(1,I)=-5
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1310 T(3,I)=-5
 NumericValue:3
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1320 F(3,I)=-5
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1330 F(4,I)=-5
 NumericValue:4
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1340 S(2,I)=-5
 NumericValue:2
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1350 L(1,I)=-5
 NumericValue:1
 Variable:I -> .
 Variable:L(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1360 Y(I)=-5
 Variable:I -> .
 Variable:Y(.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1370 C(I)=-5
 Variable:I -> .
 Variable:C(.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1380 K(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:K(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1390 K(I)=0
 Variable:I -> .
 Variable:K(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1400 M(I)=0
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1410 PRINT "NAME";
 TextValue:"NAME"
 CarriageControl:;
1420 INPUT N$(I)
 Variable:I -> .
 Variable:N$(.) -> $
1430 IF N$(I)="WHAT?" THEN 1450
 Variable:I -> .
 Variable:N$(.) -> $
 TextValue:"WHAT?"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1450
1440 GO TO 1470
 LineNumber:1470
1450 GOSUB 5580
 LineNumber:5580
1460 GO TO 1410
 LineNumber:1410
1470 NEXT I
 Variable:I -> .
1480 R=0
 Variable:R -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1490 R=R+1
 Variable:R -> .
 Variable:R -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1495 IF R>13 THEN 6470
 Variable:R -> .
 NumericValue:13
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:6470
1500 PRINT
 CarriageControl:NL
1510 PRINT
 CarriageControl:NL
1520 PRINT "ROUND";R
 TextValue:"ROUND"
 CarriageControl:;
 Variable:R -> .
 CarriageControl:NL
1530 PRINT
 CarriageControl:NL
1540 FOR I=1 TO P
 WARNING: FORNEXT length exceeds limit 40
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P -> ."]
1550 PRINT
 CarriageControl:NL
1560 PRINT
 CarriageControl:NL
1570 PRINT N$(I);"'S TURN"
 Variable:I -> .
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:"'S TURN"
 CarriageControl:NL
1580 FOR L=1 TO 5
 control: Variable:L -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
1590 A(L)=INT(6*RND(-1)+1)
 Variable:L -> .
 Variable:A(.) -> .
 NumericValue:6
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
1600 NEXT L
 Variable:L -> .
1605 GOSUB 1610
 LineNumber:1610
1607 GO TO 1700
 LineNumber:1700
1610 G=0
 WARNING: Inconsistent GOSUB origins
 Variable:G -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1620 FOR X=1 TO 5
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
1630 IF A(X)>=A(X+1) THEN 1680
 Variable:X -> .
 Variable:A(.) -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:A(.) -> .
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:1680
1640 H=A(X)
 Variable:H -> .
 Variable:X -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
1650 A(X)=A(X+1)
 Variable:X -> .
 Variable:A(.) -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:A(.) -> .
 AssignmentOperator:= . -> .
1660 A(X+1)=H
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:A(.) -> .
 Variable:H -> .
 AssignmentOperator:= . -> .
1670 G=1
 Variable:G -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1680 NEXT X
 Variable:X -> .
1685 IF G=1 THEN 1610
 Variable:G -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1610
1690 RETURN
 
1700 PRINT "YOU HAVE A ";A(1);A(2);A(3);A(4);A(5)
 TextValue:"YOU HAVE A "
 CarriageControl:;
 NumericValue:1
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:2
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:3
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:4
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:5
 Variable:A(.) -> .
 CarriageControl:NL
1710 PRINT "THIS IS YOUR 2ND OF 3 ROLLS,"
 TextValue:"THIS IS YOUR 2ND OF 3 ROLLS,"
 CarriageControl:NL
1720 PRINT "HOW MANY DO YOU WANT TO CHANGE";
 TextValue:"HOW MANY DO YOU WANT TO CHANGE"
 CarriageControl:;
1730 INPUT Z
 Variable:Z -> .
1740 IF Z=.01 THEN 1760
 Variable:Z -> .
 NumericValue:.01
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1760
1750 GO TO 1780
 LineNumber:1780
1760 GOSUB 5600
 LineNumber:5600
1770 GO TO 1730
 LineNumber:1730
1780 IF Z=0 THEN 2620
 Variable:Z -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2620
1790 IF Z=5 THEN 1890
 Variable:Z -> .
 NumericValue:5
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1890
1800 FOR S=1 TO Z
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:Z -> ."]
1810 PRINT "WHICH";
 TextValue:"WHICH"
 CarriageControl:;
1820 INPUT B(S)
 Variable:S -> .
 Variable:B(.) -> .
1830 IF B(S)=.01 THEN 1850
 Variable:S -> .
 Variable:B(.) -> .
 NumericValue:.01
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1850
1840 GO TO 1870
 LineNumber:1870
1850 GOSUB 5620
 LineNumber:5620
1860 GO TO 1810
 LineNumber:1810
1870 NEXT S
 Variable:S -> .
1880 GO TO 1930
 LineNumber:1930
1890 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
1900 A(S)=INT(6*RND(-1)+1)
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:6
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
1910 NEXT S
 Variable:S -> .
1920 GO TO 2050
 LineNumber:2050
1930 FOR L=1 TO S
 control: Variable:L -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:S -> ."]
1940 FOR L1=1 TO 5
 control: Variable:L1 -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
1950 IF B(L)=L1 THEN 1970
 Variable:L -> .
 Variable:B(.) -> .
 Variable:L1 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1970
1960 GO TO 1980
 LineNumber:1980
1970 A(L1)=Q(L1)
 Variable:L1 -> .
 Variable:A(.) -> .
 Variable:L1 -> .
 Variable:Q(.) -> .
 AssignmentOperator:= . -> .
1980 NEXT L1
 Variable:L1 -> .
1990 NEXT L
 Variable:L -> .
2000 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
2010 IF A(S)=0 THEN 2030
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2030
2020 GO TO 2040
 LineNumber:2040
2030 A(S)=INT(6*RND(-1)+1)
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:6
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2040 NEXT S
 Variable:S -> .
2050 GOSUB 1610
 LineNumber:1610
2140 PRINT "YOU HAVE A ";A(1);A(2);A(3);A(4);A(5)
 TextValue:"YOU HAVE A "
 CarriageControl:;
 NumericValue:1
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:2
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:3
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:4
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:5
 Variable:A(.) -> .
 CarriageControl:NL
2150 PRINT "THIS IS YOUR LAST ROLL,"
 TextValue:"THIS IS YOUR LAST ROLL,"
 CarriageControl:NL
2160 PRINT "HOW MANY DO YOU WANT TO CHANGE";
 TextValue:"HOW MANY DO YOU WANT TO CHANGE"
 CarriageControl:;
2170 INPUT Z
 Variable:Z -> .
2180 IF Z=.01 THEN 2200
 Variable:Z -> .
 NumericValue:.01
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2200
2190 GO TO 2220
 LineNumber:2220
2200 GOSUB 5600
 LineNumber:5600
2210 GO TO 2170
 LineNumber:2170
2220 IF Z=0 THEN 2620
 Variable:Z -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2620
2230 IF Z=5 THEN 2360
 Variable:Z -> .
 NumericValue:5
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2360
2240 FOR E=1 TO 5
 control: Variable:E -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
2250 B(E)=0
 Variable:E -> .
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2260 NEXT E
 Variable:E -> .
2270 FOR S=1 TO Z
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:Z -> ."]
2280 PRINT "WHICH";
 TextValue:"WHICH"
 CarriageControl:;
2290 INPUT B(S)
 Variable:S -> .
 Variable:B(.) -> .
2300 IF B(S)=.01 THEN 2320
 Variable:S -> .
 Variable:B(.) -> .
 NumericValue:.01
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2320
2310 GO TO 2340
 LineNumber:2340
2320 GOSUB 5620
 LineNumber:5620
2330 GO TO 2280
 LineNumber:2280
2340 NEXT S
 Variable:S -> .
2350 GO TO 2400
 LineNumber:2400
2360 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
2370 A(S)=INT(6*RND(-1)+1)
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:6
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2380 NEXT S
 Variable:S -> .
2390 GO TO 2520
 LineNumber:2520
2400 FOR L=1 TO 5
 control: Variable:L -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
2410 FOR L1=1 TO 5
 control: Variable:L1 -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
2420 IF B(L)=L1 THEN 2440
 Variable:L -> .
 Variable:B(.) -> .
 Variable:L1 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2440
2430 GO TO 2450
 LineNumber:2450
2440 A(L1)=Q(L)
 Variable:L1 -> .
 Variable:A(.) -> .
 Variable:L -> .
 Variable:Q(.) -> .
 AssignmentOperator:= . -> .
2450 NEXT L1
 Variable:L1 -> .
2460 NEXT L
 Variable:L -> .
2470 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
2480 IF A(S)=0 THEN 2500
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2500
2490 GO TO 2510
 LineNumber:2510
2500 A(S)=INT(6*RND(-1)+1)
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:6
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2510 NEXT S
 Variable:S -> .
2520 GOSUB 1610
 LineNumber:1610
2610 PRINT "YOU HAVE A ";A(1);A(2);A(3);A(4);A(5)
 TextValue:"YOU HAVE A "
 CarriageControl:;
 NumericValue:1
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:2
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:3
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:4
 Variable:A(.) -> .
 CarriageControl:;
 NumericValue:5
 Variable:A(.) -> .
 CarriageControl:NL
2620 PRINT "HOW DO YOU WANT THIS ROUND SCORED";
 TextValue:"HOW DO YOU WANT THIS ROUND SCORED"
 CarriageControl:;
2630 INPUT Z$
 Variable:Z$ -> $
2640 IF Z$="WHAT?" THEN 2680
 Variable:Z$ -> $
 TextValue:"WHAT?"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2680
2650 IF Z$="SUMMARY" THEN 2670
 Variable:Z$ -> $
 TextValue:"SUMMARY"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2670
2660 GO TO 2700
 LineNumber:2700
2670 GOSUB 6140
 LineNumber:6140
2675 GO TO 2620
 LineNumber:2620
2680 GOSUB 5650
 LineNumber:5650
2690 GO TO 2630
 LineNumber:2630
2700 IF Z$="ACES" THEN 2850
 Variable:Z$ -> $
 TextValue:"ACES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2850
2710 IF Z$="TWOS" THEN 2940
 Variable:Z$ -> $
 TextValue:"TWOS"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2940
2720 IF Z$="THREES" THEN 3030
 Variable:Z$ -> $
 TextValue:"THREES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3030
2730 IF Z$="FOURS" THEN 3120
 Variable:Z$ -> $
 TextValue:"FOURS"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3120
2740 IF Z$="FIVES" THEN 3210
 Variable:Z$ -> $
 TextValue:"FIVES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3210
2750 IF Z$="SIXES" THEN 3300
 Variable:Z$ -> $
 TextValue:"SIXES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3300
2760 IF Z$="THREE OF A KIND" THEN 3390
 Variable:Z$ -> $
 TextValue:"THREE OF A KIND"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3390
2770 IF Z$="FOUR OF A KIND" THEN 3440
 Variable:Z$ -> $
 TextValue:"FOUR OF A KIND"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3440
2780 IF Z$="FULL HOUSE" THEN 3520
 Variable:Z$ -> $
 TextValue:"FULL HOUSE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3520
2790 IF Z$="SM. STRAIGHT" THEN 3620
 Variable:Z$ -> $
 TextValue:"SM. STRAIGHT"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3620
2800 IF Z$="LG. STRAIGHT" THEN 3660
 Variable:Z$ -> $
 TextValue:"LG. STRAIGHT"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3660
2810 IF Z$="YAHTZEE" THEN 3730
 Variable:Z$ -> $
 TextValue:"YAHTZEE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3730
2820 IF Z$="CHANCE" THEN 3820
 Variable:Z$ -> $
 TextValue:"CHANCE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3820
2830 IF Z$="ZERO" THEN 3890
 Variable:Z$ -> $
 TextValue:"ZERO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3890
2840 GO TO 2620
 LineNumber:2620
2850 IF A(1,I)<>-5 THEN 3870
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
2860 A(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2870 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
2880 IF A(S)=1 THEN 2900
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2900
2890 GO TO 2910
 LineNumber:2910
2900 A(1,I)=A(1,I)+1
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2910 NEXT S
 Variable:S -> .
2920 M(I)=A(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 AssignmentOperator:= . -> .
2930 GO TO 4690
 LineNumber:4690
2940 IF T(1,I)<>-5 THEN 3870
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
2950 T(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2960 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
2970 IF A(S)=2 THEN 2990
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2990
2980 GO TO 3000
 LineNumber:3000
2990 T(1,I)=T(1,I)+2
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3000 NEXT S
 Variable:S -> .
3010 M(I)=T(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
3020 GO TO 4690
 LineNumber:4690
3030 IF T(2,I)<>-5 THEN 3870
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3040 T(2,I)=0
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3050 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
3060 IF A(S)=3 THEN 3080
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3080
3070 GO TO 3090
 LineNumber:3090
3080 T(2,I)=T(2,I)+3
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:3
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3090 NEXT S
 Variable:S -> .
3100 M(I)=T(2,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
3110 GO TO 4690
 LineNumber:4690
3120 IF F(1,I)<>-5 THEN 3870
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3130 F(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3140 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
3150 IF A(S)=4 THEN 3170
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:4
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3170
3160 GO TO 3180
 LineNumber:3180
3170 F(1,I)=F(1,I)+4
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:4
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3180 NEXT S
 Variable:S -> .
3185 M(I)=F(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 AssignmentOperator:= . -> .
3190 GO TO 4690
 LineNumber:4690
3210 IF F(2,I)<>-5 THEN 3870
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3220 F(2,I)=0
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3230 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
3240 IF A(S)=5 THEN 3260
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:5
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3260
3250 GO TO 3270
 LineNumber:3270
3260 F(2,I)=F(2,I)+5
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3270 NEXT S
 Variable:S -> .
3280 M(I)=F(2,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 AssignmentOperator:= . -> .
3290 GO TO 4690
 LineNumber:4690
3300 IF S(1,I)<>-5 THEN 3870
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3310 S(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3320 FOR S=1 TO 5
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
3330 IF A(S)=6 THEN 3350
 Variable:S -> .
 Variable:A(.) -> .
 NumericValue:6
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3350
3340 GO TO 3360
 LineNumber:3360
3350 S(1,I)=S(1,I)+6
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:6
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3360 NEXT S
 Variable:S -> .
3370 M(I)=S(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 AssignmentOperator:= . -> .
3380 GO TO 4690
 LineNumber:4690
3390 IF T(3,I)<>-5 THEN 3870
 NumericValue:3
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3400 T(3,I)=0
 NumericValue:3
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3410 T(3,I)=A(1)+A(2)+A(3)+A(4)+A(5)
 NumericValue:3
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:1
 Variable:A(.) -> .
 NumericValue:2
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:3
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:4
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:5
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3420 M(I)=T(3,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:3
 Variable:I -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
3430 GO TO 4690
 LineNumber:4690
3440 IF F(3,I)<>-5 THEN 3870
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3450 IF A(1)<>A(4) THEN 4960
 NumericValue:1
 Variable:A(.) -> .
 NumericValue:4
 Variable:A(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3460 IF A(2)<>A(3) THEN 4960
 NumericValue:2
 Variable:A(.) -> .
 NumericValue:3
 Variable:A(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3470 F(3,I)=0
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3480 F(3,I)=A(1)+A(2)+A(3)+A(4)+A(5)
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:1
 Variable:A(.) -> .
 NumericValue:2
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:3
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:4
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:5
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3490 M(I)=F(3,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 AssignmentOperator:= . -> .
3500 F(3,I)=0
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3510 GO TO 4690
 LineNumber:4690
3520 IF F(4,I)<>-5 THEN 3870
 NumericValue:4
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3530 IF A(1)<>A(2) THEN 4960
 NumericValue:1
 Variable:A(.) -> .
 NumericValue:2
 Variable:A(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3540 IF A(4)<>A(S) THEN 4960
 NumericValue:4
 Variable:A(.) -> .
 Variable:S -> .
 Variable:A(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3550 IF A(3)<>A(2) THEN 3570
 NumericValue:3
 Variable:A(.) -> .
 NumericValue:2
 Variable:A(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3570
3560 GO TO 3590
 LineNumber:3590
3570 IF A(3)<>A(4) THEN 4960
 NumericValue:3
 Variable:A(.) -> .
 NumericValue:4
 Variable:A(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3580 GO TO 3590
 LineNumber:3590
3590 F(4,I)=25
 NumericValue:4
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:25
 AssignmentOperator:= =. -> .
3600 M(I)=F(4,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:4
 Variable:I -> .
 Variable:F(.,.) -> .
 AssignmentOperator:= . -> .
3610 GO TO 4690
 LineNumber:4690
3620 IF S(2,I)<>-5 THEN 3870
 NumericValue:2
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3630 S(2,I)=30
 NumericValue:2
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:30
 AssignmentOperator:= =. -> .
3640 M(I)=S(2,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:2
 Variable:I -> .
 Variable:S(.,.) -> .
 AssignmentOperator:= . -> .
3650 GO TO 4690
 LineNumber:4690
3660 IF L(1,I)<>-5 THEN 3870
 NumericValue:1
 Variable:I -> .
 Variable:L(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3670 IF A(1)<>A(5)+4 THEN 4960
 NumericValue:1
 Variable:A(.) -> .
 NumericValue:5
 Variable:A(.) -> .
 NumericValue:4
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3680 IF A(2)<>A(4)+2 THEN 4960
 NumericValue:2
 Variable:A(.) -> .
 NumericValue:4
 Variable:A(.) -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3690 IF A(3)<>A(5)+2 THEN 4960
 NumericValue:3
 Variable:A(.) -> .
 NumericValue:5
 Variable:A(.) -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3700 L(1,I)=40
 NumericValue:1
 Variable:I -> .
 Variable:L(.,.) -> .
 NumericValue:40
 AssignmentOperator:= =. -> .
3710 M(I)=L(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:L(.,.) -> .
 AssignmentOperator:= . -> .
3720 GO TO 4690
 LineNumber:4690
3730 IF Y(I)<>-5 THEN 3870
 Variable:I -> .
 Variable:Y(.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3740 FOR O=1 TO 5
 control: Variable:O -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
3750 FOR O1=1 TO 5
 control: Variable:O1 -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:5"]
3760 IF A(O)<>A(O1) THEN 4960
 Variable:O -> .
 Variable:A(.) -> .
 Variable:O1 -> .
 Variable:A(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4960
3770 NEXT O1
 Variable:O1 -> .
3780 NEXT O
 Variable:O -> .
3790 Y(I)=50
 Variable:I -> .
 Variable:Y(.) -> .
 NumericValue:50
 AssignmentOperator:= =. -> .
3800 M(I)=Y(I)
 Variable:I -> .
 Variable:M(.) -> .
 Variable:I -> .
 Variable:Y(.) -> .
 AssignmentOperator:= . -> .
3810 GO TO 4690
 LineNumber:4690
3820 IF C(I)<>-5 THEN 3870
 Variable:I -> .
 Variable:C(.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3870
3830 C(I)=A(1)+A(2)+A(3)+A(4)+A(5)
 Variable:I -> .
 Variable:C(.) -> .
 NumericValue:1
 Variable:A(.) -> .
 NumericValue:2
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:3
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:4
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:5
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3840
3850 M(I)=C(I)
 Variable:I -> .
 Variable:M(.) -> .
 Variable:I -> .
 Variable:C(.) -> .
 AssignmentOperator:= . -> .
3860 GO TO 4690
 LineNumber:4690
3870 GOSUB 4650
 LineNumber:4650
3880 GO TO 2620
 LineNumber:2620
3890 PRINT "WHAT DO YOU WANT TO ZERO";
 TextValue:"WHAT DO YOU WANT TO ZERO"
 CarriageControl:;
3900 INPUT Z$
 Variable:Z$ -> $
3920 IF Z$="SUMMARY" THEN 3940
 Variable:Z$ -> $
 TextValue:"SUMMARY"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3940
3930 GO TO 3970
 LineNumber:3970
3940 GOSUB 6140
 LineNumber:6140
3945 GO TO 2620
 LineNumber:2620
3950 GOSUB 5680
 LineNumber:5680
3960 GO TO 3900
 LineNumber:3900
3970 IF Z$="ACES" THEN 4110
 Variable:Z$ -> $
 TextValue:"ACES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4110
3980 IF Z$="TWOS" THEN 4150
 Variable:Z$ -> $
 TextValue:"TWOS"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4150
3990 IF Z$="THREES" THEN 4190
 Variable:Z$ -> $
 TextValue:"THREES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4190
4000 IF Z$="FOURS" THEN 4230
 Variable:Z$ -> $
 TextValue:"FOURS"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4230
4010 IF Z$="FIVES" THEN 4270
 Variable:Z$ -> $
 TextValue:"FIVES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4270
4020 IF Z$="SIXES" THEN 4310
 Variable:Z$ -> $
 TextValue:"SIXES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4310
4030 IF Z$="THREE OF A KIND" THEN 4350
 Variable:Z$ -> $
 TextValue:"THREE OF A KIND"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4350
4040 IF Z$="FOUR OF A KIND" THEN 4390
 Variable:Z$ -> $
 TextValue:"FOUR OF A KIND"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4390
4050 IF Z$="FULL HOUSE" THEN 4430
 Variable:Z$ -> $
 TextValue:"FULL HOUSE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4430
4060 IF Z$="SM. STRAIGHT" THEN 4470
 Variable:Z$ -> $
 TextValue:"SM. STRAIGHT"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4470
4070 IF Z$="LG. STRAIGHT" THEN 4510
 Variable:Z$ -> $
 TextValue:"LG. STRAIGHT"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4510
4080 IF Z$="YAHTZEE" THEN 4550
 Variable:Z$ -> $
 TextValue:"YAHTZEE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4550
4090 IF Z$="CHANCE" THEN 4590
 Variable:Z$ -> $
 TextValue:"CHANCE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:4590
4100 GO TO 3890
 LineNumber:3890
4110 IF A(1,I)<>-5 THEN 4630
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4120 A(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4130 M(I)=A(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:A(.,.) -> .
 AssignmentOperator:= . -> .
4140 GO TO 4690
 LineNumber:4690
4150 IF T(1,I)<>-5 THEN 4630
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4160 T(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4170 M(I)=T(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
4180 GO TO 4690
 LineNumber:4690
4190 IF T(2,I)<>-5 THEN 4630
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4200 T(2,I)=0
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4210 M(I)=T(2,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:2
 Variable:I -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
4220 GO TO 4690
 LineNumber:4690
4230 IF F(1,I)<>-5 THEN 4630
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4240 F(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4250 M(I)=F(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:F(.,.) -> .
 AssignmentOperator:= . -> .
4260 GO TO 4690
 LineNumber:4690
4270 IF F(2,I)<>-5 THEN 4630
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4280 F(2,I)=0
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4290 M(I)=F(2,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:2
 Variable:I -> .
 Variable:F(.,.) -> .
 AssignmentOperator:= . -> .
4300 GO TO 4690
 LineNumber:4690
4310 IF S(1,I)<>-5 THEN 4630
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4320 S(1,I)=0
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4330 M(1)=S(1,I)
 NumericValue:1
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:S(.,.) -> .
 AssignmentOperator:= . -> .
4340 GO TO 4690
 LineNumber:4690
4350 IF T(3,I)<>-5 THEN 4630
 NumericValue:3
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4360 T(3,I)=0
 NumericValue:3
 Variable:I -> .
 Variable:T(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4370 M(I)=T(3,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:3
 Variable:I -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
4380 GO TO 4690
 LineNumber:4690
4390 IF F(3,I)<>-5 THEN 4630
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4400 F(3,I)=0
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4410 M(I)=F(3,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:3
 Variable:I -> .
 Variable:F(.,.) -> .
 AssignmentOperator:= . -> .
4420 GO TO 4690
 LineNumber:4690
4430 IF F(4,I)<>-5 THEN 4630
 NumericValue:4
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4440 F(4,I)=0
 NumericValue:4
 Variable:I -> .
 Variable:F(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4450 M(I)=F(4,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:4
 Variable:I -> .
 Variable:F(.,.) -> .
 AssignmentOperator:= . -> .
4460 GO TO 4690
 LineNumber:4690
4470 IF S(2,I)<>-5 THEN 4630
 NumericValue:2
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4480 S(2,I)=0
 NumericValue:2
 Variable:I -> .
 Variable:S(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4490 M(I)=S(2,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:2
 Variable:I -> .
 Variable:S(.,.) -> .
 AssignmentOperator:= . -> .
4500 GO TO 4690
 LineNumber:4690
4510 IF L(1,I)<>-5 THEN 4630
 NumericValue:1
 Variable:I -> .
 Variable:L(.,.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4520 L(1, I)=0
 NumericValue:1
 Variable:I -> .
 Variable:L(.,.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4530 M(I)=L(1,I)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:I -> .
 Variable:L(.,.) -> .
 AssignmentOperator:= . -> .
4540 GO TO 4690
 LineNumber:4690
4550 IF Y(I)<>-5 THEN 4630
 Variable:I -> .
 Variable:Y(.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4560 Y(I)=0
 Variable:I -> .
 Variable:Y(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4570 M(I)=Y(I)
 Variable:I -> .
 Variable:M(.) -> .
 Variable:I -> .
 Variable:Y(.) -> .
 AssignmentOperator:= . -> .
4580 GO TO 4690
 LineNumber:4690
4590 IF C(I)<>-5 THEN 4630
 Variable:I -> .
 Variable:C(.) -> .
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4630
4600 C(I)=0
 Variable:I -> .
 Variable:C(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
4610 M(I)=C(I)
 Variable:I -> .
 Variable:M(.) -> .
 Variable:I -> .
 Variable:C(.) -> .
 AssignmentOperator:= . -> .
4620 GO TO 4690
 LineNumber:4690
4630 GOSUB 4650
 LineNumber:4650
4640 GOTO 2620
 LineNumber:2620
4650 PRINT "YOU HAVE ALREADY USED ";Z$;" AS A CATEGORY";C$
 TextValue:"YOU HAVE ALREADY USED "
 CarriageControl:;
 Variable:Z$ -> $
 CarriageControl:;
 TextValue:" AS A CATEGORY"
 CarriageControl:;
 Variable:C$ -> $
 CarriageControl:NL
4660 PRINT
 CarriageControl:NL
4670 RETURN
 
4680 GOTO 2620
 LineNumber:2620
4690 PRINT N$(I);" YOU GET A SCORE OF ";M(I);" FOR THIS ROUND"
 Variable:I -> .
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:" YOU GET A SCORE OF "
 CarriageControl:;
 Variable:I -> .
 Variable:M(.) -> .
 CarriageControl:;
 TextValue:" FOR THIS ROUND"
 CarriageControl:NL
4700 GO TO 5750
 LineNumber:5750
4710 NEXT I
 Variable:I -> .
4720 PRINT
 CarriageControl:NL
4730 FOR J=1 TO P
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P -> ."]
4740 IF M(J)=A(1,J) THEN 4810
 Variable:J -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:J -> .
 Variable:A(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4810
4750 IF M(J)=T(1,J) THEN 4810
 Variable:J -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:J -> .
 Variable:T(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4810
4760 IF M(J)=T(2,J) THEN 4810
 Variable:J -> .
 Variable:M(.) -> .
 NumericValue:2
 Variable:J -> .
 Variable:T(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4810
4770 IF M(J)=F(1,J) THEN 4810
 Variable:J -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:J -> .
 Variable:F(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4810
4780 IF M(J)=F(2,J) THEN 4810
 Variable:J -> .
 Variable:M(.) -> .
 NumericValue:2
 Variable:J -> .
 Variable:F(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4810
4790 IF M(J)=S(1,J) THEN 4810
 Variable:J -> .
 Variable:M(.) -> .
 NumericValue:1
 Variable:J -> .
 Variable:S(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4810
4800 GO TO 4920
 LineNumber:4920
4810 K(1,J)=K(1,J)+M(J)
 NumericValue:1
 Variable:J -> .
 Variable:K(.,.) -> .
 NumericValue:1
 Variable:J -> .
 Variable:K(.,.) -> .
 Variable:J -> .
 Variable:M(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4820 GO TO 4830
 LineNumber:4830
4830 IF K(1,J)>=63 THEN 4860
 NumericValue:1
 Variable:J -> .
 Variable:K(.,.) -> .
 NumericValue:63
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:4860
4840 K(J)=K(J)+M(J)
 Variable:J -> .
 Variable:K(.) -> .
 Variable:J -> .
 Variable:K(.) -> .
 Variable:J -> .
 Variable:M(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4850 GO TO 4930
 LineNumber:4930
4860 K(1,J)=K(1,J)+35
 NumericValue:1
 Variable:J -> .
 Variable:K(.,.) -> .
 NumericValue:1
 Variable:J -> .
 Variable:K(.,.) -> .
 NumericValue:35
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4870 PRINT C$;N$(J);" HAS ACCUMULATED AT LEAST 63 POINTS"
 Variable:C$ -> $
 CarriageControl:;
 Variable:J -> .
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:" HAS ACCUMULATED AT LEAST 63 POINTS"
 CarriageControl:NL
4880 PRINT "IN THE FIRST SIX CATEGORIES,"
 TextValue:"IN THE FIRST SIX CATEGORIES,"
 CarriageControl:NL
4890 PRINT "HE SCORES A BONUS OF 35 POINTS!";C$
 TextValue:"HE SCORES A BONUS OF 35 POINTS!"
 CarriageControl:;
 Variable:C$ -> $
 CarriageControl:NL
4900 K(J)=K(J)+M(J)
 Variable:J -> .
 Variable:K(.) -> .
 Variable:J -> .
 Variable:K(.) -> .
 Variable:J -> .
 Variable:M(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4910 GO TO 4930
 LineNumber:4930
4920 K(J)=K(J)+M(J)
 Variable:J -> .
 Variable:K(.) -> .
 Variable:J -> .
 Variable:K(.) -> .
 Variable:J -> .
 Variable:M(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
4930 PRINT N$(J);" HAS ";K(J);" POINTS"
 Variable:J -> .
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:" HAS "
 CarriageControl:;
 Variable:J -> .
 Variable:K(.) -> .
 CarriageControl:;
 TextValue:" POINTS"
 CarriageControl:NL
4940 NEXT J
 Variable:J -> .
4950 GO TO 1490
 LineNumber:1490
4960 PRINT "IT IS ILLEGAL TO USE ";Z$;" THIS ROUND";C$
 TextValue:"IT IS ILLEGAL TO USE "
 CarriageControl:;
 Variable:Z$ -> $
 CarriageControl:;
 TextValue:" THIS ROUND"
 CarriageControl:;
 Variable:C$ -> $
 CarriageControl:NL
4970 GO TO 2620
 LineNumber:2620
4980 PRINT
 CarriageControl:NL
4990 PRINT
 CarriageControl:NL
5000 PRINT
 CarriageControl:NL
5010 PRINT "INSTRUCTIONS FOR PLAYING YAHTZEE";C$
 TextValue:"INSTRUCTIONS FOR PLAYING YAHTZEE"
 CarriageControl:;
 Variable:C$ -> $
 CarriageControl:NL
5020 PRINT
 CarriageControl:NL
5030 PRINT "YAHTZEE MAY BE PLAYED BY UP TO 15 PEOPLE."
 TextValue:"YAHTZEE MAY BE PLAYED BY UP TO 15 PEOPLE."
 CarriageControl:NL
5040 PRINT "THE OBJECT OF THE GAME IS TO GET THE HIGHEST SCORE."
 TextValue:"THE OBJECT OF THE GAME IS TO GET THE HIGHEST SCORE."
 CarriageControl:NL
5050 PRINT "EACH PLAYER ON HIS TURN RECEIVES FROM THE COMPUTER"
 TextValue:"EACH PLAYER ON HIS TURN RECEIVES FROM THE COMPUTER"
 CarriageControl:NL
5060 PRINT "THE VALUES OF THE 5 PSEUDO-DICE. HE MAY THEN ROLL"
 TextValue:"THE VALUES OF THE 5 PSEUDO-DICE. HE MAY THEN ROLL"
 CarriageControl:NL
5070 PRINT "AS MANY OF THEM AS HE WANTS TO AGAIN, HOWEVER,"
 TextValue:"AS MANY OF THEM AS HE WANTS TO AGAIN, HOWEVER,"
 CarriageControl:NL
5080 PRINT "HE IS ENTITLED UP TO BUT NO MORE THAN THREE ROLLS"
 TextValue:"HE IS ENTITLED UP TO BUT NO MORE THAN THREE ROLLS"
 CarriageControl:NL
5090 PRINT "OF THE DICE."
 TextValue:"OF THE DICE."
 CarriageControl:NL
5100 PRINT "   YOU TELL THE COMPUTER MANY DICE YOU"
 TextValue:"   YOU TELL THE COMPUTER MANY DICE YOU"
 CarriageControl:NL
5110 PRINT "WANT TO CHANGE, THEN TELL IT WHICH ONES IN THE FOL-"
 TextValue:"WANT TO CHANGE, THEN TELL IT WHICH ONES IN THE FOL-"
 CarriageControl:NL
5120 PRINT "LOWING MANNER:"
 TextValue:"LOWING MANNER:"
 CarriageControl:NL
5130 PRINT
 CarriageControl:NL
5140 PRINT " TYPE: '1' FOR THE 1ST DIE, '2' FOR THE 2ND, ETC"
 TextValue:" TYPE: '1' FOR THE 1ST DIE, '2' FOR THE 2ND, ETC"
 CarriageControl:NL
5150 PRINT "     AFTER THE THIRD ROLL THE PLAYER MUST DECIDE HOW"
 TextValue:"     AFTER THE THIRD ROLL THE PLAYER MUST DECIDE HOW"
 CarriageControl:NL
5160 PRINT "HE WANTS TO SCORE HIS FIVE DICE."
 TextValue:"HE WANTS TO SCORE HIS FIVE DICE."
 CarriageControl:NL
5170 PRINT "TYPING 'SUMMARY' WILLL SHOW WHAT CATEGORIES"
 TextValue:"TYPING 'SUMMARY' WILLL SHOW WHAT CATEGORIES"
 CarriageControl:NL
5180 PRINT "HAVE BEEN USED, OTHERWISE,"
 TextValue:"HAVE BEEN USED, OTHERWISE,"
 CarriageControl:NL
5190 PRINT "YOU HAVE 13 CHOICES, TYPE 1 OF THE FOLLOWING"
 TextValue:"YOU HAVE 13 CHOICES, TYPE 1 OF THE FOLLOWING"
 CarriageControl:NL
5200 PRINT "DEPENDING ON HOW YOU WANT YOUR DICE SCORED."
 TextValue:"DEPENDING ON HOW YOU WANT YOUR DICE SCORED."
 CarriageControl:NL
5210 PRINT "THE CHOICES ARE:"
 TextValue:"THE CHOICES ARE:"
 CarriageControl:NL
5220 PRINT "ACES, TWOS, THREES, FOURS, FIVES, SIXES"
 TextValue:"ACES, TWOS, THREES, FOURS, FIVES, SIXES"
 CarriageControl:NL
5230 PRINT "THREE OF A KIND, FOUR OF A KIND, FULL HOUSE, SM. STRAIGHT,"
 TextValue:"THREE OF A KIND, FOUR OF A KIND, FULL HOUSE, SM. STRAIGHT,"
 CarriageControl:NL
5240 PRINT "LG. STRAIGHT, YAHTZEE, CHANCE."
 TextValue:"LG. STRAIGHT, YAHTZEE, CHANCE."
 CarriageControl:NL
5250 PRINT "WHAT THE COMPUTER WILL DO:"
 TextValue:"WHAT THE COMPUTER WILL DO:"
 CarriageControl:NL
5260 PRINT "FOR ACES IT WILL COUNT AND ADD ALL OF YOUR ONES."
 TextValue:"FOR ACES IT WILL COUNT AND ADD ALL OF YOUR ONES."
 CarriageControl:NL
5270 PRINT "FOR TWOS IT WILL COUNT AND ADD ALL OF YOUR TWOS."
 TextValue:"FOR TWOS IT WILL COUNT AND ADD ALL OF YOUR TWOS."
 CarriageControl:NL
5280 PRINT "THE SAME IS TRUE THROUGH THE SIXES"
 TextValue:"THE SAME IS TRUE THROUGH THE SIXES"
 CarriageControl:NL
5290 PRINT "THREE OF A KIND WILL TOTAL ALL OF THE DICE PRO-"
 TextValue:"THREE OF A KIND WILL TOTAL ALL OF THE DICE PRO-"
 CarriageControl:NL
5300 PRINT "VIDED THAT YOU HAVE THREE OF A KIND"
 TextValue:"VIDED THAT YOU HAVE THREE OF A KIND"
 CarriageControl:NL
5310 PRINT "FOUR OF A KIND IS THE SAME AS THREE OF A KIND EXCEPT"
 TextValue:"FOUR OF A KIND IS THE SAME AS THREE OF A KIND EXCEPT"
 CarriageControl:NL
5320 PRINT "THAT YOU MUST HAVE FOUR OF A KIND"
 TextValue:"THAT YOU MUST HAVE FOUR OF A KIND"
 CarriageControl:NL
5330 PRINT "FULL HOUSE [3 OF ONE NO, AND 2 OF ANOTHER] WILL YIELD"
 TextValue:"FULL HOUSE [3 OF ONE NO, AND 2 OF ANOTHER] WILL YIELD"
 CarriageControl:NL
5340 PRINT "25 POINTS, SM. STRAIGHT WILL GIVE YOU 30 POINTS BUT"
 TextValue:"25 POINTS, SM. STRAIGHT WILL GIVE YOU 30 POINTS BUT"
 CarriageControl:NL
5350 PRINT "YOU MUST HAVE A SEQUENCE OF FOUR."
 TextValue:"YOU MUST HAVE A SEQUENCE OF FOUR."
 CarriageControl:NL
5360 PRINT "LG. STRAIGHT WILL YIELD 40 POINTS BUT YOU MUST HAVE A SE-"
 TextValue:"LG. STRAIGHT WILL YIELD 40 POINTS BUT YOU MUST HAVE A SE-"
 CarriageControl:NL
5370 PRINT "QUENCE OF FIVE."
 TextValue:"QUENCE OF FIVE."
 CarriageControl:NL
5380 PRINT "YAHTZEE WILL GIVE 50 POINTS IF YOU HAVE FIVE OF A KIND."
 TextValue:"YAHTZEE WILL GIVE 50 POINTS IF YOU HAVE FIVE OF A KIND."
 CarriageControl:NL
5390 PRINT "CHANCE WILL TOTAL ALL OF YOUR DICE AND USE THAT AS YOUR SCORE."
 TextValue:"CHANCE WILL TOTAL ALL OF YOUR DICE AND USE THAT AS YOUR SCORE."
 CarriageControl:NL
5400 PRINT "CHANCE IS USEFUL WHEN YOU DON'T HAVE ANYTHING WORTH SCORING."
 TextValue:"CHANCE IS USEFUL WHEN YOU DON'T HAVE ANYTHING WORTH SCORING."
 CarriageControl:NL
5410 PRINT "ANOTHER CATEGORY, 'ZERO' WILL ZERO OUT A CATEGORY"
 TextValue:"ANOTHER CATEGORY, 'ZERO' WILL ZERO OUT A CATEGORY"
 CarriageControl:NL
5420 PRINT "IF YOU DON'T HAVE ANYTHING WORTH SCORING"
 TextValue:"IF YOU DON'T HAVE ANYTHING WORTH SCORING"
 CarriageControl:NL
5430 PRINT "BUT HAVE PERHAPS ALREADY USED YOUR CHANCE."
 TextValue:"BUT HAVE PERHAPS ALREADY USED YOUR CHANCE."
 CarriageControl:NL
5440 PRINT
 CarriageControl:NL
5450 PRINT "IF YOUR ACCUMULATED SCORE OF THE FIRST SIX CATEGORIES"
 TextValue:"IF YOUR ACCUMULATED SCORE OF THE FIRST SIX CATEGORIES"
 CarriageControl:NL
5460 PRINT "EVER REACHES AT LEAST 63 POINTS YOU WILL RECEIVE"
 TextValue:"EVER REACHES AT LEAST 63 POINTS YOU WILL RECEIVE"
 CarriageControl:NL
5470 PRINT "A BONUS OF 35 POINTS!";C$
 TextValue:"A BONUS OF 35 POINTS!"
 CarriageControl:;
 Variable:C$ -> $
 CarriageControl:NL
5480 PRINT
 CarriageControl:NL
5490 PRINT "FOR INSTRUCTIONS DURING THE RUNNING OF THE PROGRAM"
 TextValue:"FOR INSTRUCTIONS DURING THE RUNNING OF THE PROGRAM"
 CarriageControl:NL
5500 PRINT "TYPE 'WHAT?' WHEN THE COMPUTER ASKS FOR A WORD, OR,"
 TextValue:"TYPE 'WHAT?' WHEN THE COMPUTER ASKS FOR A WORD, OR,"
 CarriageControl:NL
5510 PRINT"'.01' WHEN IT WANTS A NUMBER, AND YOU WILL RECEIVE"
 TextValue:"'.01' WHEN IT WANTS A NUMBER, AND YOU WILL RECEIVE"
 CarriageControl:NL
5520 PRINT "FURTHER NOTES RELATED TO WHAT THE COMPUTER ASKED FOR."
 TextValue:"FURTHER NOTES RELATED TO WHAT THE COMPUTER ASKED FOR."
 CarriageControl:NL
5530 PRINT
 CarriageControl:NL
5540 PRINT
 CarriageControl:NL
5550 PRINT
 CarriageControl:NL
5560 PRINT "GOOD LUCK!!!!!";C$
 TextValue:"GOOD LUCK!!!!!"
 CarriageControl:;
 Variable:C$ -> $
 CarriageControl:NL
5570 GO TO 1070
 LineNumber:1070
5580 PRINT "WHAT DO YOU WANT ONE OF THE PLAYERS CALLED BY"
 TextValue:"WHAT DO YOU WANT ONE OF THE PLAYERS CALLED BY"
 CarriageControl:NL
5590 RETURN
 
5600 PRINT "HOW MANY DICE DO YOU WANT TO ROLL AGAIN";
 TextValue:"HOW MANY DICE DO YOU WANT TO ROLL AGAIN"
 CarriageControl:;
5610 RETURN
 
5620 PRINT "WHICH DIE DO YOU WANT TO CHANGE"
 TextValue:"WHICH DIE DO YOU WANT TO CHANGE"
 CarriageControl:NL
5630 PRINT "TYPE: '1' FOR THE 1ST DIE, '2' FOR THE 2ND DIE, ETC."
 TextValue:"TYPE: '1' FOR THE 1ST DIE, '2' FOR THE 2ND DIE, ETC."
 CarriageControl:NL
5640 RETURN
 
5650 PRINT "IN WHICH CATEGORY DO YOU WANT THIS ROUND SCORED"
 TextValue:"IN WHICH CATEGORY DO YOU WANT THIS ROUND SCORED"
 CarriageControl:NL
5660 PRINT "TYPING: 'SUMMARY' WILL TELL YOU WHICH CATEGORIES YOU HAVE USED";
 WARNING: Multiple GOSUB entry points
 TextValue:"TYPING: 'SUMMARY' WILL TELL YOU WHICH CATEGORIES YOU HAVE USED"
 CarriageControl:;
5670 RETURN
 WARNING: Multiple GOSUB entry points
 
5680 PRINT "WHICH CATEGORY DO YOU WANT ZEROED"
 TextValue:"WHICH CATEGORY DO YOU WANT ZEROED"
 CarriageControl:NL
5690 GO TO 5660
 WARNING: Branch to line before GOSUB start
 LineNumber:5660
5710 PRINT "A MAXIMUM OF 15 PLAYERS IS ALLOWED"
 TextValue:"A MAXIMUM OF 15 PLAYERS IS ALLOWED"
 CarriageControl:NL
5720 RETURN
 
5730 PRINT "HOW MANY PEOPLE WISH TO PLAY";
 TextValue:"HOW MANY PEOPLE WISH TO PLAY"
 CarriageControl:;
5740 RETURN
 
5750 IF Z$="ACES" THEN 5880
 Variable:Z$ -> $
 TextValue:"ACES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:5880
5760 IF Z$="TWOS" THEN 5900
 Variable:Z$ -> $
 TextValue:"TWOS"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:5900
5770 IF Z$="THREES" THEN 5920
 Variable:Z$ -> $
 TextValue:"THREES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:5920
5780 IF Z$="FOURS" THEN 5940
 Variable:Z$ -> $
 TextValue:"FOURS"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:5940
5790 IF Z$="FIVES" THEN 5960
 Variable:Z$ -> $
 TextValue:"FIVES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:5960
5800 IF Z$="SIXES" THEN 5980
 Variable:Z$ -> $
 TextValue:"SIXES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:5980
5810 IF Z$="THREE OF A KIND" THEN 6000
 Variable:Z$ -> $
 TextValue:"THREE OF A KIND"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:6000
5820 IF Z$="FOUR OF A KIND" THEN 6020
 Variable:Z$ -> $
 TextValue:"FOUR OF A KIND"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:6020
5830 IF Z$="FULL HOUSE" THEN 6040
 Variable:Z$ -> $
 TextValue:"FULL HOUSE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:6040
5840 IF Z$="SM. STRAIGHT" THEN 6000
 Variable:Z$ -> $
 TextValue:"SM. STRAIGHT"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:6000
5850 IF Z$="LG. STRAIGHT" THEN 6080
 Variable:Z$ -> $
 TextValue:"LG. STRAIGHT"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:6080
5860 IF Z$="YAHTZEE" THEN 6100
 Variable:Z$ -> $
 TextValue:"YAHTZEE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:6100
5870 IF Z$="CHANCE" THEN 6120
 Variable:Z$ -> $
 TextValue:"CHANCE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:6120
5880 H(I,R)=1
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
5890 GO TO 4710
 LineNumber:4710
5900 H(I,R)=2
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
5910 GO TO 4710
 LineNumber:4710
5920 H(I,R)=3
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
5930 GO TO 4710
 LineNumber:4710
5940 H(I,R)=4
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:4
 AssignmentOperator:= =. -> .
5950 GO TO 4710
 LineNumber:4710
5960 H(I,R)=5
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
5970 GO TO 4710
 LineNumber:4710
5980 H(I,R)=6
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
5990 GO TO 4710
 LineNumber:4710
6000 H(I,R)=7
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:7
 AssignmentOperator:= =. -> .
6010 GO TO 4710
 LineNumber:4710
6020 H(I,R)=8
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:8
 AssignmentOperator:= =. -> .
6030 GO TO 4710
 LineNumber:4710
6040 H(I,R)=9
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:9
 AssignmentOperator:= =. -> .
6050 GO TO 4710
 LineNumber:4710
6060 H(I,R)=10
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
6070 GO TO 4710
 LineNumber:4710
6080 H(I,R)=11
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:11
 AssignmentOperator:= =. -> .
6090 GO TO 4710
 LineNumber:4710
6100 H(I,R)=12
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:12
 AssignmentOperator:= =. -> .
6110 GO TO 4710
 LineNumber:4710
6120 H(I,R)=13
 Variable:I -> .
 Variable:R -> .
 Variable:H(.,.) -> .
 NumericValue:13
 AssignmentOperator:= =. -> .
6130 GO TO 4710
 LineNumber:4710
6140 PRINT N$(I);" HAS USED THE FOLLOWING CATEGORIES:"
 Variable:I -> .
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:" HAS USED THE FOLLOWING CATEGORIES:"
 CarriageControl:NL
6150 FOR S= 1 TO (R-1)
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:R -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
6160 IF H(I,S)>7 THEN 6180
 Variable:I -> .
 Variable:S -> .
 Variable:H(.,.) -> .
 NumericValue:7
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:6180
6170 ON H(I,S) GO TO 6190,6210,6230,6250,6270,6290,6310
 Variable:I -> .
 Variable:S -> .
 Variable:H(.,.) -> .
 LineNumber:6190
 LineNumber:6210
 LineNumber:6230
 LineNumber:6250
 LineNumber:6270
 LineNumber:6290
 LineNumber:6310
6180 ON H(I,S)-7 GO TO 6330,6350,6370,6390,6410,6430
 Variable:I -> .
 Variable:S -> .
 Variable:H(.,.) -> .
 NumericValue:7
 BinaryOperatorMinus:-(.,.) -> .
 LineNumber:6330
 LineNumber:6350
 LineNumber:6370
 LineNumber:6390
 LineNumber:6410
 LineNumber:6430
6190 PRINT "ACES, ";
 TextValue:"ACES, "
 CarriageControl:;
6200 GO TO 6440
 LineNumber:6440
6210 PRINT "TWOS, ";
 TextValue:"TWOS, "
 CarriageControl:;
6220 GO TO 6440
 LineNumber:6440
6230 PRINT "THREES, ";
 TextValue:"THREES, "
 CarriageControl:;
6240 GO TO 6440
 LineNumber:6440
6250 PRINT "FOURS, ";
 TextValue:"FOURS, "
 CarriageControl:;
6260 GO TO 6440
 LineNumber:6440
6270 PRINT "FIVES, ";
 TextValue:"FIVES, "
 CarriageControl:;
6280 GO TO 6440
 LineNumber:6440
6290 PRINT "SIXES, ";
 TextValue:"SIXES, "
 CarriageControl:;
6300 GO TO 6440
 LineNumber:6440
6310 PRINT "THREE OF A KIND ";
 TextValue:"THREE OF A KIND "
 CarriageControl:;
6320 GO TO 6440
 LineNumber:6440
6330 PRINT "FOUR OF A KIND, ";
 TextValue:"FOUR OF A KIND, "
 CarriageControl:;
6340 GO TO 6440
 LineNumber:6440
6350 PRINT "FULL HOUSE, ";
 TextValue:"FULL HOUSE, "
 CarriageControl:;
6360 GO TO 6440
 LineNumber:6440
6370 PRINT "SM. STRAIGHT, ";
 TextValue:"SM. STRAIGHT, "
 CarriageControl:;
6380 GO TO 6440
 LineNumber:6440
6390 PRINT "LG. STRAIGHT, ";
 TextValue:"LG. STRAIGHT, "
 CarriageControl:;
6400 GO TO 6440
 LineNumber:6440
6410 PRINT "YAHTZEE, ";
 TextValue:"YAHTZEE, "
 CarriageControl:;
6420 GO TO 6440
 LineNumber:6440
6430 PRINT "CHANCE, ";
 TextValue:"CHANCE, "
 CarriageControl:;
6440 NEXT S
 Variable:S -> .
6445 PRINT
 CarriageControl:NL
6446 PRINT "HE HAS ";K(I);" POINTS,"
 TextValue:"HE HAS "
 CarriageControl:;
 Variable:I -> .
 Variable:K(.) -> .
 CarriageControl:;
 TextValue:" POINTS,"
 CarriageControl:NL
6447 PRINT "AND ";K(1,I);" OF THE 65 POINTS NEEDED FOR THE BONUS";
 TextValue:"AND "
 CarriageControl:;
 NumericValue:1
 Variable:I -> .
 Variable:K(.,.) -> .
 CarriageControl:;
 TextValue:" OF THE 65 POINTS NEEDED FOR THE BONUS"
 CarriageControl:;
6450 PRINT "."
 TextValue:"."
 CarriageControl:NL
6460 RETURN
 
6470 G=0
 Variable:G -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
6480 FOR X=1 TO P
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P -> ."]
6490 IF S(X)>=S(X+1) THEN 6540
 Variable:X -> .
 Variable:S(.) -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:S(.) -> .
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:6540
6500 H=S(X)
 Variable:H -> .
 Variable:X -> .
 Variable:S(.) -> .
 AssignmentOperator:= . -> .
6510 S(X)=S(X+1)
 Variable:X -> .
 Variable:S(.) -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:S(.) -> .
 AssignmentOperator:= . -> .
6520 S(X+1)=H
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:S(.) -> .
 Variable:H -> .
 AssignmentOperator:= . -> .
6530 G=1
 Variable:G -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
6540 NEXT X
 Variable:X -> .
6550 IF G=1 THEN 6470
 Variable:G -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:6470
6560 PRINT "THE GAME IS OVER."
 TextValue:"THE GAME IS OVER."
 CarriageControl:NL
6570 PRINT
 CarriageControl:NL
6571 FOR X=1 TO P
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P -> ."]
6572 IF K(X)=S(X) THEN 6580
 Variable:X -> .
 Variable:K(.) -> .
 Variable:X -> .
 Variable:S(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:6580
6573 NEXT X
 Variable:X -> .
6580 PRINT "THE WINNER IS ";N$(1);" WITH";K(1);" POINTS."
 TextValue:"THE WINNER IS "
 CarriageControl:;
 NumericValue:1
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:" WITH"
 CarriageControl:;
 NumericValue:1
 Variable:K(.) -> .
 CarriageControl:;
 TextValue:" POINTS."
 CarriageControl:NL
6585 IF P=1 THEN 9999
 Variable:P -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:9999
6586 PRINT "OTHER FINAL SCORES ARE:"
 TextValue:"OTHER FINAL SCORES ARE:"
 CarriageControl:NL
6590 FOR Y=1 TO P
 control: Variable:Y -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:P -> ."]
6600 IF K(Y)=S(X) THEN 6620
 Variable:Y -> .
 Variable:K(.) -> .
 Variable:X -> .
 Variable:S(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:6620
6610 PRINT N$(Y);" FINISHES WITH ";K(Y);" POINTS."
 Variable:Y -> .
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:" FINISHES WITH "
 CarriageControl:;
 Variable:Y -> .
 Variable:K(.) -> .
 CarriageControl:;
 TextValue:" POINTS."
 CarriageControl:NL
6620 NEXT Y
 Variable:Y -> .
9999 END
 

