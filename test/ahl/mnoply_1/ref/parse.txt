Syntax error: Expression is not declaration (type UnaryOperatorHash)
Syntax error: Invalid function specification
Syntax error: Expression is not declaration (type UnaryOperatorHash)
1 ! MONOPOLY GAME BY DAVID BARKER, SOUTHEASTERN STATE COLLEGE, DURANT, OK
 WARNING: Line exceeds PRETTY width limit 72
2 ! SLIGHT PROGRAM MODIFICATIONS BY DAVID AHL, DIGITAL
3 M(1),M(2)=1500%: I(1),I(2)=0: DIM A$(25),B$(25),H%(40)
 WARNING: Target type (numeric) does not match expression type (integer).
 WARNING: Target type (numeric) does not match expression type (integer).
 NumericValue:1
 Variable:M(.) -> .
 NumericValue:2
 Variable:M(.) -> .
 IntegerValue:1500
 AssignmentOperator:= =% -> .,.
 NumericValue:1
 Variable:I(.) -> .
 NumericValue:2
 Variable:I(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .,.
 NumericValue:25
 Declaration:A$() -> $()
 NumericValue:25
 Declaration:B$() -> $()
 NumericValue:40
 Declaration:H%() -> %()
8 FOR I=1 TO 39:L%(I),H%(I)=0:NEXT I:FOR I=1 TO 8:U(I)=0:NEXT I
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:39"]
 Variable:I -> .
 Variable:L%(.) -> %
 Variable:I -> .
 Variable:H%(.) -> %
 NumericValue:0
 AssignmentOperator:= =. -> %,%
 Variable:I -> .
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
 Variable:I -> .
 Variable:U(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:I -> .
15 & M$(1):& :& :& "**RULES**":& M$(2):& M$(3):& M$(4):& M$(5)
 NumericValue:1
 Variable:M$(.) -> $
 CarriageControl:NL
 CarriageControl:NL
 CarriageControl:NL
 TextValue:"**RULES**"
 CarriageControl:NL
 NumericValue:2
 Variable:M$(.) -> $
 CarriageControl:NL
 NumericValue:3
 Variable:M$(.) -> $
 CarriageControl:NL
 NumericValue:4
 Variable:M$(.) -> $
 CarriageControl:NL
 NumericValue:5
 Variable:M$(.) -> $
 CarriageControl:NL
30 INPUT"WHO IS PLAYER #1";N$(1): INPUT"WHO IS PLAYER #2";N$(2)
 NumericValue:1
 Variable:N$(.) -> $
 NumericValue:2
 Variable:N$(.) -> $
100 PRINT: PRINT "**"N$(1)"'S TURN**********":           F=0
 CarriageControl:NL
 TextValue:"**"
 CarriageControl:
 NumericValue:1
 Variable:N$(.) -> $
 CarriageControl:
 TextValue:"'S TURN**********"
 CarriageControl:NL
 Variable:F -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
102 Z=1%: GOSUB 1000: GOSUB 2000
 WARNING: Target type (numeric) does not match expression type (integer).
 Variable:Z -> .
 IntegerValue:1
 AssignmentOperator:= =% -> .
 LineNumber:1000
 LineNumber:2000
115 IF D=D1 THEN F=F+1: IF F<3 THEN PRINT M$(9): GOTO 102
 Variable:D -> .
 Variable:D1 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:F -> .
 Variable:F -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:F -> .
 NumericValue:3
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:9
 Variable:M$(.) -> $
 CarriageControl:NL
 LineNumber:102
117 IF F=3 THEN PRINT M$(10): I(Z)=10: M(Z)=M(Z)-50%
 WARNING: Type mismatch numeric - integer
 Variable:F -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 NumericValue:10
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:50
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
200 PRINT: PRINT "**"N$(2)"'S TURN**********":           F=0
 CarriageControl:NL
 TextValue:"**"
 CarriageControl:
 NumericValue:2
 Variable:N$(.) -> $
 CarriageControl:
 TextValue:"'S TURN**********"
 CarriageControl:NL
 Variable:F -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
202 Z=2%: GOSUB 1000: GOSUB 2000
 WARNING: Target type (numeric) does not match expression type (integer).
 Variable:Z -> .
 IntegerValue:2
 AssignmentOperator:= =% -> .
 LineNumber:1000
 LineNumber:2000
215 IF D=D1 THEN F=F+1: IF F<3 THEN PRINT M$(9): GOTO 202
 Variable:D -> .
 Variable:D1 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:F -> .
 Variable:F -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:F -> .
 NumericValue:3
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:9
 Variable:M$(.) -> $
 CarriageControl:NL
 LineNumber:202
217 IF F=3 THEN PRINT M$(10): I(Z)=10: M(Z)=M(Z)-50%
 WARNING: Type mismatch numeric - integer
 Variable:F -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 NumericValue:10
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:50
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
225 PRINT M$(11);:INPUT F$: IF F$="QUIT" THEN 30000 ELSE 100
 NumericValue:11
 Variable:M$(.) -> $
 CarriageControl:;
 Variable:F$ -> $
 Variable:F$ -> $
 TextValue:"QUIT"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:30000
 LineNumber:100
1000 PRINT M$(6);:INPUT F$: RANDOMIZE: X=RND(0): Y=RND(0) !DICE ROLL
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:6
 Variable:M$(.) -> $
 CarriageControl:;
 Variable:F$ -> $
 
 Variable:X -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 AssignmentOperator:= . -> .
 Variable:Y -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 AssignmentOperator:= . -> .
1002 IF X>=0 AND X<=.16 THEN D=1
 Variable:X -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 Variable:X -> .
 NumericValue:.16
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1003 IF X>.16 AND X<=.32 THEN D=2
 Variable:X -> .
 NumericValue:.16
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:X -> .
 NumericValue:.32
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
1004 IF X>.32 AND X<=.48 THEN D=3
 Variable:X -> .
 NumericValue:.32
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:X -> .
 NumericValue:.48
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
1005 IF X>.48 AND X<=.64 THEN D=4
 Variable:X -> .
 NumericValue:.48
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:X -> .
 NumericValue:.64
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D -> .
 NumericValue:4
 AssignmentOperator:= =. -> .
1006 IF X>.64 AND X<=.81 THEN D=5
 Variable:X -> .
 NumericValue:.64
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:X -> .
 NumericValue:.81
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
1007 IF X>.81 AND X<=1 THEN D=6
 Variable:X -> .
 NumericValue:.81
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:X -> .
 NumericValue:1
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
1009 IF Y>=0 AND Y<=.16 THEN D1=1
 Variable:Y -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 Variable:Y -> .
 NumericValue:.16
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D1 -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1010 IF Y>.16 AND Y<=.32 THEN D1=2
 Variable:Y -> .
 NumericValue:.16
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:Y -> .
 NumericValue:.32
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D1 -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
1011 IF Y>.32 AND Y<=.48 THEN D1=3
 Variable:Y -> .
 NumericValue:.32
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:Y -> .
 NumericValue:.48
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D1 -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
1012 IF Y>.48 AND Y<=.64 THEN D1=4
 Variable:Y -> .
 NumericValue:.48
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:Y -> .
 NumericValue:.64
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D1 -> .
 NumericValue:4
 AssignmentOperator:= =. -> .
1013 IF Y>.64 AND Y<=.81 THEN D1=5
 Variable:Y -> .
 NumericValue:.64
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:Y -> .
 NumericValue:.81
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D1 -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
1014 IF Y>.81 AND Y<=1 THEN D1=6
 Variable:Y -> .
 NumericValue:.81
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:D1 -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
1015 PRINT "YOU ROLLED A"D"AND A"D1:I(Z)=I(Z)+(D+D1)
 TextValue:"YOU ROLLED A"
 CarriageControl:
 Variable:D -> .
 CarriageControl:
 TextValue:"AND A"
 CarriageControl:
 Variable:D1 -> .
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:D -> .
 Variable:D1 -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1016 IF I(Z)>40% THEN I(Z)=I(Z)-40%:M(Z)=M(Z)+200%
 WARNING: Type mismatch numeric - integer
 WARNING: Type mismatch numeric + integer
 Variable:Z -> .
 Variable:I(.) -> .
 IntegerValue:40
 BinaryOperatorGreater:>(.,%) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:Z -> .
 Variable:I(.) -> .
 IntegerValue:40
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:200
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
1017 RETURN
 
2000 PRINT"YOU ARE ON ";G$(I(Z)) !PLACEMENT
 WARNING: GOSUB length exceeds limit 40
 TextValue:"YOU ARE ON "
 CarriageControl:;
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:G$(.) -> $
 CarriageControl:NL
2002 IF I(Z)=2 OR I(Z)=17 OR I(Z)=33 THEN 4100       !COM CHEST
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:17
 BinaryOperatorEqual:=(.,.) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:33
 BinaryOperatorEqual:=(.,.) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:4100
2004 IF I(Z)=4 THEN M(Z)=M(Z)-200%:RETURN            !INC TAX
 WARNING: Type mismatch numeric - integer
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:4
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:200
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 
2006 IF I(Z)=7 OR I(Z)=22 OR I(Z)=36 THEN 4400       !CHANCE
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:7
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:22
 BinaryOperatorEqual:=(.,.) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:36
 BinaryOperatorEqual:=(.,.) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:4400
2008 IF I(Z)=10 OR I(Z)=20 THEN RETURN               !VISIT IN JAIL & FREE PARKING
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:10
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:20
 BinaryOperatorEqual:=(.,.) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 
2010 IF I(Z)=30 THEN M(Z)=M(Z)-50%: I(Z)=10: RETURN  !JAIL
 WARNING: Type mismatch numeric - integer
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:30
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:50
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
 
2011 IF I(Z)=38 THEN M(Z)=M(Z)-75%: RETURN           !LUX TAX
 WARNING: Type mismatch numeric - integer
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:38
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:75
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 
2012 IF I(Z)=40 THEN M(Z)=M(Z)+200%: I(Z)=01: RETURN !GO
 WARNING: Type mismatch numeric + integer
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:40
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:200
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:01
 AssignmentOperator:= =. -> .
 
2018 IF L%(I(Z))=Z THEN PRINT M$(12): GOTO 3100
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:12
 Variable:M$(.) -> $
 CarriageControl:NL
 LineNumber:3100
2019 IF (H%(I(Z))=0 AND L%(I(Z))>0 AND L%(I(Z))<>Z) THEN 2128
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:H%(.) -> %
 NumericValue:0
 BinaryOperatorEqual:=(%,.) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:L%(.) -> %
 NumericValue:0
 BinaryOperatorGreater:>(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorNotEqual:<>(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 LineNumber:2128
2020 IF (H%(I(Z))>0 AND L%(I(Z))>0 AND L%(I(Z))<>Z) THEN 2100
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:H%(.) -> %
 NumericValue:0
 BinaryOperatorGreater:>(%,.) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:L%(.) -> %
 NumericValue:0
 BinaryOperatorGreater:>(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorNotEqual:<>(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 LineNumber:2100
2022 PRINT M$(7);P(I(Z));"DOLLARS"
 NumericValue:7
 Variable:M$(.) -> $
 CarriageControl:;
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:P(.) -> .
 CarriageControl:;
 TextValue:"DOLLARS"
 CarriageControl:NL
2024 PRINT M$(8):INPUT F$: IF F$<>"BUY" THEN 3100
 NumericValue:8
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:F$ -> $
 Variable:F$ -> $
 TextValue:"BUY"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:3100
2026M(Z)=M(Z)-P(I(Z)):PRINT "YOU NOW HAVE"M(Z) "DOLLARS
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:P(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 TextValue:"YOU NOW HAVE"
 CarriageControl:
 Variable:Z -> .
 Variable:M(.) -> .
 CarriageControl:
 TextValue:"DOLLARS"
 CarriageControl:NL
2027 L%(I(Z))=Z:GOTO 3100
 WARNING: Target type (integer) does not match expression type (numeric).
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:L%(.) -> %
 Variable:Z -> .
 AssignmentOperator:= . -> %
 LineNumber:3100
2100 IF Z=1 THEN M(Z)=M(Z)-FNR: M(2)=M(2)+FNR
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 UserFunction:FNR -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:2
 Variable:M(.) -> .
 NumericValue:2
 Variable:M(.) -> .
 UserFunction:FNR -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2101 PRINT "YOU OWE"FNR"DOLLARS RENT":RETURN
 TextValue:"YOU OWE"
 CarriageControl:
 UserFunction:FNR -> .
 CarriageControl:
 TextValue:"DOLLARS RENT"
 CarriageControl:NL
 
2102 IF Z=2 THEN M(Z)=M(Z)-FNR: M(1)=M(1)+FNR
 Variable:Z -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 UserFunction:FNR -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:1
 Variable:M(.) -> .
 NumericValue:1
 Variable:M(.) -> .
 UserFunction:FNR -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2103 PRINT "YOU OWE"FNR"DOLLARS RENT":RETURN
 TextValue:"YOU OWE"
 CarriageControl:
 UserFunction:FNR -> .
 CarriageControl:
 TextValue:"DOLLARS RENT"
 CarriageControl:NL
 
2125 IF Z=1 THEN M(Z)=M(Z)-R(I(Z)):M(2)=M(2)+R(I(Z))
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:R(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:2
 Variable:M(.) -> .
 NumericValue:2
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:R(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2126 PRINT "YOU OWE"R(I(Z))"DOLLARS RENT":RETURN
 TextValue:"YOU OWE"
 CarriageControl:
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:R(.) -> .
 CarriageControl:
 TextValue:"DOLLARS RENT"
 CarriageControl:NL
 
2127 IF Z=2 THEN M(Z)=M(Z)-R(I(Z)):M(1)=M(1)+R(I(Z))
 Variable:Z -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:R(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:1
 Variable:M(.) -> .
 NumericValue:1
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:R(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2128 PRINT "YOU OWE"R(I(Z))"DOLLARS RENT":RETURN
 TextValue:"YOU OWE"
 CarriageControl:
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:R(.) -> .
 CarriageControl:
 TextValue:"DOLLARS RENT"
 CarriageControl:NL
 
3100 PRINT M$(13):PRINT M$(14):INPUT F$:IF F$="SELL" THEN GOSUB 3150
 NumericValue:13
 Variable:M$(.) -> $
 CarriageControl:NL
 NumericValue:14
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:F$ -> $
 Variable:F$ -> $
 TextValue:"SELL"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3150
3105 PRINT M$(19):INPUT H$: IF H$="HOUSE" THEN 3200 ELSE RETURN
 NumericValue:19
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:H$ -> $
 Variable:H$ -> $
 TextValue:"HOUSE"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3200
 
3150 PRINT M$(15):INPUT F$: IF F$="LIST" THEN GOSUB 3170
 WARNING: Inconsistent GOSUB origins
 NumericValue:15
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:F$ -> $
 Variable:F$ -> $
 TextValue:"LIST"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3170
3152 PRINT M$(17):INPUT V$: INPUT "HOW MUCH DO YOU WANT FOR IT";V
 NumericValue:17
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:V$ -> $
 Variable:V -> .
3154 FOR I=1 TO 39
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:39"]
3156 IF V$=G$(I) THEN IF L%(I)=0 THEN PRINT M$(16): RETURN
 Variable:V$ -> $
 Variable:I -> .
 Variable:G$(.) -> $
 BinaryOperatorEqual:=($,$) -> ?
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:0
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:16
 Variable:M$(.) -> $
 CarriageControl:NL
 
3158 IF V$=G$(I) THEN IF L%(I)=1 THEN M(1)=M(1)+V:M(2)=M(2)-V: L%(I)=2: GOTO 3165
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Target type (integer) does not match expression type (numeric).
 Variable:V$ -> $
 Variable:I -> .
 Variable:G$(.) -> $
 BinaryOperatorEqual:=($,$) -> ?
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:1
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:1
 Variable:M(.) -> .
 NumericValue:1
 Variable:M(.) -> .
 Variable:V -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:2
 Variable:M(.) -> .
 NumericValue:2
 Variable:M(.) -> .
 Variable:V -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:2
 AssignmentOperator:= =. -> %
 LineNumber:3165
3160 IF V$=G$(I) THEN IF L%(I)=2 THEN M(2)=M(2)+V:M(1)=M(1)-V: L%(I)=1: GOTO 3165
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Target type (integer) does not match expression type (numeric).
 Variable:V$ -> $
 Variable:I -> .
 Variable:G$(.) -> $
 BinaryOperatorEqual:=($,$) -> ?
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:2
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:2
 Variable:M(.) -> .
 NumericValue:2
 Variable:M(.) -> .
 Variable:V -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:1
 Variable:M(.) -> .
 NumericValue:1
 Variable:M(.) -> .
 Variable:V -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:1
 AssignmentOperator:= =. -> %
 LineNumber:3165
3162 NEXT I
 Variable:I -> .
3165 PRINT M$(18);:INPUT F$: IF F$="YES" THEN 3152 ELSE RETURN
 NumericValue:18
 Variable:M$(.) -> $
 CarriageControl:;
 Variable:F$ -> $
 Variable:F$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:3152
 
3170 C,D=0: FOR I=1 TO 39
 WARNING: Inconsistent GOSUB origins
 Variable:C -> .
 Variable:D -> .
 NumericValue:0
 AssignmentOperator:= =. -> .,.
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:39"]
3172 IF L%(I)=1 THEN C=C+1: A$(C)=G$(I)
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:1
 BinaryOperatorEqual:=(%,.) -> ?
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:C -> .
 Variable:A$(.) -> $
 Variable:I -> .
 Variable:G$(.) -> $
 AssignmentOperator:= $ -> $
3174 IF L%(I)=2 THEN D=D+1: B$(D)=G$(I)
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:2
 BinaryOperatorEqual:=(%,.) -> ?
 Variable:D -> .
 Variable:D -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:D -> .
 Variable:B$(.) -> $
 Variable:I -> .
 Variable:G$(.) -> $
 AssignmentOperator:= $ -> $
3175 NEXT I
 Variable:I -> .
3176 PRINT N$(1)"'S PROPERTY": FOR I=1 TO C:PRINT A$(I): NEXT I
 NumericValue:1
 Variable:N$(.) -> $
 CarriageControl:
 TextValue:"'S PROPERTY"
 CarriageControl:NL
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:C -> ."]
 Variable:I -> .
 Variable:A$(.) -> $
 CarriageControl:NL
 Variable:I -> .
3178 PRINT N$(2)"'S PROPERTY": FOR I=1 TO D:PRINT B$(I): NEXT I:RETURN
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:2
 Variable:N$(.) -> $
 CarriageControl:
 TextValue:"'S PROPERTY"
 CarriageControl:NL
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:D -> ."]
 Variable:I -> .
 Variable:B$(.) -> $
 CarriageControl:NL
 Variable:I -> .
 
3200 IF L%(1)=Z AND L%(3)=Z THEN &"HOW MANY HOUSES AT $50 EACH DO YOU WANT ON":PRINT G$(1)" "G$(3);:INPUT U:GOSUB 3250
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:1
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:3
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 TextValue:"HOW MANY HOUSES AT $50 EACH DO YOU WANT ON"
 CarriageControl:NL
 NumericValue:1
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:3
 Variable:G$(.) -> $
 CarriageControl:;
 Variable:U -> .
 LineNumber:3250
3202 IF L%(6)=Z AND L%(8)=Z AND L%(9)=Z THEN PRINT "HOW MANY HOUSES AT $50 EACH DO YOU WANT ON":PRINT G$(6)" "G$(8)" "G$(9);:INPUT U:GOSUB 3252
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:6
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:8
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:9
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 TextValue:"HOW MANY HOUSES AT $50 EACH DO YOU WANT ON"
 CarriageControl:NL
 NumericValue:6
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:8
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:9
 Variable:G$(.) -> $
 CarriageControl:;
 Variable:U -> .
 LineNumber:3252
3204 IF L%(11)=Z AND L%(13)=Z AND L%(14)=Z THEN PRINT "HOW MANY HOUSES AT $100 EACH DO YOOU WANT ON":PRINT G$(11)" "G$(13)" "G$(14);:INPUT U:GOSUB 3254
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:11
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:13
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:14
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 TextValue:"HOW MANY HOUSES AT $100 EACH DO YOOU WANT ON"
 CarriageControl:NL
 NumericValue:11
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:13
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:14
 Variable:G$(.) -> $
 CarriageControl:;
 Variable:U -> .
 LineNumber:3254
3206 IF L%(16)=Z AND L%(18)=Z AND L%(19)=Z THEN PRINT "HOW MANY HOUSES AT $100 EACH DO YOU WANT ON":PRINT G$(16)" "G$(18)" "G$(19);:INPUT U:GOSUB 3256
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:16
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:18
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:19
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 TextValue:"HOW MANY HOUSES AT $100 EACH DO YOU WANT ON"
 CarriageControl:NL
 NumericValue:16
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:18
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:19
 Variable:G$(.) -> $
 CarriageControl:;
 Variable:U -> .
 LineNumber:3256
3208 IF L%(21)=Z AND L%(23)=Z AND L%(24)=Z THEN PRINT "HOW MANY HOUSES AT $150 EACH DO YOU WANT ON":PRINT G$(21)" "G$(23)" "G$(24);:INPUT U:GOSUB 3258
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:21
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:23
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:24
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 TextValue:"HOW MANY HOUSES AT $150 EACH DO YOU WANT ON"
 CarriageControl:NL
 NumericValue:21
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:23
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:24
 Variable:G$(.) -> $
 CarriageControl:;
 Variable:U -> .
 LineNumber:3258
3210 IF L%(26)=Z AND L%(27)=Z AND L%(29)=Z THEN PRINT "HOW MANY HOUSES AT $150 EACH DO YOU WANT ON":PRINT G$(26)" "G$(27)" "G$(29);:INPUT U:GOSUB 3260
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:26
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:27
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:29
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 TextValue:"HOW MANY HOUSES AT $150 EACH DO YOU WANT ON"
 CarriageControl:NL
 NumericValue:26
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:27
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:29
 Variable:G$(.) -> $
 CarriageControl:;
 Variable:U -> .
 LineNumber:3260
3212 IF L%(31)=Z AND L%(32)=Z AND L%(34)=Z THEN PRINT "HOW MANY HOUSES AT $200 EACH DO YOU WANT ON":PRINT G$(31)" "G$(32)" "G$(34);:INPUT U:GOSUB 3262
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:31
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:32
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:34
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 TextValue:"HOW MANY HOUSES AT $200 EACH DO YOU WANT ON"
 CarriageControl:NL
 NumericValue:31
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:32
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:34
 Variable:G$(.) -> $
 CarriageControl:;
 Variable:U -> .
 LineNumber:3262
3214 IF L%(37)=Z AND L%(39)=Z THEN PRINT "HOW MANY HOUSES AT $200 EACH DO YOU WANT ON":PRINT G$(37)" "G$(39):INPUT U:GOSUB 3264
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:37
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 NumericValue:39
 Variable:L%(.) -> %
 Variable:Z -> .
 BinaryOperatorEqual:=(%,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 TextValue:"HOW MANY HOUSES AT $200 EACH DO YOU WANT ON"
 CarriageControl:NL
 NumericValue:37
 Variable:G$(.) -> $
 CarriageControl:
 TextValue:" "
 CarriageControl:
 NumericValue:39
 Variable:G$(.) -> $
 CarriageControl:NL
 Variable:U -> .
 LineNumber:3264
3220 RETURN
 
3250 U(1)=U(1)+U:M(Z)=M(Z)-(U*100%):IF M(Z)=0 THEN PRINT M$(20):M(Z)=M(Z)+(U*100%):U(1)=U:RETURN
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric * integer
 WARNING: Type mismatch numeric * integer
 NumericValue:1
 Variable:U(.) -> .
 NumericValue:1
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:100
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 NumericValue:20
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:100
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:1
 Variable:U(.) -> .
 Variable:U -> .
 AssignmentOperator:= . -> .
 
3251 H%(1),H%(3)=U(1): RETURN
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 NumericValue:1
 Variable:H%(.) -> %
 NumericValue:3
 Variable:H%(.) -> %
 NumericValue:1
 Variable:U(.) -> .
 AssignmentOperator:= . -> %,%
 
3252 U(2)=U(2)+U: M(Z)=M(Z)-(U*150%): IF M(Z)<0 THEN PRINT M$(20):M(Z)=M(Z)+(U*150%): U(2)=U(2)-U: RETURN
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric * integer
 WARNING: Type mismatch numeric * integer
 NumericValue:2
 Variable:U(.) -> .
 NumericValue:2
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:150
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:20
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:150
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:2
 Variable:U(.) -> .
 NumericValue:2
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 
3253 H%(6),H%(8),H%(9)=U(2): RETURN
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 NumericValue:6
 Variable:H%(.) -> %
 NumericValue:8
 Variable:H%(.) -> %
 NumericValue:9
 Variable:H%(.) -> %
 NumericValue:2
 Variable:U(.) -> .
 AssignmentOperator:= . -> %,%,%
 
3254 U(3)=U(3)+U: M(Z)=M(Z)-(U*150%): IF M(Z)<0 THEN PRINT M$(20):M(Z)=M(Z)+(U*150%): U(3)=U(3)-U: RETURN 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric * integer
 WARNING: Type mismatch numeric * integer
 NumericValue:3
 Variable:U(.) -> .
 NumericValue:3
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:150
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:20
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:150
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:3
 Variable:U(.) -> .
 NumericValue:3
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 
3255 H%(11),H%(13),H%(14)=U(3): RETURN
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 NumericValue:11
 Variable:H%(.) -> %
 NumericValue:13
 Variable:H%(.) -> %
 NumericValue:14
 Variable:H%(.) -> %
 NumericValue:3
 Variable:U(.) -> .
 AssignmentOperator:= . -> %,%,%
 
3256 U(4)=U(4)+U: M(Z)=M(Z)-(U*300%): IF M(Z)<0 THEN PRINT M$(20):M(Z)=M(Z)+(U*300%): U(4)=U(4)-U: RETURN
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric * integer
 WARNING: Type mismatch numeric * integer
 NumericValue:4
 Variable:U(.) -> .
 NumericValue:4
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:300
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:20
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:300
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:4
 Variable:U(.) -> .
 NumericValue:4
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 
3257 H%(16),H%(18),H%(19)=U(4): RETURN
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 NumericValue:16
 Variable:H%(.) -> %
 NumericValue:18
 Variable:H%(.) -> %
 NumericValue:19
 Variable:H%(.) -> %
 NumericValue:4
 Variable:U(.) -> .
 AssignmentOperator:= . -> %,%,%
 
3258 U(6)=U(5)+U: M(Z)=M(Z)-(U*450%): IF M(Z)<0 THEN PRINT M$(20):M(Z)=M(Z)+(U*450%): U(5)=U(5)-U: RETURN
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric * integer
 WARNING: Type mismatch numeric * integer
 NumericValue:6
 Variable:U(.) -> .
 NumericValue:5
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:450
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:20
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:450
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:5
 Variable:U(.) -> .
 NumericValue:5
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 
3259 H%(21),H%(23),H%(24)=U(5): RETURN
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 NumericValue:21
 Variable:H%(.) -> %
 NumericValue:23
 Variable:H%(.) -> %
 NumericValue:24
 Variable:H%(.) -> %
 NumericValue:5
 Variable:U(.) -> .
 AssignmentOperator:= . -> %,%,%
 
3260 U(6)=U(6)+U: M(Z)=M(Z)-(U*450%): IF M(Z)<0 THEN PRINT M$(20):M(Z)=M(Z)+(U*450%): U(6)=U(6)-U: RETURN
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric * integer
 WARNING: Type mismatch numeric * integer
 NumericValue:6
 Variable:U(.) -> .
 NumericValue:6
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:450
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:20
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:450
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:6
 Variable:U(.) -> .
 NumericValue:6
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 
3261 H%(26),H%(27),H%(29)=U(6): RETURN
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 NumericValue:26
 Variable:H%(.) -> %
 NumericValue:27
 Variable:H%(.) -> %
 NumericValue:29
 Variable:H%(.) -> %
 NumericValue:6
 Variable:U(.) -> .
 AssignmentOperator:= . -> %,%,%
 
3262 U(7)=U(7)+U: M(Z)=M(Z)-(U*600%): IF M(Z)<0 THEN PRINT M$(20):M(Z)=M(Z)+(U*600%): U(7)=U(7)-U: RETURN
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric * integer
 WARNING: Type mismatch numeric * integer
 NumericValue:7
 Variable:U(.) -> .
 NumericValue:7
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:600
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:20
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:600
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:7
 Variable:U(.) -> .
 NumericValue:7
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 
3263 H%(31),H%(32),H%(34)=U(7): RETURN
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 NumericValue:31
 Variable:H%(.) -> %
 NumericValue:32
 Variable:H%(.) -> %
 NumericValue:34
 Variable:H%(.) -> %
 NumericValue:7
 Variable:U(.) -> .
 AssignmentOperator:= . -> %,%,%
 
3264 U(8)=U(8)+U: M(Z)=M(Z)-(U*400%): IF M(Z)<0 THEN PRINT M$(20):M(Z)=M(Z)+(U*400%): U(8)=U(8)-U: RETURN
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric * integer
 WARNING: Type mismatch numeric * integer
 NumericValue:8
 Variable:U(.) -> .
 NumericValue:8
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:400
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:M(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 NumericValue:20
 Variable:M$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:U -> .
 IntegerValue:400
 BinaryOperatorMultiply:*(.,%) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 NumericValue:8
 Variable:U(.) -> .
 NumericValue:8
 Variable:U(.) -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 
3265 H%(37),H%(39)=U(8): RETURN
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 NumericValue:37
 Variable:H%(.) -> %
 NumericValue:39
 Variable:H%(.) -> %
 NumericValue:8
 Variable:U(.) -> .
 AssignmentOperator:= . -> %,%
 
4100 RANDOMIZE: L=RND(0) !COMMUNITY CHEST
 
 Variable:L -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 AssignmentOperator:= . -> .
4102 IF L>=0 AND L<=.1 THEN PRINT Z$(1): M(Z)=M(Z)+100%: RETURN
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 Variable:L -> .
 NumericValue:.1
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:1
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:100
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 
4104 IF L>.1 AND L<=.2 THEN PRINT Z$(2): M(Z)=M(Z)+100%: RETURN
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.1
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.2
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:2
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:100
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 
4106 IF L>.2 AND L<=.3 THEN PRINT Z$(3): M(Z)=M(Z)+20%: RETURN
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.2
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.3
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:3
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:20
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 
4108 IF L>.3 AND L<=.4 THEN PRINT Z$(4): M(Z)=M(Z)-50%: RETURN
 WARNING: Type mismatch numeric - integer
 Variable:L -> .
 NumericValue:.3
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.4
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:4
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:50
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 
4110 IF L>.4 AND L<=.5 THEN PRINT Z$(5): M(Z)=M(Z)+100%: RETURN
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.4
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.5
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:5
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:100
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 
4112 IF L>.5 AND L<=.6 THEN PRINT Z$(6): M(Z)=M(Z)+200%: I(Z)=0: RETURN
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.5
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.6
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:6
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:200
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 
4114 IF L>.6 AND L<=.7 THEN PRINT Z$(7): M(Z)=M(Z)-100%: RETURN
 WARNING: Type mismatch numeric - integer
 Variable:L -> .
 NumericValue:.6
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.7
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:7
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:100
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 
4116 IF L>.7 AND L<=.8 THEN PRINT Z$(8): M(Z)=M(Z)-50%: I(Z)=10: RETURN
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric - integer
 Variable:L -> .
 NumericValue:.7
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.8
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:8
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:50
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
 
4118 IF L>.8 AND L<=.9 THEN PRINT Z$(9): M(Z)=M(Z)-50%: RETURN
 WARNING: Type mismatch numeric - integer
 Variable:L -> .
 NumericValue:.8
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.9
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:9
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:50
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 
4120 IF L>.9 AND L<=1 THEN PRINT Z$(10): M(Z)=M(Z)+200%: RETURN
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.9
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:1
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:10
 Variable:Z$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:200
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 
4400 RANDOMIZE: L=RND(0) !CHANCE
 
 Variable:L -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 AssignmentOperator:= . -> .
4402 IF L>=0 AND L<=.1 THEN PRINT C$(1): M(Z)=M(Z)-15%: RETURN
 WARNING: Type mismatch numeric - integer
 Variable:L -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 Variable:L -> .
 NumericValue:.1
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:1
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:15
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 
4404 IF L>.1 AND L<=.2 THEN PRINT C$(2): I(Z)=24: GOSUB 2000: RETURN
 WARNING: Line exceeds PRETTY width limit 72
 Variable:L -> .
 NumericValue:.1
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.2
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:2
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:24
 AssignmentOperator:= =. -> .
 LineNumber:2000
 
4406 IF L>.2 AND L<=.3 THEN PRINT C$(3): I(Z)=I(Z)+3: GOSUB 2000: RETURN
 WARNING: Line exceeds PRETTY width limit 72
 Variable:L -> .
 NumericValue:.2
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.3
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:3
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:3
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 LineNumber:2000
 
4408 IF L>.3 AND L<=.4 THEN PRINT C$(4): I(Z)=0: M(Z)=M(Z)+200%: RETURN
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.3
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.4
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:4
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:200
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 
4410 IF L>.4 AND L<=.5 THEN PRINT C$(S): M(Z)=M(Z)+50%: RETURN
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.4
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.5
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:S -> .
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:50
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 
4412 IF L>.5 AND L<=.6 THEN PRINT C$(6): I(Z)=5: M(Z)=M(Z)+200%: GOSUB 2000: RETURN
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.5
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.6
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:6
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:200
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 LineNumber:2000
 
4414 IF L>.6 AND L<=.7 THEN PRINT C$(7): I(Z)=10: M(Z)=M(Z)-50%: RETURN
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Type mismatch numeric - integer
 Variable:L -> .
 NumericValue:.6
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.7
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:7
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:10
 AssignmentOperator:= =. -> .
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:50
 BinaryOperatorMinus:-(.,%) -> .
 AssignmentOperator:= . -> .
 
4416 IF L>.7 AND L<=.8 THEN PRINT C$(8): M(Z)=M(Z)+150%: RETURN
 WARNING: Type mismatch numeric + integer
 Variable:L -> .
 NumericValue:.7
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.8
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:8
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:M(.) -> .
 Variable:Z -> .
 Variable:M(.) -> .
 IntegerValue:150
 BinaryOperatorPlus:+(.,%) -> .
 AssignmentOperator:= . -> .
 
4418 IF L>.8 AND L<=.9 THEN PRINT C$(9): I(Z)=39: GOSUB 2000: RETURN
 WARNING: Line exceeds PRETTY width limit 72
 Variable:L -> .
 NumericValue:.8
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:.9
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:9
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:39
 AssignmentOperator:= =. -> .
 LineNumber:2000
 
4420 IF L>.9 AND L<=1 THEN PRINT C$(10): I(Z)=11: GOSUB 2000: RETURN
 WARNING: Line exceeds PRETTY width limit 72
 Variable:L -> .
 NumericValue:.9
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:L -> .
 NumericValue:1
 BinaryOperatorLessEqual:<=(.,.) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 NumericValue:10
 Variable:C$(.) -> $
 CarriageControl:NL
 Variable:Z -> .
 Variable:I(.) -> .
 NumericValue:11
 AssignmentOperator:= =. -> .
 LineNumber:2000
 
30000 C,D=0
 Variable:C -> .
 Variable:D -> .
 NumericValue:0
 AssignmentOperator:= =. -> .,.
30002 FOR I=I TO 39
 control: Variable:I -> .
 start:   ["Variable:I -> ."]
 end:     ["NumericValue:39"]
30004 IF L%(I)=1 THEN C=C+1:A$(C)=G$(I)
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:1
 BinaryOperatorEqual:=(%,.) -> ?
 Variable:C -> .
 Variable:C -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:C -> .
 Variable:A$(.) -> $
 Variable:I -> .
 Variable:G$(.) -> $
 AssignmentOperator:= $ -> $
30006 IF L%(I)=2 THEN D=D+1:B$(D)=G$(I)
 Variable:I -> .
 Variable:L%(.) -> %
 NumericValue:2
 BinaryOperatorEqual:=(%,.) -> ?
 Variable:D -> .
 Variable:D -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:D -> .
 Variable:B$(.) -> $
 Variable:I -> .
 Variable:G$(.) -> $
 AssignmentOperator:= $ -> $
30008 NEXT I:PRINT:PRINT
 Variable:I -> .
 CarriageControl:NL
 CarriageControl:NL
30009 PRINT N$(1);" OWNED THE FOLLOWING PROPERTY":FOR I=1 TO C:PRINT A$(I):NEXT I
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:1
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:" OWNED THE FOLLOWING PROPERTY"
 CarriageControl:NL
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:C -> ."]
 Variable:I -> .
 Variable:A$(.) -> $
 CarriageControl:NL
 Variable:I -> .
30010 PRINT "AND HAD";M(1);"DOLLARS AT THE END OF THE GAME"
 TextValue:"AND HAD"
 CarriageControl:;
 NumericValue:1
 Variable:M(.) -> .
 CarriageControl:;
 TextValue:"DOLLARS AT THE END OF THE GAME"
 CarriageControl:NL
30011 PRINT N$(2);" OWNED THE FOLLOWING PROPERTY";FOR I=1 TO D:PRINT B$(I):NEXT I
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:2
 Variable:N$(.) -> $
 CarriageControl:;
 TextValue:" OWNED THE FOLLOWING PROPERTY"
 CarriageControl:;
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:D -> ."]
 Variable:I -> .
 Variable:B$(.) -> $
 CarriageControl:NL
 Variable:I -> .
30012 PRINT "AND HAD";M(2);"DOLLARS AT THE END OF THE GAME"
 TextValue:"AND HAD"
 CarriageControl:;
 NumericValue:2
 Variable:M(.) -> .
 CarriageControl:;
 TextValue:"DOLLARS AT THE END OF THE GAME"
 CarriageControl:NL
30013 CLOSE 1,3:END
 WARNING: Terminating statement in GOSUB
 NumericValue:1
 NumericValue:3
 

