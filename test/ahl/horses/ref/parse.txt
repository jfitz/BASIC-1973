1 DIM V(10),U(10),T(10),M(8),O(8),H(8),B(8),P(6)
 NumericValue:10
 Declaration:V() -> .()
 NumericValue:10
 Declaration:U() -> .()
 NumericValue:10
 Declaration:T() -> .()
 NumericValue:8
 Declaration:M() -> .()
 NumericValue:8
 Declaration:O() -> .()
 NumericValue:8
 Declaration:H() -> .()
 NumericValue:8
 Declaration:B() -> .()
 NumericValue:6
 Declaration:P() -> .()
2 RANDOMIZE \ PRINT "HORSE RACE"
 
 TextValue:"HORSE RACE"
 CarriageControl:NL
3 PRINT "EXAMPLE OF BET: 1,2,200,0 ."
 TextValue:"EXAMPLE OF BET: 1,2,200,0 ."
 CarriageControl:NL
5 PRINT \ PRINT"         SEVENTH = 1 MILE, 3 YR. OLDS       POST 2:35"
 CarriageControl:NL
 TextValue:"         SEVENTH = 1 MILE, 3 YR. OLDS       POST 2:35"
 CarriageControl:NL
6 PRINT 
 CarriageControl:NL
7 FOR I=1 TO 8
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
8 B(I)=I \ GOSUB 210
 Variable:I -> .
 Variable:B(.) -> .
 Variable:I -> .
 AssignmentOperator:= . -> .
 LineNumber:210
9 READ O(I) \ PRINT O(I)":1"
 Variable:I -> .
 Variable:O(.) -> .
 Variable:I -> .
 Variable:O(.) -> .
 CarriageControl:
 TextValue:":1"
 CarriageControl:NL
10 M(I)=(100+50*O(I)) / (O(I)+1)
 Variable:I -> .
 Variable:M(.) -> .
 NumericValue:100
 NumericValue:50
 Variable:I -> .
 Variable:O(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:I -> .
 Variable:O(.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
11 NEXT I
 Variable:I -> .
12 PRINT
 CarriageControl:NL
13 PRINT"ENTER HORSE(1-8);TO WIN, PLACE, SHOW(1,2,3);AND THE WAGER."
 TextValue:"ENTER HORSE(1-8);TO WIN, PLACE, SHOW(1,2,3);AND THE WAGER."
 CarriageControl:NL
14 PRINT "AND 0 FOR NO MORE BETTlNG OR 1 OR MORE BETTING."
 TextValue:"AND 0 FOR NO MORE BETTlNG OR 1 OR MORE BETTING."
 CarriageControl:NL
15 LET S = 0
 Variable:S -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
16 PRINT
 CarriageControl:NL
17 LET S = S + 1
 Variable:S -> .
 Variable:S -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
18 PRINT"BET NO. ";S;
 TextValue:"BET NO. "
 CarriageControl:;
 Variable:S -> .
 CarriageControl:;
19 INPUT T(S),U(S),V(S),M
 Variable:S -> .
 Variable:T(.) -> .
 Variable:S -> .
 Variable:U(.) -> .
 Variable:S -> .
 Variable:V(.) -> .
 Variable:M -> .
20 LET T(S)=ABS(INT(T(S)))
 Variable:S -> .
 Variable:T(.) -> .
 Variable:S -> .
 Variable:T(.) -> .
 FunctionInt:INT(.) -> .
 FunctionAbs:ABS(.) -> .
 AssignmentOperator:= . -> .
21 IF T(S)>8 THEN 26
 Variable:S -> .
 Variable:T(.) -> .
 NumericValue:8
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:26
22 IF T(S)<1 THEN 26
 Variable:S -> .
 Variable:T(.) -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:26
23 LET U(S)=ABS(INT(U(S)))
 Variable:S -> .
 Variable:U(.) -> .
 Variable:S -> .
 Variable:U(.) -> .
 FunctionInt:INT(.) -> .
 FunctionAbs:ABS(.) -> .
 AssignmentOperator:= . -> .
24 IF U(S)>3 THEN 26
 Variable:S -> .
 Variable:U(.) -> .
 NumericValue:3
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:26
25 IF U(S)>0 THEN 28
 Variable:S -> .
 Variable:U(.) -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:28
26 PRINT"HORSE NO. OR WIN-PLACE-SHOW IN ERROR" \ GO TO 18
 TextValue:"HORSE NO. OR WIN-PLACE-SHOW IN ERROR"
 CarriageControl:NL
 LineNumber:18
28 IF V(S)<2 THEN 30
 Variable:S -> .
 Variable:V(.) -> .
 NumericValue:2
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:30
29 IF V(S)<300 THEN 33
 Variable:S -> .
 Variable:V(.) -> .
 NumericValue:300
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:33
30 PRINT"BET MUST BE >$2 AND <$300. BET AGAIN";
 TextValue:"BET MUST BE >$2 AND <$300. BET AGAIN"
 CarriageControl:;
31 INPUT V(S) \ GO TO 28
 Variable:S -> .
 Variable:V(.) -> .
 LineNumber:28
33 IF M = 1 THEN 17
 Variable:M -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:17
35 PRINT \ PRINT" THEY'RE OFF AND RUNNING -" \ PRINT
 CarriageControl:NL
 TextValue:" THEY'RE OFF AND RUNNING -"
 CarriageControl:NL
 CarriageControl:NL
36 FOR I=1 TO 8 \ H(I)=0 \ NEXT I
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
 Variable:I -> .
 Variable:H(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 Variable:I -> .
40 FOR K=1 TO 8
 control: Variable:K -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
42 SLEEP 6
 NumericValue:6
44 FOR J=1 TO 8
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
46 H(J)=H(J)+RND(0)*M(J)
 Variable:J -> .
 Variable:H(.) -> .
 Variable:J -> .
 Variable:H(.) -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 Variable:J -> .
 Variable:M(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
48 NEXT J
 Variable:J -> .
52 FOR I=8 TO 1 STEP -1
 control: Variable:I -> .
 start:   ["NumericValue:8"]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
54 FOR J=2 TO I
 control: Variable:J -> .
 start:   ["NumericValue:2"]
 end:     ["Variable:I -> ."]
56 ON SGN(H(B(J-1))-H(B(J)))+2 GO TO 60,58,62
 Variable:J -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 Variable:H(.) -> .
 Variable:J -> .
 Variable:B(.) -> .
 Variable:H(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSgn:SGN(.) -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 LineNumber:60
 LineNumber:58
 LineNumber:62
58 IF RND(0)>.5 THEN 62
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:.5
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:62
60 Z=B(J-1) \ B(J-1)=B(J) \ B(J)=Z
 Variable:Z -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 AssignmentOperator:= . -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B(.) -> .
 Variable:J -> .
 Variable:B(.) -> .
 AssignmentOperator:= . -> .
 Variable:J -> .
 Variable:B(.) -> .
 Variable:Z -> .
 AssignmentOperator:= . -> .
62 NEXT J
 Variable:J -> .
64 NEXT I
 Variable:I -> .
68 PRINT \ PRINT "   ";
 CarriageControl:NL
 TextValue:"   "
 CarriageControl:;
70 ON K GOTO 72,74,76,78,80,82,84,86
 Variable:K -> .
 LineNumber:72
 LineNumber:74
 LineNumber:76
 LineNumber:78
 LineNumber:80
 LineNumber:82
 LineNumber:84
 LineNumber:86
72 PRINT "AS THEY BREAK FROM THE GATE" \ GO TO 88
 TextValue:"AS THEY BREAK FROM THE GATE"
 CarriageControl:NL
 LineNumber:88
74 PRINT "AT THE 1/4 MILE POLE" \ GO TO 88
 TextValue:"AT THE 1/4 MILE POLE"
 CarriageControl:NL
 LineNumber:88
76 PRINT "NEARING THE HALFWAY MARK" \ GO TO 88
 TextValue:"NEARING THE HALFWAY MARK"
 CarriageControl:NL
 LineNumber:88
78 PRINT "MIDWAY IN THE RACE" \ GO TO 88
 TextValue:"MIDWAY IN THE RACE"
 CarriageControl:NL
 LineNumber:88
80 PRINT "AT 5/8 OF A MILE" \ GO TO 88
 TextValue:"AT 5/8 OF A MILE"
 CarriageControl:NL
 LineNumber:88
82 PRINT "ROUNDING THE TURN" \ GO TO 88
 TextValue:"ROUNDING THE TURN"
 CarriageControl:NL
 LineNumber:88
84 PRINT "COMING DOWN THE STRETCH" \ GO TO 88
 TextValue:"COMING DOWN THE STRETCH"
 CarriageControl:NL
 LineNumber:88
86 PRINT " FINISH"
 TextValue:" FINISH"
 CarriageControl:NL
88 REM
 Remark:
90 GO SUB 200
 LineNumber:200
92 NEXT K
 Variable:K -> .
96 PRINT \ PRINT \ PRINT "$2 MUTUELS PAID:"
 CarriageControl:NL
 CarriageControl:NL
 TextValue:"$2 MUTUELS PAID:"
 CarriageControl:NL
98 PRINT " STRAIGHT PLACE SHOW"
 TextValue:" STRAIGHT PLACE SHOW"
 CarriageControl:NL
100 K=0
 Variable:K -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
102 FOR I=1 TO 3
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
104 GO SUB 215
 LineNumber:215
106 FOR J=1 TO 3
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
108 L=2*I+J-3 \ P(L)=1.5+.1*INT(.1*INT((4*O(B(I))/(J*(J+1))+RND(0))*100+5))
 WARNING: Line exceeds PRETTY width limit 72
 Variable:L -> .
 NumericValue:2
 Variable:I -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:J -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:3
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
 Variable:L -> .
 Variable:P(.) -> .
 NumericValue:1.5
 NumericValue:.1
 NumericValue:.1
 NumericValue:4
 Variable:I -> .
 Variable:B(.) -> .
 Variable:O(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:J -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:100
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:5
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
110 PRINT TAB(3+10*J); \ B=-16
 NumericValue:3
 NumericValue:10
 Variable:J -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 Variable:B -> .
 NumericValue:16
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
112 FOR M=3 TO -1 STEP -1
 control: Variable:M -> .
 start:   ["NumericValue:3"]
 end:     ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
114 P=INT(P(L)/(10^M))
 Variable:P -> .
 Variable:L -> .
 Variable:P(.) -> .
 NumericValue:10
 Variable:M -> .
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
116 P=P-10*INT(P/10)
 Variable:P -> .
 Variable:P -> .
 NumericValue:10
 Variable:P -> .
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
117 IF P=0 THEN 118 \ B=0
 Variable:P -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:118
 Variable:B -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
118 PRINT CHR$(48+P+B);
 NumericValue:48
 Variable:P -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:B -> .
 BinaryOperatorPlus:+(.,.) -> .
 FunctionChr:CHR$(.) -> $
 CarriageControl:;
138 IF M<>0 THEN 139 \ PRINT ".";
 Variable:M -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:139
 TextValue:"."
 CarriageControl:;
139 NEXT M
 Variable:M -> .
140 PRINT "0";
 TextValue:"0"
 CarriageControl:;
142 NEXT J
 Variable:J -> .
144 PRINT
 CarriageControl:NL
146 NEXT I
 Variable:I -> .
150 PRINT \ Q=0
 CarriageControl:NL
 Variable:Q -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
152 FOR J=1 TO S
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:S -> ."]
154 PRINT "BET NO. "; J
 TextValue:"BET NO. "
 CarriageControl:;
 Variable:J -> .
 CarriageControl:NL
156 P=0
 Variable:P -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
158 FOR I=1 TO 6 \ H(B(I))=I \ NEXT I
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:6"]
 Variable:I -> .
 Variable:B(.) -> .
 Variable:H(.) -> .
 Variable:I -> .
 AssignmentOperator:= . -> .
 Variable:I -> .
160 IF U(J)<H(T(J)) THEN 166
 Variable:J -> .
 Variable:U(.) -> .
 Variable:J -> .
 Variable:T(.) -> .
 Variable:H(.) -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:166
162 P= .01*INT((V(J)*50)*P(U(J)*H(T(J))*2-3))
 Variable:P -> .
 NumericValue:.01
 Variable:J -> .
 Variable:V(.) -> .
 NumericValue:50
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:J -> .
 Variable:U(.) -> .
 Variable:J -> .
 Variable:T(.) -> .
 Variable:H(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:2
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:3
 BinaryOperatorMinus:-(.,.) -> .
 Variable:P(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
164 PRINT "YOU COLLECT" P "ON "; \ GO TO 172
 TextValue:"YOU COLLECT"
 CarriageControl:
 Variable:P -> .
 CarriageControl:
 TextValue:"ON "
 CarriageControl:;
 LineNumber:172
166 IF H(T(J))>3 THEN 168 \ PRINT "NEXT TIME, BUY A SHOW"; \ GO TO 170
 Variable:J -> .
 Variable:T(.) -> .
 Variable:H(.) -> .
 NumericValue:3
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:168
 TextValue:"NEXT TIME, BUY A SHOW"
 CarriageControl:;
 LineNumber:170
168 PRINT "TEAR UP YOUR";
 TextValue:"TEAR UP YOUR"
 CarriageControl:;
170 PRINT " TICKET ON ";
 TextValue:" TICKET ON "
 CarriageControl:;
172 I=0 \ B(0)=T(J) \ GOSUB 215 \ PRINT
 Variable:I -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
 NumericValue:0
 Variable:B(.) -> .
 Variable:J -> .
 Variable:T(.) -> .
 AssignmentOperator:= . -> .
 LineNumber:215
 CarriageControl:NL
174 Q=Q+P-V(J)
 Variable:Q -> .
 Variable:Q -> .
 Variable:P -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:J -> .
 Variable:V(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
176 NEXT J
 Variable:J -> .
178 IF Q<0 THEN 182
 Variable:Q -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:182
180 PRINT "YOUR TOTAL WINNINGS AMOUNT TO $" Q \ STOP
 TextValue:"YOUR TOTAL WINNINGS AMOUNT TO $"
 CarriageControl:
 Variable:Q -> .
 CarriageControl:NL
 
182 PRINT "YOUR TOTAL LOSSES AMOUNT TO $" ABS(Q) \ STOP
 TextValue:"YOUR TOTAL LOSSES AMOUNT TO $"
 CarriageControl:
 Variable:Q -> .
 FunctionAbs:ABS(.) -> .
 CarriageControl:NL
 
200 PRINT "POS.  HORSE   LENGTHS BEHIND"
 TextValue:"POS.  HORSE   LENGTHS BEHIND"
 CarriageControl:NL
205 FOR I=1 TO 8
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
210 PRINT I;
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
 CarriageControl:;
215 ON B(I) GOTO 220,222,224,226,228,230,232,234
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
 Variable:B(.) -> .
 LineNumber:220
 LineNumber:222
 LineNumber:224
 LineNumber:226
 LineNumber:228
 LineNumber:230
 LineNumber:232
 LineNumber:234
220 PRINT "MAN O'WAR  "; \ GO TO 240
 WARNING: Multiple GOSUB entry points
 TextValue:"MAN O'WAR  "
 CarriageControl:;
 LineNumber:240
222 PRINT "CITATION   "; \ GO TO 240
 WARNING: Multiple GOSUB entry points
 TextValue:"CITATION   "
 CarriageControl:;
 LineNumber:240
224 PRINT "WHIRLAWAY  "; \ GO TO 240
 WARNING: Multiple GOSUB entry points
 TextValue:"WHIRLAWAY  "
 CarriageControl:;
 LineNumber:240
226 PRINT "ASSAULT    "; \ GO TO 240
 WARNING: Multiple GOSUB entry points
 TextValue:"ASSAULT    "
 CarriageControl:;
 LineNumber:240
228 PRINT "SEABISCUIT "; \ GO TO 240
 WARNING: Multiple GOSUB entry points
 TextValue:"SEABISCUIT "
 CarriageControl:;
 LineNumber:240
230 PRINT "GALLANT FOX"; \ GO TO 240
 WARNING: Multiple GOSUB entry points
 TextValue:"GALLANT FOX"
 CarriageControl:;
 LineNumber:240
232 PRINT "STYMIE     "; \ GO TO 240
 WARNING: Multiple GOSUB entry points
 TextValue:"STYMIE     "
 CarriageControl:;
 LineNumber:240
234 PRINT "COALTOWN   ";
 WARNING: Multiple GOSUB entry points
 TextValue:"COALTOWN   "
 CarriageControl:;
240 IF K=0 THEN 260
 WARNING: Multiple GOSUB entry points
 WARNING: Transfer in/out of FOR/NEXT 260
 Variable:K -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:260
245 IF I>1 THEN 250 \ PRINT \ GO TO 255
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:250
 CarriageControl:NL
 LineNumber:255
250 PRINT .1*INT(H(B(1))-H(B(I)))
 WARNING: Multiple GOSUB entry points
 NumericValue:.1
 NumericValue:1
 Variable:B(.) -> .
 Variable:H(.) -> .
 Variable:I -> .
 Variable:B(.) -> .
 Variable:H(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 CarriageControl:NL
255 NEXT I
 WARNING: Multiple GOSUB entry points
 Variable:I -> .
260 RETURN
 WARNING: Multiple GOSUB entry points
 
301 DATA 3,4,5,8,9,11,20,30
 NumericValue:3
 NumericValue:4
 NumericValue:5
 NumericValue:8
 NumericValue:9
 NumericValue:11
 NumericValue:20
 NumericValue:30
999 END
 

