Statistics:

Number of lines: 537
Number of valid statements: 631
Number of comments: 28
Number of executable statements: 630

Complexity:

Comment density: 0.044
Comprehension effort: 2259
McCabe complexity: 140
Halstead complexity:
 length: 3488
 volume: 21866.608
 difficulty: 67.971
 effort: 1486305.845
 language: 4.733
 intelligence: 321.703
 time: 1376.209

(0 1) 100 REM *** PROGRAM SIMULATES TV PROGRAM STARTREK
  Origs: 
  Dests: 
(0 1) 110 REM *** WRITTEN BY MIKE MAYFIELD, CENTERLINE ENGINEERING
  Origs: 
  Dests: 
(0 1) 120 REM *** DEBUGGING AND MINOR REVISIONS BY LEO LAVERDURE, IRA POTEL,
  Origs: 
  Dests: 
(0 1) 130 REM *** MARY COLE, AND DAVE AHL OF DIGITAL
  Origs: 
  Dests: 
(0 1) 170 RANDOMIZE
  Origs: :start
  Dests: 180:auto
(0 2) 180 PRINT "                  * * * STAR TREK * * *"
(0 2)     PRINT
  Origs: 170:auto
  Dests: 200:auto
(1 2) 200 INPUT "DO YOU WANT INSTRUCTIONS (THEY'RE LONG!)"; A$
  Origs: 180:auto
  Dests: 210:auto
(1 4) 210 IF A$ <> "YES" THEN 230
  Origs: 200:auto
  Dests: 220:auto, 240:ifthen
(0 2) 220 GOTO 5820
  Origs: 210:auto
  Dests: 5820:goto
(0 1) 230 REM *** PROGRAM BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I) (0 3) 240 Z$, R$, Q$ = "                                                                          "
  Origs: 210:ifthen, 4030:goto, 4107:ifthen, 6500:goto
  Dests: 260:auto
G(3790) F(I) (0 6) 260 DIM G(8, 8), C(9, 2), K(3, 3), N(3), Z(8, 8)
  Origs: 240:auto
  Dests: 290:auto
G(3790) F(I) (0 5) 290 T0, T = INT(RND(1) * 20 + 20) * 100
  Origs: 260:auto
  Dests: 300:auto
G(3790) F(I) (0 3) 300 T9 = 30
G(3790) F(I) (0 3)     D0 = 0
G(3790) F(I) (0 3)     E0, E = 3000
G(3790) F(I) (0 3)     P0, P = 10
G(3790) F(I) (0 3)     S9 = 200
G(3790) F(I) (0 3)     S, S8 = 0
  Origs: 290:auto
  Dests: 370:auto
FND(_) (0 3) 360 DEF FND(D) = SQR((K(I, 1) - S1) ** 2 + (K(I, 2) - S2) ** 2)
  Origs: 
  Dests: 
G(3790) F(I) (0 4) 370 Q1 = INT(RND(1) * 8 + 1)
  Origs: 300:auto
  Dests: 380:auto
G(3790) F(I) (0 4) 380 Q2 = INT(RND(1) * 8 + 1)
  Origs: 370:auto
  Dests: 390:auto
G(3790) F(I) (0 4) 390 S1 = INT(RND(1) * 8 + 1)
  Origs: 380:auto
  Dests: 400:auto
G(3790) F(I) (0 4) 400 S2 = INT(RND(1) * 8 + 1)
  Origs: 390:auto
  Dests: 410:auto
G(3790) F(I) (0 4) 410 T7 = TIME(0)
  Origs: 400:auto
  Dests: 420:auto
G(3790) F(I) (0 4) 420 C(2, 1), C(3, 1), C(4, 1), C(4, 2), C(5, 2), C(6, 2) = -1
  Origs: 410:auto
  Dests: 430:auto
G(3790) F(I) (0 3) 430 C(1, 1), C(3, 2), C(5, 1), C(7, 2), C(9, 1) = 0
  Origs: 420:auto
  Dests: 440:auto
G(3790) F(I) (0 3) 440 C(1, 2), C(2, 2), C(6, 1), C(7, 1), C(8, 1), C(8, 2), C(9, 2) = 1
  Origs: 430:auto
  Dests: 460:auto
(0 1) 450 REM MAT D=ZER
  Origs: 
  Dests: 
G(3790) F(I) (0 3) 460 D$ = "WARP ENGINESS.R.SENSORSL.R.SENSORSPHASER CNTRL"
  Origs: 440:auto
  Dests: 470:auto
G(3790) F(I) (0 4) 470 D$ = D$ + "PHOTON TUBESDAMAGE CNTRL"
  Origs: 460:auto
  Dests: 480:auto
G(3790) F(I) (0 3) 480 E$ = "SHIELD CNTRLCOMPUTER"
  Origs: 470:auto
  Dests: 490:auto
G(3790) F(I) (0 3) 490 B9, K9 = 0
  Origs: 480:auto
  Dests: 500:auto
(0 1) 491 REM *** SETS UP WHAT EXISTS IN GALAXY
  Origs: 
  Dests: 
G(3790) F(I) (1 3) 500 FOR I = 1 TO 8
  Origs: 490:auto
  Dests: 510:fornext, 760:fornext
G(3790) F(I,J) (1 3) 510 FOR J = 1 TO 8
  Origs: 500:fornext
  Dests: 520:fornext, 750:fornext
G(3790) F(I,J) (0 4) 520 R1 = RND(1)
  Origs: 510:fornext
  Dests: 530:auto
G(3790) F(I,J) (1 4) 530 IF R1 > .98 THEN 580
  Origs: 520:auto
  Dests: 540:auto, 580:ifthen
G(3790) F(I,J) (1 4) 540 IF R1 > .95 THEN 610
  Origs: 530:auto
  Dests: 550:auto, 610:ifthen
G(3790) F(I,J) (1 4) 550 IF R1 > .8 THEN 640
  Origs: 540:auto
  Dests: 560:auto, 640:ifthen
G(3790) F(I,J) (0 3) 560 K3 = 0
G(3790) F(I,J) (0 2)     GOTO 660
  Origs: 550:auto
  Dests: 660:goto
G(3790) F(I,J) (0 3) 580 K3 = 3
G(3790) F(I,J) (0 4)     K9 = K9 + 3
G(3790) F(I,J) (0 2)     GOTO 660
  Origs: 530:ifthen
  Dests: 660:goto
G(3790) F(I,J) (0 3) 610 K3 = 2
G(3790) F(I,J) (0 4)     K9 = K9 + 2
G(3790) F(I,J) (0 2)     GOTO 660
  Origs: 540:ifthen
  Dests: 660:goto
G(3790) F(I,J) (0 3) 640 K3 = 1
G(3790) F(I,J) (0 4)     K9 = K9 + 1
  Origs: 550:ifthen
  Dests: 660:auto
G(3790) F(I,J) (0 4) 660 R1 = RND(1)
  Origs: 560:goto, 580:goto, 610:goto, 640:auto
  Dests: 670:auto
G(3790) F(I,J) (1 4) 670 IF R1 > .96 THEN 700
  Origs: 660:auto
  Dests: 680:auto, 700:ifthen
G(3790) F(I,J) (0 3) 680 B3 = 0
G(3790) F(I,J) (0 2)     GOTO 720
  Origs: 670:auto
  Dests: 720:goto
G(3790) F(I,J) (0 3) 700 B3 = 1
G(3790) F(I,J) (0 4)     B9 = B9 + 1
  Origs: 670:ifthen
  Dests: 720:auto
G(3790) F(I,J) (0 4) 720 S3 = INT(RND(1) * 8 + 1)
  Origs: 680:goto, 700:auto
  Dests: 730:auto
G(3790) F(I,J) (0 8) 730 G(I, J) = K3 * 100 + B3 * 10 + S3
  Origs: 720:auto
  Dests: 740:auto
G(3790) F(I,J) (0 3) 740 Z(I, J) = 0
  Origs: 730:auto
  Dests: 750:auto
G(3790) F(I,J) (0 1) 750 NEXT J
  Origs: 510:fornext, 740:auto
  Dests: 760:auto
G(3790) F(I) (0 1) 760 NEXT I
  Origs: 500:fornext, 750:auto
  Dests: 770:auto
G(3790) (0 3) 770 K7 = K9
  Origs: 760:auto
  Dests: 775:auto
G(3790) (0 2) 775 PRINT
G(3790) (0 2)     PRINT
  Origs: 770:auto
  Dests: 780:auto
G(3790) (0 8) 780 PRINT "YOU MUST DESTROY" K9 " KLINGONS IN" T9 " STARDATES WITH " B9 " STARBASES"
  Origs: 775:auto
  Dests: 790:auto
G(3790) (1 4) 790 IF B9 > 0 THEN 810
  Origs: 780:auto
  Dests: 800:auto, 810:ifthen
G(3790) (0 3) 800 G(6, 3) = 114
  Origs: 790:auto
  Dests: 810:auto
G(3790) F(I) (0 3) 810 K3, B3, S3 = 0
  Origs: 790:ifthen, 800:auto, 2320:goto
  Dests: 820:auto
G(3790) F(I) (1 13) 820 IF Q1 < 1 OR Q1 > 8 OR Q2 < 1 OR Q2 > 8 THEN 990
  Origs: 810:auto
  Dests: 830:auto, 990:ifthen
G(3790) F(I) (0 4) 830 X = G(Q1, Q2) * .01
  Origs: 820:auto
  Dests: 840:auto
G(3790) F(I) (0 4) 840 K3 = INT(X)
  Origs: 830:auto
  Dests: 850:auto
G(3790) F(I) (0 4) 850 B3 = INT((X - K3) * 10)
  Origs: 840:auto
  Dests: 860:auto
G(3790) F(I) (0 6) 860 S3 = G(Q1, Q2) - INT(G(Q1, Q2) * .1) + 10
  Origs: 850:auto
  Dests: 870:auto
G(3790) F(I) (1 4) 870 IF K3 = 0 THEN 910
  Origs: 860:auto
  Dests: 880:auto, 910:ifthen
G(3790) F(I) (1 4) 880 IF S > 200 THEN 910
  Origs: 870:auto
  Dests: 890:auto, 910:ifthen
G(3790) F(I) (0 2) 890 PRINT "COMBAT AREA      CONDITION RED"
  Origs: 880:auto
  Dests: 900:auto
G(3790) F(I) (0 2) 900 PRINT "   SHIELDS DANGEROUSLY LOW"
  Origs: 890:auto
  Dests: 910:auto
G(3790) F(I) (0 4) 910 MAT K = ZER
  Origs: 870:ifthen, 880:ifthen, 900:auto
  Dests: 920:auto
G(3790) F(I) (1 3) 920 FOR I = 1 TO 3
  Origs: 910:auto
  Dests: 930:fornext, 940:fornext
G(3790) F(I) (0 3) 930 K(I, 3) = 0
  Origs: 920:fornext
  Dests: 940:auto
G(3790) F(I) (0 1) 940 NEXT I
  Origs: 920:fornext, 930:auto
  Dests: 950:auto
G(3790) (0 3) 950 Q$ = Z$
G(3790) (0 3)     R$ = Z$
  Origs: 940:auto
  Dests: 970:auto
G(3790) (0 4) 970 S$ = MID(Z$, 1, 48)
  Origs: 950:auto
  Dests: 980:auto
(0 1) 971 REM *** PUT ENTERPRISE SOMEWHERE
  Origs: 
  Dests: 
G(3790) (0 3) 980 A$ = "<*>"
  Origs: 970:auto
  Dests: 990:auto
G(3790) F(I) (0 3) 990 Z1 = S1
  Origs: 820:ifthen, 980:auto
  Dests: 1000:auto
G(3790) F(I) (0 3) 1000 Z2 = S2
  Origs: 990:auto
  Dests: 1010:auto
G(3790) F(I) (0 2) 1010 GOSUB 5510
  Origs: 1000:auto
  Dests: 1020:auto, 5520:gosub
G(3790) F(I) (1 3) 1020 FOR I = 1 TO K3
  Origs: 1010:auto
  Dests: 1030:fornext, 1110:fornext
G(3790) F(I) (0 2) 1030 GOSUB 5380
  Origs: 1020:fornext
  Dests: 1040:auto, 5380:gosub
(0 1) 1031 REM *** PUT KLINGONS SOMEWHERE
  Origs: 
  Dests: 
G(3790) F(I) (0 3) 1040 A$ = "+++"
  Origs: 1030:auto
  Dests: 1050:auto
G(3790) F(I) (0 3) 1050 Z1 = R1
  Origs: 1040:auto
  Dests: 1060:auto
G(3790) F(I) (0 3) 1060 Z2 = R2
  Origs: 1050:auto
  Dests: 1070:auto
G(3790) F(I) (0 2) 1070 GOSUB 5510
  Origs: 1060:auto
  Dests: 1080:auto, 5520:gosub
G(3790) F(I) (0 3) 1080 K(I, 1) = R1
G(3790) F(I) (0 3)      K(I, 2) = R2
G(3790) F(I) (0 3)      K(I, 3) = S9
  Origs: 1070:auto
  Dests: 1110:auto
G(3790) F(I) (0 1) 1110 NEXT I
  Origs: 1020:fornext, 1080:auto
  Dests: 1120:auto
G(3790) F(I) (1 3) 1120 FOR I = 1 TO B3
  Origs: 1110:auto
  Dests: 1130:fornext, 1180:fornext
G(3790) F(I) (0 2) 1130 GOSUB 5380
  Origs: 1120:fornext
  Dests: 1140:auto, 5380:gosub
(0 1) 1131 REM *** PUT STARBASE(S) SOMEWHERE
  Origs: 
  Dests: 
G(3790) F(I) (0 3) 1140 A$ = ">1<"
G(3790) F(I) (0 3)      Z1 = R1
G(3790) F(I) (0 3)      Z2 = R2
  Origs: 1130:auto
  Dests: 1170:auto
G(3790) F(I) (0 2) 1170 GOSUB 5510
  Origs: 1140:auto
  Dests: 1180:auto, 5520:gosub
G(3790) F(I) (0 1) 1180 NEXT I
  Origs: 1120:fornext, 1170:auto
  Dests: 1190:auto
G(3790) F(I) (1 3) 1190 FOR I = 1 TO S3
  Origs: 1180:auto
  Dests: 1200:fornext, 1250:fornext
G(3790) F(I) (0 2) 1200 GOSUB 5380
  Origs: 1190:fornext
  Dests: 1210:auto, 5380:gosub
(0 1) 1201 REM *** PUT STARS SOMEWHERE
  Origs: 
  Dests: 
G(3790) F(I) (0 3) 1210 A$ = " * "
G(3790) F(I) (0 3)      Z1 = R1
G(3790) F(I) (0 3)      Z2 = R2
  Origs: 1200:auto
  Dests: 1240:auto
G(3790) F(I) (0 2) 1240 GOSUB 5510
  Origs: 1210:auto
  Dests: 1250:auto, 5520:gosub
G(3790) F(I) (0 1) 1250 NEXT I
  Origs: 1190:fornext, 1240:auto
  Dests: 1260:auto
G(3790) F(I) (0 2) 1260 GOSUB 4111
  Origs: 1250:auto, 1291:ifthen, 2160:goto
  Dests: 1270:auto, 4120:gosub
G(3790) F(I) (1 2) 1270 INPUT "COMMAND:"; A
  Origs: 1260:auto, 1400:goto, 1430:ifthen, 1600:goto, 2360:goto, 2500:goto, 2560:goto, 2790:goto, 2820:goto, 2850:goto, 2880:ifthen, 3450:goto, 3480:goto, 3510:ifthen, 3550:goto, 3580:goto, 3660:goto, 3680:goto, 4640:goto, 4820:goto, 5320:goto
  Dests: 1290:auto
G(3790) F(I) (1 4) 1290 IF A = 0 GOTO 1410
  Origs: 1270:auto
  Dests: 1291:auto, 1410:ifthen
G(3790) F(I) (1 5) 1291 IF A = 1 GOTO 1260
     WARNING: Branch to line before GOSUB start
  Origs: 1290:auto
  Dests: 1260:ifthen, 1292:auto
G(3790) F(I) (1 4) 1292 IF A = 2 GOTO 2330
  Origs: 1291:auto
  Dests: 1293:auto, 2330:ifthen
G(3790) F(I) (1 4) 1293 IF A = 3 GOTO 2530
  Origs: 1292:auto
  Dests: 1294:auto, 2530:ifthen
G(3790) F(I) (1 4) 1294 IF A = 4 GOTO 2800
  Origs: 1293:auto
  Dests: 1295:auto, 2800:ifthen
G(3790) F(I) (1 4) 1295 IF A = 5 GOTO 3460
  Origs: 1294:auto
  Dests: 1296:auto, 3460:ifthen
G(3790) F(I) (1 4) 1296 IF A = 6 GOTO 3560
  Origs: 1295:auto
  Dests: 1297:auto, 3560:ifthen
G(3790) F(I) (1 4) 1297 IF A = 7 GOTO 4630
  Origs: 1296:auto
  Dests: 1298:auto, 4630:ifthen
G(3790) F(I) (1 4) 1298 IF A = 8 GOTO 6510
  Origs: 1297:auto
  Dests: 1310:auto, 6510:ifthen
G(3790) F(I) (0 2) 1310 PRINT
G(3790) F(I) (0 2)      PRINT "   0 = SET COURSE"
  Origs: 1298:auto
  Dests: 1320:auto
G(3790) F(I) (0 2) 1320 PRINT "   1 = SHORT RANGE SENSOR SCAN"
  Origs: 1310:auto
  Dests: 1330:auto
G(3790) F(I) (0 2) 1330 PRINT "   2 = LONG RANGE SENSOR SCAN"
  Origs: 1320:auto
  Dests: 1340:auto
G(3790) F(I) (0 2) 1340 PRINT "   3 = FIRE PHASERS"
  Origs: 1330:auto
  Dests: 1350:auto
G(3790) F(I) (0 2) 1350 PRINT "   4 = FIRE PHOTON TORPEDOES"
  Origs: 1340:auto
  Dests: 1360:auto
G(3790) F(I) (0 2) 1360 PRINT "   5 = SHIELD CONTROL"
  Origs: 1350:auto
  Dests: 1370:auto
G(3790) F(I) (0 2) 1370 PRINT "   6 = DAMAGE CONTROL REPORT"
  Origs: 1360:auto
  Dests: 1380:auto
G(3790) F(I) (0 2) 1380 PRINT "   7 = CALL ON LIBRARY COMPUTER"
  Origs: 1370:auto
  Dests: 1390:auto
G(3790) F(I) (0 2) 1390 PRINT "   8 = END THE CONTEST"
G(3790) F(I) (0 2)      PRINT
  Origs: 1380:auto
  Dests: 1400:auto
G(3790) F(I) (0 3) 1400 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 1390:auto
  Dests: 1270:goto
(0 1) 1401 REM *** COURSE, CONTROL CODE BEGIMS HERE
  Origs: 
  Dests: 
G(3790) F(I) (1 2) 1410 INPUT "COURSE (1-9):"; C1
  Origs: 1290:ifthen, 1440:ifthen, 1470:ifthen, 1500:goto
  Dests: 1430:auto
G(3790) F(I) (1 5) 1430 IF C1 = 0 THEN 1270
     WARNING: Branch to line before GOSUB start
  Origs: 1410:auto
  Dests: 1270:ifthen, 1440:auto
G(3790) F(I) (1 8) 1440 IF C1 < 1 OR C1 > 9 THEN 1410
     WARNING: Branch to line before GOSUB start
  Origs: 1430:auto
  Dests: 1410:ifthen, 1450:auto
G(3790) F(I) (1 2) 1450 INPUT "WARP FACTOR (0-8):"; W1
  Origs: 1440:auto
  Dests: 1470:auto
G(3790) F(I) (1 8) 1470 IF W1 < 1 OR W1 > 8 THEN 1410
     WARNING: Branch to line before GOSUB start
  Origs: 1450:auto
  Dests: 1410:ifthen, 1480:auto
G(3790) F(I) (1 7) 1480 IF D(1) > 0 OR W1 <= .2 THEN 1810
  Origs: 1470:auto
  Dests: 1490:auto, 1810:ifthen
G(3790) F(I) (0 2) 1490 PRINT "WARP ENGINES ARE DAMAGEO. MAXIMUM SPEED = WARP .2"
  Origs: 1480:auto
  Dests: 1500:auto
G(3790) F(I) (0 3) 1500 GOTO 1410
     WARNING: Branch to line before GOSUB start
  Origs: 1490:auto
  Dests: 1410:goto
(1 4) 1510 IF K3 <= 0 THEN 1560
  Origs: 
  Dests: 1520:auto, 1560:ifthen
(0 2) 1520 GOSUB 3790
  Origs: 1510:auto
  Dests: 1530:auto, 3790:gosub
(1 4) 1530 IF K3 <= 0 THEN 1560
  Origs: 1520:auto
  Dests: 1540:auto, 1560:ifthen
(1 4) 1540 IF S < 0 THEN 4000
  Origs: 1530:auto
  Dests: 1550:auto, 4000:ifthen
(0 2) 1550 GOTO 1610
  Origs: 1540:auto
  Dests: 1610:goto
(1 4) 1560 IF E > 0 THEN 1610
  Origs: 1510:ifthen, 1530:ifthen
  Dests: 1570:auto, 1610:ifthen
(1 4) 1570 IF S < 1 THEN 3920
  Origs: 1560:auto
  Dests: 1580:auto, 3920:ifthen
(0 4) 1580 PRINT "YOU HAVE" E " UNITS OF ENERGY"
  Origs: 1570:auto
  Dests: 1590:auto
(0 4) 1590 PRINT "SUGGEST YOU GET SOME FROM YOUR SHIELDS WHICH HAVE" S " UNITS LEFT"
  Origs: 1580:auto
  Dests: 1600:auto
(0 3) 1600 GOTO 1270
  Origs: 1590:auto
  Dests: 1270:goto
F(I) (1 3) 1610 FOR I = 1 TO 8
F(I) (1 4)      IF D(I) > 0 THEN 1640
  Origs: 1550:goto, 1560:ifthen
  Dests: 1630:auto, 1640:fornext, 1640:ifthen
(0 1) 1611 REM *** FIX ANY DAMAGED DEVICE
  Origs: 
  Dests: 
F(I) (0 3) 1630 D(I) = 1
  Origs: 1610:auto
  Dests: 1640:auto
F(I) (0 1) 1640 NEXT I
  Origs: 1610:fornext, 1610:ifthen, 1630:auto
  Dests: 1650:auto
(1 5) 1650 IF RND(1) > .2 THEN 1810
  Origs: 1640:auto
  Dests: 1660:auto, 1810:ifthen
(0 4) 1660 B1 = INT(RND(1) * 8 + 1)
  Origs: 1650:auto
  Dests: 1670:auto
(1 5) 1670 IF RND(1) >= .5 THEN 1750
  Origs: 1660:auto
  Dests: 1680:auto, 1750:ifthen
(0 8) 1680 D(B1) = D(B1) - (RND(1) * 5 + 1)
  Origs: 1670:auto
  Dests: 1690:auto
(0 2) 1690 PRINT
(0 2)      PRINT "DAMAGE CONTROL REPORT:";
  Origs: 1680:auto
  Dests: 1710:auto
(0 2) 1710 GOSUB 5610
  Origs: 1690:auto
  Dests: 1720:auto, 5620:gosub
(0 2) 1720 PRINT " DAMAGED"
(0 2)      PRINT
(0 2)      GOTO 1810
  Origs: 1710:auto
  Dests: 1810:goto
(0 8) 1750 D(B1) = D(B1) + (RND(1) * 5 + 1)
  Origs: 1670:ifthen
  Dests: 1760:auto
(0 2) 1760 PRINT
(0 2)      PRINT "DAMAGE CONTROl REPORT:";
  Origs: 1750:auto
  Dests: 1780:auto
(0 2) 1780 GOSUB 5610
  Origs: 1760:auto
  Dests: 1790:auto, 5620:gosub
(0 2) 1790 PRINT " STATE OF REPAIR IMPROVED"
(0 2)      PRINT
  Origs: 1780:auto
  Dests: 1810:auto
G(3790) F(I) (0 4) 1810 N = INT(W1 * 8)
G(3790) F(I) (0 3)      A$ = "   "
G(3790) F(I) (0 3)      Z1 = S1
G(3790) F(I) (0 3)      Z2 = S2
  Origs: 1480:ifthen, 1650:ifthen, 1720:goto, 1790:auto
  Dests: 1850:auto
G(3790) F(I) (0 2) 1850 GOSUB 5510
  Origs: 1810:auto
  Dests: 1860:auto, 5520:gosub
G(3790) F(I) (0 10) 1860 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 1850:auto
  Dests: 1870:auto
G(3790) F(I) (0 3) 1870 X = S1
G(3790) F(I) (0 3)      Y = S2
  Origs: 1860:auto
  Dests: 1890:auto
G(3790) F(I) (0 10) 1890 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 1870:auto
  Dests: 1900:auto
G(3790) F(I) (0 10) 1900 X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
  Origs: 1890:auto
  Dests: 1910:auto
G(3790) F(I) (1 3) 1910 FOR I = 1 TO N
G(3790) F(I) (0 4)      S1 = S1 + X1
G(3790) F(I) (0 4)      S2 = S2 + X2
  Origs: 1900:auto
  Dests: 1940:auto, 2070:fornext
G(3790) F(I) (1 13) 1940 IF S1 < 1 OR S1 >= 9 OR S2 < 1 OR S2 >= 9 THEN 2170
  Origs: 1910:auto
  Dests: 1950:auto, 2170:ifthen
G(3790) F(I) (0 8) 1950 S8 = S1 * 24 + S2 * 3 - 26
G(3790) F(I) (1 4)      IF S8 > 72 THEN 1990
  Origs: 1940:auto
  Dests: 1970:auto, 1990:ifthen
G(3790) F(I) (1 5) 1970 IF MID(Q$, S8, 3) = "   " THEN 2070
  Origs: 1950:auto
  Dests: 1980:auto, 2070:ifthen
G(3790) F(I) (0 2) 1980 GOTO 2030
  Origs: 1970:auto
  Dests: 2030:goto
G(3790) F(I) (1 4) 1990 IF S8 > 144 THEN 2020
  Origs: 1950:ifthen
  Dests: 2000:auto, 2020:ifthen
G(3790) F(I) (1 5) 2000 IF MID(R$, S8 - 72, 3) = "   " THEN 2070
  Origs: 1990:auto
  Dests: 2010:auto, 2070:ifthen
G(3790) F(I) (0 2) 2010 GOTO 2030
  Origs: 2000:auto
  Dests: 2030:goto
G(3790) F(I) (1 5) 2020 IF MID(S$, S8 - 144, 3) = "   " THEN 2070
  Origs: 1990:ifthen
  Dests: 2030:auto, 2070:ifthen
G(3790) F(I) (0 6) 2030 PRINT "WARP ENGINES SHUTDOWN AT SECTOR " S1 "." S2 " DUE TO BAD NAVAGATION"
  Origs: 1980:goto, 2010:goto, 2020:auto
  Dests: 2040:auto
G(3790) F(I) (0 4) 2040 S1 = S1 - X1
G(3790) F(I) (0 4)      S2 = S2 - X2
G(3790) F(I) (0 2)      GOTO 2080
  Origs: 2030:auto
  Dests: 2080:goto
G(3790) F(I) (0 1) 2070 NEXT I
  Origs: 1910:fornext, 1970:ifthen, 2000:ifthen, 2020:ifthen
  Dests: 2080:auto
G(3790) F(I) (0 3) 2080 A$ = "<*>"
G(3790) F(I) (0 3)      Z1 = S1
G(3790) F(I) (0 3)      Z2 = S2
  Origs: 2040:goto, 2070:auto
  Dests: 2110:auto
G(3790) F(I) (0 2) 2110 GOSUB 5510
  Origs: 2080:auto
  Dests: 2120:auto, 5520:gosub
G(3790) F(I) (0 5) 2120 E = E - N + 5
G(3790) F(I) (1 4)      IF W1 < 1 THEN 2150
  Origs: 2110:auto
  Dests: 2140:auto, 2150:ifthen
G(3790) F(I) (0 4) 2140 T = T + 1
  Origs: 2120:auto
  Dests: 2150:auto
G(3790) F(I) (1 6) 2150 IF T > T0 + T9 THEN 3970
  Origs: 2120:ifthen, 2140:auto
  Dests: 2160:auto, 3970:ifthen
G(3790) F(I) (0 3) 2160 GOTO 1260
     WARNING: Branch to line before GOSUB start
  Origs: 2150:auto
  Dests: 1260:goto
G(3790) F(I) (0 8) 2170 X = Q1 * 8 + X + X1 * N
G(3790) F(I) (0 8)      Y = Q2 * 8 + Y + X2 * N
  Origs: 1940:ifthen
  Dests: 2190:auto
G(3790) F(I) (0 4) 2190 Q1 = INT(X / 8)
G(3790) F(I) (0 4)      Q2 = INT(Y / 8)
G(3790) F(I) (0 4)      S1 = INT(X - Q1 * 8)
G(3790) F(I) (0 4)      S2 = INT(Y - Q2 * 8)
  Origs: 2170:auto
  Dests: 2230:auto
G(3790) F(I) (1 4) 2230 IF S1 <> 0 THEN 2260
  Origs: 2190:auto
  Dests: 2240:auto, 2260:ifthen
G(3790) F(I) (0 4) 2240 Q1 = Q1 - 1
G(3790) F(I) (0 3)      S1 = 8
  Origs: 2230:auto
  Dests: 2260:auto
G(3790) F(I) (1 4) 2260 IF S2 <> 0 THEN 2290
  Origs: 2230:ifthen, 2240:auto
  Dests: 2270:auto, 2290:ifthen
G(3790) F(I) (0 4) 2270 Q2 = Q2 - 1
G(3790) F(I) (0 3)      S2 = 8
  Origs: 2260:auto
  Dests: 2290:auto
G(3790) F(I) (0 4) 2290 T = T + 1
G(3790) F(I) (0 5)      F = F - N + 5
  Origs: 2260:ifthen, 2270:auto
  Dests: 2310:auto
G(3790) F(I) (1 6) 2310 IF T > T0 + T9 THEN 3970
  Origs: 2290:auto
  Dests: 2320:auto, 3970:ifthen
G(3790) F(I) (0 3) 2320 GOTO 810
     WARNING: Branch to line before GOSUB start
  Origs: 2310:auto
  Dests: 810:goto
(0 1) 2321 REM *** LONG RANGE SENSOR SCAN CODE BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I) (1 4) 2330 IF D(3) > 0 THEN 2370
  Origs: 1292:ifthen
  Dests: 2340:auto, 2370:ifthen
G(3790) F(I) (0 2) 2340 PRINT "LONG RANGE SENSORS ARE INOPERABLE"
  Origs: 2330:auto
  Dests: 2360:auto
G(3790) F(I) (0 3) 2360 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2340:auto
  Dests: 1270:goto
G(3790) F(I) (0 5) 2370 PRINT "LONG RANGE SENSOR SCAN FOR QUADRANT " Q1 "." Q2
  Origs: 2330:ifthen
  Dests: 2380:auto
G(3790) F(I) (0 2) 2380 PRINT "-------------------"
  Origs: 2370:auto
  Dests: 2390:auto
G(3790) F(I,I) (1 5) 2390 FOR I = Q1 - 1 TO Q1 + 1
  Origs: 2380:auto
  Dests: 2400:fornext, 2490:fornext
G(3790) F(I,I) (0 4) 2400 MAT N = ZER
  Origs: 2390:fornext
  Dests: 2410:auto
G(3790) F(I,J) (1 5) 2410 FOR J = Q2 - 1 TO Q2 + 1
  Origs: 2400:auto
  Dests: 2420:fornext, 2460:fornext
G(3790) F(I,J) (1 13) 2420 IF I < 1 OR I > 8 OR J < 1 OR J > 8 THEN 2460
  Origs: 2410:fornext
  Dests: 2430:auto, 2460:ifthen
G(3790) F(I,J) (0 3) 2430 N(J - Q2 + 2) = G(I, J)
  Origs: 2420:auto
  Dests: 2440:auto
G(3790) F(I,J) (1 4) 2440 IF D(7) < 0 THEN 2460
  Origs: 2430:auto
  Dests: 2450:auto, 2460:ifthen
G(3790) F(I,J) (0 3) 2450 Z(I, J) = G(I, J)
  Origs: 2440:auto
  Dests: 2460:auto
G(3790) F(I,J) (0 1) 2460 NEXT J
  Origs: 2410:fornext, 2420:ifthen, 2440:ifthen, 2450:auto
  Dests: 2470:auto
G(3790) F(I) (0 3) 2470 P1$ = ": ### : ### : ### :"
  Origs: 2460:auto
  Dests: 2471:auto
G(3790) F(I) (0 6) 2471 PRINT USING P1$ N(1), N(2), N(3)
  Origs: 2470:auto
  Dests: 2480:auto
G(3790) F(I) (0 2) 2480 PRINT "------------------"
  Origs: 2471:auto
  Dests: 2490:auto
G(3790) F(I) (0 1) 2490 NEXT I
  Origs: 2390:fornext, 2480:auto
  Dests: 2500:auto
G(3790) F(I) (0 3) 2500 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2490:auto
  Dests: 1270:goto
(0 1) 2501 REM *** PHASER CONTROL CODE BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I) (1 4) 2530 IF K3 <= 0 THEN 3670
  Origs: 1293:ifthen
  Dests: 2540:auto, 3670:ifthen
G(3790) F(I) (1 4) 2540 IF D(4) > 0 THEN 2570
  Origs: 2530:auto
  Dests: 2560:auto, 2570:ifthen
G(3790) F(I) (0 3) 2560 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2540:auto
  Dests: 1270:goto
G(3790) F(I) (1 4) 2570 IF D(7) > 0 THEN 2590
  Origs: 2540:ifthen, 2630:ifthen
  Dests: 2580:auto, 2590:ifthen
G(3790) F(I) (0 2) 2580 PRINT " COMPUTER FAILURE HAMPERS ACCURACY"
  Origs: 2570:auto
  Dests: 2590:auto
G(3790) F(I) (0 3) 2590 PRINT "PHASERS LOCKED ON TARGET, ENERGY AVAILABLE=" E
  Origs: 2570:ifthen, 2580:auto
  Dests: 2600:auto
G(3790) F(I) (1 2) 2600 INPUT "NUMBER OF UNITS TO FIRE:"; X
  Origs: 2590:auto
  Dests: 2620:auto
G(3790) F(I) (1 3) 2620 IF X < 01270
  Origs: 2600:auto
  Dests: 2630:auto
G(3790) F(I) (1 6) 2630 IF E - X < 0 THEN 2570
     WARNING: Branch to line before GOSUB start
  Origs: 2620:auto
  Dests: 2570:ifthen, 2640:auto
G(3790) F(I) (0 4) 2640 E = E - X
  Origs: 2630:auto
  Dests: 2650:auto
G(3790) F(I) (0 2) 2650 GOSUB 3790
  Origs: 2640:auto
  Dests: 2660:auto, 3790:gosub
G(3790) F(I) (1 4) 2660 IF D(7) > 0 THEN 2680
  Origs: 2650:auto
  Dests: 2670:auto, 2680:ifthen
G(3790) F(I) (0 5) 2670 X = X * RND(1)
  Origs: 2660:auto
  Dests: 2680:auto
G(3790) F(I,I) (1 3) 2680 FOR I = 1 TO 3
  Origs: 2660:ifthen, 2670:auto
  Dests: 2690:fornext, 2770:fornext
G(3790) F(I,I) (1 4) 2690 IF K(I, 3) <= 0 THEN 2770
  Origs: 2680:fornext, 3330:ifthen
  Dests: 2700:auto, 2770:ifthen
G(3790) F(I) (0 4) 2700 H = INT((X / K / FND(0)) * (2 * RND(1)))
  Origs: 2690:auto
  Dests: 2710:auto
G(3790) F(I) (0 4) 2710 K(I, 3) = K(I, 3) - H
  Origs: 2700:auto
  Dests: 2720:auto
G(3790) F(I) (0 6) 2720 PRINT H " UNIT HIT ON KLINGON AT SECTOR " K(I, 1) "." K(I, 2);
  Origs: 2710:auto
  Dests: 2730:auto
G(3790) F(I) (0 4) 2730 PRINT "    (" K(I, 3) " LEFT)"
  Origs: 2720:auto
  Dests: 2740:auto
G(3790) F(I) (1 4) 2740 IF K(I, 3) > 0 THEN 2770
  Origs: 2730:auto
  Dests: 2750:auto, 2770:ifthen
G(3790) F(I) (0 2) 2750 GOSUB 3690
  Origs: 2740:auto
  Dests: 2760:auto, 3690:gosub
G(3790) F(I) (1 4) 2760 IF K9 <= 0 THEN 4040
  Origs: 2750:auto
  Dests: 2770:auto, 4040:ifthen
G(3790) F(I) (0 1) 2770 NEXT I
  Origs: 2680:fornext, 2690:ifthen, 2740:ifthen, 2760:auto
  Dests: 2780:auto
G(3790) F(I) (1 4) 2780 IF E < 0 THEN 4000
  Origs: 2770:auto
  Dests: 2790:auto, 4000:ifthen
G(3790) F(I) (0 3) 2790 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2780:auto
  Dests: 1270:goto
(0 1) 2791 REM *** PHOTON TORPEDO CODE BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I) (1 4) 2800 IF D(5) >= 0 THEN 2830
  Origs: 1294:ifthen
  Dests: 2810:auto, 2830:ifthen
G(3790) F(I) (0 2) 2810 PRINT "PHOTON TUBES ARE NOT OPERATIONAL"
  Origs: 2800:auto
  Dests: 2820:auto
G(3790) F(I) (0 3) 2820 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2810:auto
  Dests: 1270:goto
G(3790) F(I) (1 4) 2830 IF P > 0 THEN 2860
  Origs: 2800:ifthen
  Dests: 2840:auto, 2860:ifthen
G(3790) F(I) (0 2) 2840 PRINT "ALL PHOTON TORPEDOES EXPENDED"
  Origs: 2830:auto
  Dests: 2850:auto
G(3790) F(I) (0 3) 2850 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2840:auto
  Dests: 1270:goto
G(3790) F(I) (1 2) 2860 INPUT "TORPEDO COURSE (1-9):"; C1
  Origs: 2830:ifthen, 2890:ifthen
  Dests: 2880:auto
G(3790) F(I) (1 5) 2880 IF C1 < 0 THEN 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2860:auto
  Dests: 1270:ifthen, 2890:auto
G(3790) F(I) (1 8) 2890 IF C1 < 1 OR C1 > 9 THEN 2860
     WARNING: Branch to line before GOSUB start
  Origs: 2880:auto
  Dests: 2860:ifthen, 2900:auto
G(3790) F(I) (0 10) 2900 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 2890:auto
  Dests: 2910:auto
G(3790) F(I) (0 10) 2910 X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
  Origs: 2900:auto
  Dests: 2920:auto
G(3790) F(I) (0 3) 2920 X = S1
G(3790) F(I) (0 3)      Y = S2
G(3790) F(I) (0 4)      P = P - 1
  Origs: 2910:auto
  Dests: 2950:auto
G(3790) F(I) (0 2) 2950 PRINT "TORPEDO TRACK:"
  Origs: 2920:auto
  Dests: 2960:auto
G(3790) F(I) (0 4) 2960 X = X + X1
G(3790) F(I) (0 4)      Y = Y + X2
  Origs: 2950:auto, 3060:goto
  Dests: 2980:auto
G(3790) F(I) (1 13) 2980 IF X < 1 OR X >= 9 OR Y < 1 OR Y >= 9 THEN 3420
  Origs: 2960:auto
  Dests: 2990:auto, 3420:ifthen
G(3790) F(I) (0 5) 2990 PRINT "               " X "." Y
  Origs: 2980:auto
  Dests: 3010:auto
G(3790) F(I) (0 3) 3010 A$ = "   "
G(3790) F(I) (0 3)      Z1 = X
G(3790) F(I) (0 3)      Z2 = Y
  Origs: 2990:auto
  Dests: 3040:auto
G(3790) F(I) (0 2) 3040 GOSUB 5680
  Origs: 3010:auto
  Dests: 3050:auto, 5690:gosub
G(3790) F(I) (1 4) 3050 IF Z3 = 0 THEN 3220
  Origs: 3040:auto
  Dests: 3060:auto, 3220:ifthen
G(3790) F(I) (0 3) 3060 GOTO 2960
     WARNING: Branch to line before GOSUB start
  Origs: 3050:auto
  Dests: 2960:goto
(0 3) 3070 A$ = "***"
(0 3)      Z1 = X
(0 3)      Z2 = Y
  Origs: 
  Dests: 3100:auto
(0 2) 3100 GOSUB 5680
  Origs: 3070:auto
  Dests: 3110:auto, 5690:gosub
(1 4) 3110 IF Z3 = 0 THEN 3220
  Origs: 3100:auto
  Dests: 3120:auto, 3220:ifthen
(0 2) 3120 PRINT "*** KLINGON DESTROYED ***"
  Origs: 3110:auto
  Dests: 3130:auto
G(3790) F(I) (0 4) 3130 K3 = K3 - 1
G(3790) F(I) (0 4)      K9 = K9 - 1
  Origs: 3120:auto, 5030:ifthen
  Dests: 3150:auto
G(3790) F(I) (1 4) 3150 IF K9 <= 8 THEN 4040
  Origs: 3130:auto, 5060:ifthen
  Dests: 3160:auto, 4040:ifthen
G(3790) F(I,I) (1 3) 3160 FOR I = 1 TO 3
G(3790) F(I,I) (1 5)      IF INT(X) = K(I, 1) THEN 3190
  Origs: 3150:auto
  Dests: 3180:auto, 3190:fornext, 3190:ifthen
G(3790) F(I) (1 5) 3180 IF INT(Y) <> K(I, 2) THEN 3200
  Origs: 3160:auto
  Dests: 3190:auto, 3200:ifthen
G(3790) F(I) (0 1) 3190 NEXT I
  Origs: 3160:fornext, 3160:ifthen, 3180:auto
  Dests: 3200:auto
G(3790) F(I) (0 3) 3200 K(I, 3) = 0
G(3790) F(I) (0 2)      GOTO 3360
  Origs: 3180:ifthen, 3190:auto
  Dests: 3360:goto
G(3790) F(I) (0 3) 3220 A$ = " * "
G(3790) F(I) (0 3)      Z1 = X
G(3790) F(I) (0 3)      Z2 = Y
  Origs: 3050:ifthen, 3110:ifthen
  Dests: 3230:auto
G(3790) F(I) (0 2) 3230 GOSUB 5680
  Origs: 3220:auto
  Dests: 3240:auto, 5690:gosub
G(3790) F(I) (1 4) 3240 IF Z3 = 0 THEN 3290
  Origs: 3230:auto
  Dests: 3270:auto, 3290:ifthen
G(3790) F(I) (0 2) 3270 PRINT "YOU CAN'T DESTROY STARS, SILLY"
  Origs: 3240:auto
  Dests: 3280:auto
G(3790) F(I) (0 2) 3280 GOTO 3420
  Origs: 3270:auto
  Dests: 3420:goto
G(3790) F(I) (0 3) 3290 A$ = ">1<"
G(3790) F(I) (0 3)      Z1 = X
G(3790) F(I) (0 3)      Z2 = Y
  Origs: 3240:ifthen
  Dests: 3320:auto
G(3790) F(I) (0 2) 3320 GOSUB 5660
  Origs: 3290:auto
  Dests: 3330:auto, 5660:gosub
G(3790) F(I) (1 5) 3330 IF Z3 = 0 THEN 2690
     WARNING: Branch to line before GOSUB start
  Origs: 3320:auto
  Dests: 2690:ifthen, 3340:auto
G(3790) F(I) (0 2) 3340 PRINT "*** STAR BASE DESTROYED *** .......CONGRATULATIONS"
  Origs: 3330:auto
  Dests: 3350:auto
G(3790) F(I) (0 4) 3350 B3 = B3 - 1
  Origs: 3340:auto
  Dests: 3360:auto
G(3790) F(I) (0 3) 3360 A$ = "   "
G(3790) F(I) (0 3)      Z1 = X
G(3790) F(I) (0 3)      Z2 = Y
  Origs: 3200:goto, 3350:auto
  Dests: 3390:auto
G(3790) F(I) (0 2) 3390 GOSUB 5510
  Origs: 3360:auto
  Dests: 3400:auto, 5520:gosub
G(3790) F(I) (0 8) 3400 G(Q1, Q2) = K3 * 100 + B3 * 10 + S3
  Origs: 3390:auto
  Dests: 3410:auto
G(3790) F(I) (0 2) 3410 GOTO 3430
  Origs: 3400:auto
  Dests: 3430:goto
G(3790) F(I) (0 2) 3420 PRINT "TORPEDO MISSED"
  Origs: 2980:ifthen, 3280:goto
  Dests: 3430:auto
G(3790) F(I) (0 2) 3430 GOSUB 3790
  Origs: 3410:goto, 3420:auto
  Dests: 3440:auto, 3790:gosub
G(3790) F(I) (1 4) 3440 IF E < 0 THEN 4000
  Origs: 3430:auto
  Dests: 3450:auto, 4000:ifthen
G(3790) F(I) (0 3) 3450 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3440:auto
  Dests: 1270:goto
(0 1) 3451 REM *** SHIELD CONTROL CODE BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I) (1 4) 3460 IF D(7) >= 0 THEN 3490
  Origs: 1295:ifthen
  Dests: 3470:auto, 3490:ifthen
G(3790) F(I) (0 2) 3470 PRINT "SHIELD CONTROL IS NON-OPERATIONAL"
  Origs: 3460:auto
  Dests: 3480:auto
G(3790) F(I) (0 3) 3480 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3470:auto
  Dests: 1270:goto
G(3790) F(I) (0 4) 3490 PRINT "ENERGY AVAILABLE =" F * S;
  Origs: 3460:ifthen, 3520:ifthen
  Dests: 3500:auto
G(3790) F(I) (1 2) 3500 INPUT "   NUMBER OF UNTTS TO SHIELDS:"; X
  Origs: 3490:auto
  Dests: 3510:auto
G(3790) F(I) (1 5) 3510 IF X <= 0 THEN 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3500:auto
  Dests: 1270:ifthen, 3520:auto
G(3790) F(I) (1 7) 3520 IF E + S - X < 0 THEN 3490
     WARNING: Branch to line before GOSUB start
  Origs: 3510:auto
  Dests: 3490:ifthen, 3530:auto
G(3790) F(I) (0 5) 3530 F = E + S - X
G(3790) F(I) (0 3)      S = X
  Origs: 3520:auto
  Dests: 3550:auto
G(3790) F(I) (0 3) 3550 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3530:auto
  Dests: 1270:goto
(0 1) 3551 REM *** DAMAGE CONTROL RFPORT CODE BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I) (1 4) 3560 IF D(6) > 0 THEN 3590
  Origs: 1296:ifthen, 4870:goto
  Dests: 3570:auto, 3590:ifthen
G(3790) F(I) (0 2) 3570 PRINT "DAMAGE CONTROL REPORT IS NOT AVAILABLE"
  Origs: 3560:auto
  Dests: 3580:auto
G(3790) F(I) (0 3) 3580 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3570:auto
  Dests: 1270:goto
G(3790) F(I) (0 2) 3590 PRINT
G(3790) F(I) (0 2)      PRINT "DEVICE STATE OF REPAIR"
  Origs: 3560:ifthen
  Dests: 3610:auto
G(3790) F(I,R1) (1 3) 3610 FOR R1 = 1 TO 8
  Origs: 3590:auto
  Dests: 3620:fornext, 3640:fornext
G(3790) F(I,R1) (0 2) 3620 GOSUB 5610
  Origs: 3610:fornext
  Dests: 3630:auto, 5620:gosub
G(3790) F(I,R1) (0 2) 3630 PRINT D(R1)
  Origs: 3620:auto
  Dests: 3640:auto
G(3790) F(I,R1) (0 1) 3640 NEXT R1
G(3790) F(I) (0 2)      PRINT
  Origs: 3610:fornext, 3630:auto
  Dests: 3660:auto
G(3790) F(I) (0 3) 3660 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3640:auto
  Dests: 1270:goto
G(3790) F(I) (0 2) 3670 PRINT "SHORT RANGE SENSORS REPORT NO KLINGONS IN THIS QUADRANT"
  Origs: 2530:ifthen
  Dests: 3680:auto
G(3790) F(I) (0 3) 3680 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3670:auto
  Dests: 1270:goto
G(3690) (0 6) 3690 PRINT "KLINGON AT SECTOR " K(I, 1) "," K(I, 2) "DESTROYED ***"
  Origs: 2750:gosub
  Dests: 3710:auto
G(3690) (0 4) 3710 K3 = K3 - 1
G(3690) (0 4)      K9 = K9 - 1
G(3690) (0 3)      A$ = "   "
G(3690) (0 3)      Z1 = K(I, 1)
G(3690) (0 3)      Z2 = K(I, 2)
  Origs: 3690:auto
  Dests: 3760:auto
G(3690) (0 2) 3760 GOSUB 5510
  Origs: 3710:auto
  Dests: 3770:auto, 5520:gosub
G(3690) (0 8) 3770 G(Q1, Q2) = K3 * 100 + B3 * 10 + S3
  Origs: 3760:auto
  Dests: 3780:auto
G(3690) (0 1) 3780 RETURN
  Origs: 3770:auto
  Dests: 
G(3790) (1 4) 3790 IF C$ <> "DOCKED" THEN 3820
  Origs: 1520:gosub, 2650:gosub, 3430:gosub, 3950:gosub
  Dests: 3800:auto, 3820:ifthen
G(3790) (0 2) 3800 PRINT "STAR BASE SHIELDS PROTECT THE ENTERPISE"
  Origs: 3790:auto
  Dests: 3810:auto
G(3790) (0 1) 3810 RETURN
  Origs: 3800:auto
  Dests: 
G(3790) (1 4) 3820 IF K3 <= 0 THEN 3910
  Origs: 3790:ifthen
  Dests: 3830:auto, 3910:ifthen
G(3790) F(I) (1 3) 3830 FOR I = 1 TO 3
G(3790) F(I) (1 4)      IF K(I, 3) <= 0 THEN 3900
  Origs: 3820:auto
  Dests: 3850:auto, 3900:fornext, 3900:ifthen
G(3790) F(I) (0 4) 3850 H = INT((K(I, 3) / FND(0)) * (2 + RND(1)))
G(3790) F(I) (0 4)      S = S - H
  Origs: 3830:auto
  Dests: 3870:auto
G(3790) F(I) (0 6) 3870 PRINT H " UNIT HIT ON ENTERPRISE AT SECTOR " K(I, 1) "," K(I, 2);
  Origs: 3850:auto
  Dests: 3871:auto
G(3790) F(I) (0 4) 3871 PRINT "     (" S " LEFT)"
  Origs: 3870:auto
  Dests: 3890:auto
G(3790) F(I) (1 4) 3890 IF S < 0 THEN 4000
  Origs: 3871:auto
  Dests: 3900:auto, 4000:ifthen
G(3790) F(I) (0 1) 3900 NEXT I
  Origs: 3830:fornext, 3830:ifthen, 3890:auto
  Dests: 3910:auto
G(3790) (0 1) 3910 RETURN
  Origs: 3820:ifthen, 3900:auto
  Dests: 
(0 2) 3920 PRINT "THE ENTERPRISE IS DFAD IN SPACE. IF YOU SURVIVE ALL IMPENDING"
  Origs: 1570:ifthen
  Dests: 3930:auto
(0 2) 3930 PRINT "ATTACKS YOU WILL RE DEMOTED TO THE RANK OF PRIVATE"
  Origs: 3920:auto
  Dests: 3940:auto
(1 4) 3940 IF K3 <= 0 THEN 4020
  Origs: 3930:auto, 3960:goto
  Dests: 3950:auto, 4020:ifthen
(0 3) 3950 GOSUB 3790
  Origs: 3940:auto
  Dests: 3790:gosub, 3960:auto
(0 3) 3960 GOTO 3940
  Origs: 3950:auto
  Dests: 3940:goto
G(3790) F(I) (0 2) 3970 PRINT
G(3790) F(I) (0 3)      PRINT "IT IS STARDATE" T
  Origs: 2150:ifthen, 2310:ifthen
  Dests: 3990:auto
G(3790) F(I) (0 2) 3990 GOTO 4020
  Origs: 3970:auto
  Dests: 4020:goto
(0 1) 3991 REM *** NO ENERGY LEFT
  Origs: 
  Dests: 
G(3790) F(I) (0 2) 4000 PRINT
G(3790) F(I) (0 2)      PRINT "THE ENTERPRISE HAS BEEN DESTROYED. THF FEOERATION WILL BE CONQUERED"
  Origs: 1540:ifthen, 2780:ifthen, 3440:ifthen, 3890:ifthen
  Dests: 4020:auto
G(3790) F(I) (0 4) 4020 PRINT "THERE ARE STILL " K9 " KLINGON BATTLE CRUISERS"
  Origs: 3940:ifthen, 3990:goto, 4000:auto
  Dests: 4030:auto
G(3790) F(I) (0 2) 4030 PRINT
G(3790) F(I) (0 2)      PRINT
G(3790) F(I) (0 2)      PRINT
G(3790) F(I) (0 2)      PRINT "YOU GET ANOTHER CHANCE..."
G(3790) F(I) (0 3)      GOTO 230
     WARNING: Branch to line before GOSUB start
  Origs: 4020:auto
  Dests: 240:goto
G(3790) F(I) (0 2) 4040 PRINT
G(3790) F(I) (0 2)      PRINT "THF LAST KLINGON BATTLE CRUISER IN THE GALAXY HAS BEEN DESTROYED"
  Origs: 2760:ifthen, 3150:ifthen
  Dests: 4050:auto
G(3790) F(I) (0 2) 4050 PRINT "THE FEDERATION HAS BEEN SAVED!!!!!"
G(3790) F(I) (0 2)      PRINT
  Origs: 4040:auto
  Dests: 4075:auto
G(3790) F(I) (0 7) 4075 E5 = ((K7 / (T - T0)) * 1000)
  Origs: 4050:auto
  Dests: 4080:auto
G(3790) F(I) (0 3) 4080 PRINT "YOUR EFFICIENCY RATING =" E5
  Origs: 4075:auto
  Dests: 4100:auto
G(3790) F(I) (0 6) 4100 PRINT "YOUR ACTUAL TIME OF MISSION =" INT(TIME(0) - T7) / 60; " MINUTES"
  Origs: 4080:auto
  Dests: 4105:auto
G(3790) F(I) (0 2) 4105 PRINT
G(3790) F(I) (0 2)      PRINT
G(3790) F(I) (0 2)      PRINT
  Origs: 4100:auto
  Dests: 4106:auto
G(3790) F(I) (1 2) 4106 INPUT "DO YOU WANT TO TRY AGAIN"; R$
  Origs: 4105:auto
  Dests: 4107:auto
G(3790) F(I) (1 5) 4107 IF R$ = "YES" THEN 230
     WARNING: Branch to line before GOSUB start
  Origs: 4106:auto
  Dests: 240:ifthen, 4110:auto
G(3790) F(I) (0 2) 4110 GOTO 6510
  Origs: 4107:auto
  Dests: 6510:goto
(0 1) 4111 REM *** SHORT RANGE SENSOR SCAN AND STARTING POINT CODE
  Origs: 
  Dests: 
G(4120) F(I) (1 5) 4120 FOR I = S1 - 1 TO S1 + 1
  Origs: 1260:gosub
  Dests: 4130:fornext, 4210:fornext
G(4120) F(I,J) (1 5) 4130 FOR J = S2 - 1 TO S2 + 1
  Origs: 4120:fornext
  Dests: 4140:fornext, 4200:fornext
G(4120) F(I,J) (1 13) 4140 IF I < 1 OR I > 8 OR J < 1 OR J > 8 THEN 4200
  Origs: 4130:fornext
  Dests: 4150:auto, 4200:ifthen
G(4120) F(I,J) (0 3) 4150 A$ = ">1<"
G(4120) F(I,J) (0 3)      Z1 = I
G(4120) F(I,J) (0 3)      Z2 = J
  Origs: 4140:auto
  Dests: 4180:auto
G(4120) F(I,J) (0 2) 4180 GOSUB 5680
  Origs: 4150:auto
  Dests: 4190:auto, 5690:gosub
G(4120) F(I,J) (1 4) 4190 IF Z3 = 1 THEN 4240
  Origs: 4180:auto
  Dests: 4200:auto, 4240:ifthen
G(4120) F(I,J) (0 1) 4200 NEXT J
  Origs: 4130:fornext, 4140:ifthen, 4190:auto
  Dests: 4210:auto
G(4120) F(I) (0 1) 4210 NEXT I
  Origs: 4120:fornext, 4200:auto
  Dests: 4220:auto
G(4120) (0 3) 4220 D0 = 0
G(4120) (0 2)      GOTO 4310
  Origs: 4210:auto
  Dests: 4310:goto
G(4120) F(I,J) (0 3) 4240 D0 = 1
G(4120) F(I,J) (0 3)      C$ = "DOCKED"
G(4120) F(I,J) (0 3)      E = 3000
G(4120) F(I,J) (0 3)      P = 10
  Origs: 4190:ifthen
  Dests: 4280:auto
G(4120) F(I,J) (0 2) 4280 PRINT "SHIELDS DROPPED FOR DOCKING PURPOSES"
  Origs: 4240:auto
  Dests: 4290:auto
G(4120) F(I,J) (0 3) 4290 S = 0
G(4120) F(I,J) (0 2)      GOTO 4380
  Origs: 4280:auto
  Dests: 4380:goto
G(4120) (1 4) 4310 IF K3 > 0 THEN 4350
  Origs: 4220:goto
  Dests: 4320:auto, 4350:ifthen
G(4120) (1 6) 4320 IF E < E0 * .1 THEN 4370
  Origs: 4310:auto
  Dests: 4330:auto, 4370:ifthen
G(4120) (0 3) 4330 C$ = "GREEN"
  Origs: 4320:auto
  Dests: 4340:auto
G(4120) (0 2) 4340 GOTO 4380
  Origs: 4330:auto
  Dests: 4380:goto
G(4120) (0 3) 4350 C$ = "RED"
G(4120) (0 2)      GOTO 4380
  Origs: 4310:ifthen
  Dests: 4380:goto
G(4120) (0 3) 4370 C$ = "YELLOW"
  Origs: 4320:ifthen
  Dests: 4380:auto
G(4120) F(I,J) (1 4) 4380 IF D(2) >= 0 THEN 4430
  Origs: 4290:goto, 4340:goto, 4350:goto, 4370:auto
  Dests: 4390:auto, 4430:ifthen
G(4120) F(I,J) (0 2) 4390 PRINT
G(4120) F(I,J) (0 2)      PRINT "*** SHORT RANGE SENSORS ARE OUT ***"
G(4120) F(I,J) (0 2)      PRINT
  Origs: 4380:auto
  Dests: 4420:auto
G(4120) F(I,J) (0 2) 4420 GOTO 4530
  Origs: 4390:auto
  Dests: 4530:goto
G(4120) F(I,J) (0 3) 4430 O1$ = "----------------------------"
  Origs: 4380:ifthen
  Dests: 4435:auto
G(4120) F(I,J) (0 2) 4435 PRINT O1$
  Origs: 4430:auto
  Dests: 4440:auto
G(4120) F(I,J) (0 3) 4440 O2$ = " \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"
  Origs: 4435:auto
  Dests: 4445:auto
G(4120) F(I,J) (0 19) 4445 PRINT USING O2$, MID(Q$, 1, 3), MID(Q$, 4, 3), MID(Q$, 7, 3), MID(Q$, 10, 3), MID(Q$, 13, 3), MID(Q$, 16, 3), MID(Q$, 19, 3), MID(Q$, 22, 3)
  Origs: 4440:auto
  Dests: 4450:auto
G(4120) F(I,J) (0 4) 4450 O3$ = O2$ + "        STARDATE        #####"
  Origs: 4445:auto
  Dests: 4455:auto
G(4120) F(I,J) (0 20) 4455 PRINT USING O3$, MID(Q$, 25, 3), MID(Q$, 28, 3), MID(Q$, 31, 3), MID(Q$, 34, 3), MID(Q$, 37, 3), MID(Q$, 40, 3), MID(Q$, 43, 3), MID(Q$, 46, 3), T
  Origs: 4450:auto
  Dests: 4460:auto
G(4120) F(I,J) (0 4) 4460 O4$ = O2$ + "        CONDITION      \    \"
  Origs: 4455:auto
  Dests: 4465:auto
G(4120) F(I,J) (0 20) 4465 PRINT USING O4$, MID(Q$, 49, 3), MID(Q$, 52, 3), MID(Q$, 55, 3), MID(Q$, 58, 3), MID(Q$, 61, 3), MID(Q$, 64, 3), MID(Q$, 67, 3), MID(Q$, 70, 3), C$
  Origs: 4460:auto
  Dests: 4470:auto
G(4120) F(I,J) (0 4) 4470 O5$ = O2$ + "        QUADRANT          # #"
  Origs: 4465:auto
  Dests: 4475:auto
G(4120) F(I,J) (0 21) 4475 PRINT USING O5$, MID(R$, 1, 3), MID(R$, 4, 3), MID(R$, 7, 3), MID(R$, 10, 3), MID(R$, 13, 3), MID(R$, 16, 3), MID(R$, 19, 3), MID(R$, 22, 3), Q1, Q2
  Origs: 4470:auto
  Dests: 4480:auto
G(4120) F(I,J) (0 4) 4480 O6$ = O2$ + "        SECTOR            # #"
  Origs: 4475:auto
  Dests: 4485:auto
G(4120) F(I,J) (0 21) 4485 PRINT USING O6$, MID(R$, 25, 3), MID(R$, 28, 3), MID(R$, 31, 3), MID(R$, 34, 3), MID(R$, 37, 3), MID(R$, 40, 3), MID(R$, 43, 3), MID(R$, 46, 3), S1, S2
  Origs: 4480:auto
  Dests: 4490:auto
G(4120) F(I,J) (0 4) 4490 O7$ = O2$ + "        TOTAL ENERGY   ######"
  Origs: 4485:auto
  Dests: 4495:auto
G(4120) F(I,J) (0 20) 4495 PRINT USING O7$, MID(R$, 49, 3), MID(R$, 52, 3), MID(R$, 55, 3), MID(R$, 58, 3), MID(R$, 61, 3), MID(R$, 64, 3), MID(R$, 67, 3), MID(R$, 70, 3), E
  Origs: 4490:auto
  Dests: 4500:auto
G(4120) F(I,J) (0 4) 4500 O8$ = O2$ + "        PHOTON TORPEDOES  ###"
  Origs: 4495:auto
  Dests: 4505:auto
G(4120) F(I,J) (0 20) 4505 PRINT USING O8$, MID(S$, 1, 3), MID(S$, 4, 3), MID(S$, 7, 3), MID(S$, 10, 3), MID(S$, 13, 3), MID(S$, 16, 3), MID(S$, 19, 3), MID(S$, 22, 3), P
  Origs: 4500:auto
  Dests: 4510:auto
G(4120) F(I,J) (0 4) 4510 O9$ = O2$ + "        SHIELDS        ######"
  Origs: 4505:auto
  Dests: 4515:auto
G(4120) F(I,J) (0 20) 4515 PRINT USING O9$, MID(S$, 25, 3), MID(S$, 28, 3), MID(S$, 31, 3), MID(S$, 34, 3), MID(S$, 37, 3), MID(S$, 40, 3), MID(S$, 43, 3), MID(S$, 46, 3), S
  Origs: 4510:auto
  Dests: 4520:auto
G(4120) F(I,J) (0 2) 4520 PRINT O1$
  Origs: 4515:auto
  Dests: 4530:auto
G(4120) F(I,J) (0 1) 4530 RETURN
  Origs: 4420:goto, 4520:auto
  Dests: 
(0 1) 4620 REM *** LIBRARY COMPUTER CODE BEGINS HERE"
  Origs: 
  Dests: 
G(3790) F(I) (1 4) 4630 IF D(8) >= 0 THEN 4660
  Origs: 1297:ifthen
  Dests: 4640:auto, 4660:ifthen
G(3790) F(I) (0 2) 4640 PRINT "COMPUTER DISABLED"
G(3790) F(I) (0 3)      GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 4630:auto
  Dests: 1270:goto
G(3790) F(I) (1 2) 4660 INPUT "CDMPUTER ACTIVE AND AWAITING COMMAND:"; A
  Origs: 4630:ifthen, 4730:goto
  Dests: 4680:auto
G(3790) F(I) (1 4) 4680 IF A = 0 GOTO 4740
  Origs: 4660:auto
  Dests: 4681:auto, 4740:ifthen
G(3790) F(I) (1 4) 4681 IF A = 1 GOTO 4830
  Origs: 4680:auto
  Dests: 4682:auto, 4830:ifthen
G(3790) F(I) (1 4) 4682 IF A = 2 GOTO 4880
  Origs: 4681:auto
  Dests: 4690:auto, 4880:ifthen
G(3790) F(I) (0 2) 4690 PRINT "FUNCTIONS AVAILABLE FROM COMPUTER"
  Origs: 4682:auto
  Dests: 4700:auto
G(3790) F(I) (0 2) 4700 PRINT "   0 = CUMULATIVE GALACTIC RECORD"
  Origs: 4690:auto
  Dests: 4710:auto
G(3790) F(I) (0 2) 4710 PRINT "   1 = STATUS REPORT"
  Origs: 4700:auto
  Dests: 4720:auto
G(3790) F(I) (0 2) 4720 PRINT "   2 = PHOTON TORPEDO DATA"
  Origs: 4710:auto
  Dests: 4730:auto
G(3790) F(I) (0 3) 4730 GOTO 4660
  Origs: 4720:auto
  Dests: 4660:goto
(0 1) 4731 REM *** CUMULATIVE GALACTIC RECORD CODE BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I) (0 5) 4740 PRINT "COMPUTER RECORD OF GALAXY FOR QUADRANT " Q1 "," Q2
  Origs: 4680:ifthen
  Dests: 4760:auto
G(3790) F(I) (0 2) 4760 PRINT "     1     2     3     4     5     6     7     8"
  Origs: 4740:auto
  Dests: 4770:auto
G(3790) F(I) (0 2) 4770 PRINT "   ----- ----- ----- ----- ----- ----- ----- -----"
  Origs: 4760:auto
  Dests: 4780:auto
G(3790) F(I,I) (1 3) 4780 FOR I = 1 TO 8
  Origs: 4770:auto
  Dests: 4790:fornext, 4810:fornext
G(3790) F(I,I) (0 3) 4790 N1$ = "#   ###   ###   ###   ###   ###   ###   ###   ###"
  Origs: 4780:fornext
  Dests: 4795:auto
G(3790) F(I) (0 12) 4795 PRINT USING N1$, I, Z(I, 1), Z(I, 2), Z(I, 3), Z(I, 4), Z(I, 5), Z(I, 6), Z(I, 7), Z(I, 8)
  Origs: 4790:auto
  Dests: 4800:auto
G(3790) F(I) (0 2) 4800 PRINT "   ----- ----- ----- ----- ----- ----- ----- -----"
  Origs: 4795:auto
  Dests: 4810:auto
G(3790) F(I) (0 1) 4810 NEXT I
  Origs: 4780:fornext, 4800:auto
  Dests: 4820:auto
G(3790) F(I) (0 3) 4820 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 4810:auto
  Dests: 1270:goto
(0 1) 4821 REM *** STATUS REPORT CODE BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I) (0 2) 4830 PRINT "   STATUS REPORT"
  Origs: 4681:ifthen
  Dests: 4840:auto
G(3790) F(I) (0 3) 4840 PRINT "NUMBER OF KLINGONS LEFT =" K9
  Origs: 4830:auto
  Dests: 4850:auto
G(3790) F(I) (0 5) 4850 V5 = (T0 + T9) - T
  Origs: 4840:auto
  Dests: 4851:auto
G(3790) F(I) (0 3) 4851 PRINT "NUMRER OF STARDATES LFFT ="; V5
  Origs: 4850:auto
  Dests: 4860:auto
G(3790) F(I) (0 3) 4860 PRINT "NUMBER OF STARBASES LEFT =" B9
  Origs: 4851:auto
  Dests: 4870:auto
G(3790) F(I) (0 3) 4870 GOTO 3560
     WARNING: Branch to line before GOSUB start
  Origs: 4860:auto
  Dests: 3560:goto
G(3790) F(I) (0 2) 4880 PRINT
G(3790) F(I) (0 3)      H8 = 0
  Origs: 4682:ifthen
  Dests: 4900:auto
(0 1) 4881 REM *** PHOTON TORPEDO DATA CODE BEGINS HERE
  Origs: 
  Dests: 
G(3790) F(I,I) (1 3) 4900 FOR I = 1 TO 3
  Origs: 4880:auto
  Dests: 4910:fornext, 5260:fornext
G(3790) F(I,I) (1 4) 4910 IF K(I, 3) <= 0 THEN 5260
  Origs: 4900:fornext
  Dests: 4920:auto, 5260:ifthen
G(3790) F(I) (0 3) 4920 C1 = S1
G(3790) F(I) (0 3)      A = S2
G(3790) F(I) (0 3)      W1 = K(I, 1)
G(3790) F(I) (0 3)      X = K(I, 2)
  Origs: 4910:auto
  Dests: 4960:auto
G(3790) F(I) (0 2) 4960 GOTO 5010
  Origs: 4920:auto
  Dests: 5010:goto
G(3790) F(I) (0 10) 4970 PRINT "YOU ARE AT QUADRANT ( " Q1 "," Q2 " ) SECTOR ( " S1 "," S2 " )"
  Origs: 5300:ifthen
  Dests: 4990:auto
G(3790) F(I) (4 5) 4990 INPUT "SHIP ANO TARGET COORDINATES ARE:"; C1, A, W1, X
  Origs: 4970:auto
  Dests: 5010:auto
G(3790) F(I) (0 4) 5010 X = X - A
G(3790) F(I) (0 4)      A = C1 - W1
  Origs: 4960:goto, 4990:auto
  Dests: 5030:auto
G(3790) F(I) (1 5) 5030 IF X < 0 THEN 3130
     WARNING: Branch to line before GOSUB start
  Origs: 5010:auto
  Dests: 3130:ifthen, 5031:auto
G(3790) F(I) (1 4) 5031 IF A < 0 THEN 5190
  Origs: 5030:auto
  Dests: 5050:auto, 5190:ifthen
G(3790) F(I) (1 4) 5050 IF X > 0 THEN 5070
  Origs: 5031:auto
  Dests: 5060:auto, 5070:ifthen
G(3790) F(I) (1 5) 5060 IF A = 0 THEN 3150
     WARNING: Branch to line before GOSUB start
  Origs: 5050:auto
  Dests: 3150:ifthen, 5070:auto
G(3790) F(I) (0 3) 5070 C1 = 1
  Origs: 5050:ifthen, 5060:auto
  Dests: 5080:auto
G(3790) F(I) (1 6) 5080 IF ABS(A) <= ABS(X) THEN 5110
  Origs: 5070:auto, 5150:goto
  Dests: 5085:auto, 5110:ifthen
G(3790) F(I) (0 12) 5085 V5 = C1 + (((ABS(A) - ABS(X)) + ABS(A)) / ABS(A))
  Origs: 5080:auto
  Dests: 5090:auto
G(3790) F(I) (0 3) 5090 PRINT "DIRECTION =" V5
  Origs: 5085:auto
  Dests: 5100:auto
G(3790) F(I) (0 2) 5100 GOTO 5240
  Origs: 5090:auto
  Dests: 5240:goto
G(3790) F(I) (0 8) 5110 PRINT "DIRECTION =" C1 + (ABS(A) / ABS(X))
  Origs: 5080:ifthen
  Dests: 5120:auto
G(3790) F(I) (0 2) 5120 GOTO 5240
  Origs: 5110:auto
  Dests: 5240:goto
(1 4) 5130 IF A > 0 THEN 5170
  Origs: 
  Dests: 5140:auto, 5170:ifthen
(1 4) 5140 IF X = 0 THEN 5190
  Origs: 5130:auto
  Dests: 5150:auto, 5190:ifthen
(0 3) 5150 C1 = 5
(0 3)      GOTO 5080
  Origs: 5140:auto
  Dests: 5080:goto
(0 3) 5170 C1 = 3
(0 2)      GOTO 5200
  Origs: 5130:ifthen
  Dests: 5200:goto
G(3790) F(I) (0 3) 5190 C1 = 7
  Origs: 5031:ifthen, 5140:ifthen
  Dests: 5200:auto
G(3790) F(I) (1 6) 5200 IF ABS(A) >= ABS(X) THEN 5230
  Origs: 5170:goto, 5190:auto
  Dests: 5210:auto, 5230:ifthen
G(3790) F(I) (0 12) 5210 PRINT "DIRECTION =" C1 + (((ABS(X) - ABS(A)) + ABS(X)) / ABS(X))
  Origs: 5200:auto
  Dests: 5220:auto
G(3790) F(I) (0 2) 5220 GOTO 5240
  Origs: 5210:auto
  Dests: 5240:goto
G(3790) F(I) (0 8) 5230 PRINT "DIRECTION =" C1 + (ABS(X) / ABS(A))
  Origs: 5200:ifthen
  Dests: 5240:auto
G(3790) F(I) (0 4) 5240 PRINT "DISTANCE =" SQR(X ** 2 * A ** 2)
  Origs: 5100:goto, 5120:goto, 5220:goto, 5230:auto
  Dests: 5250:auto
G(3790) F(I) (1 4) 5250 IF H8 = 1 THEN 5320
  Origs: 5240:auto
  Dests: 5260:auto, 5320:ifthen
G(3790) F(I) (0 1) 5260 NEXT I
  Origs: 4900:fornext, 4910:ifthen, 5250:auto
  Dests: 5270:auto
G(3790) F(I) (0 3) 5270 H8 = 0
  Origs: 5260:auto
  Dests: 5280:auto
G(3790) F(I) (1 2) 5280 INPUT "DO YOU WANT TO USE THE CALCULATOR"; A$
  Origs: 5270:auto, 5310:ifthen
  Dests: 5300:auto
G(3790) F(I) (1 5) 5300 IF A$ = "YES" THEN 4970
  Origs: 5280:auto
  Dests: 4970:ifthen, 5310:auto
G(3790) F(I) (1 5) 5310 IF A$ <> "NO" THEN 5280
  Origs: 5300:auto
  Dests: 5280:ifthen, 5320:auto
G(3790) F(I) (0 3) 5320 GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 5250:ifthen, 5310:auto
  Dests: 1270:goto
(0 1) 5321 REM *** END OF. LIBRARY COMPUTER CODE
  Origs: 
  Dests: 
G(5380) (0 4) 5380 R1 = INT(RND(1) * 8 + 1)
G(5380) (0 4)      R2 = INT(RND(1) * 8 + 1)
G(5380) (0 3)      A$ = "   "
G(5380) (0 3)      Z1 = R1
G(5380) (0 3)      Z2 = R2
     WARNING: Inconsistent GOSUB origins
  Origs: 1030:gosub, 1130:gosub, 1200:gosub, 5440:ifthen
  Dests: 5430:auto
G(5380) (0 2) 5430 GOSUB 5680
  Origs: 5380:auto
  Dests: 5440:auto, 5690:gosub
G(5380) (1 5) 5440 IF Z3 = 0 THEN 5380
  Origs: 5430:auto
  Dests: 5380:ifthen, 5450:auto
G(5380) (0 1) 5450 RETURN
  Origs: 5440:auto
  Dests: 
(0 1) 5510 REM *** INSERTION IN STRING ARRAY FOR QUADRANT ***
  Origs: 
  Dests: 
G(5520) (0 8) 5520 S8 = Z1 * 24 + Z2 * 3 - 26
G(5520) (1 4)      IF S8 > 72 THEN 5560
  Origs: 1010:gosub, 1070:gosub, 1170:gosub, 1240:gosub, 1850:gosub, 2110:gosub, 3390:gosub, 3760:gosub
  Dests: 5540:auto, 5560:ifthen
G(5520) (0 7) 5540 Q$ = LEFT(Q$, S8 - 1) + A$ + RIGHT(Q$, S8 + 3)
  Origs: 5520:auto
  Dests: 5550:auto
G(5520) (0 2) 5550 GOTO 5600
  Origs: 5540:auto
  Dests: 5600:goto
G(5520) (1 4) 5560 IF S8 > 144 THEN 5590
  Origs: 5520:ifthen
  Dests: 5570:auto, 5590:ifthen
G(5520) (0 7) 5570 R$ = LEFT(R$, S8 - 73) + A$ + RIGHT(R$, S8 - 69)
  Origs: 5560:auto
  Dests: 5580:auto
G(5520) (0 2) 5580 GOTO 5600
  Origs: 5570:auto
  Dests: 5600:goto
G(5520) (0 7) 5590 S$ = LEFT(S$, S8 - 145) + A$ + RIGHT(S$, S8 - 141)
  Origs: 5560:ifthen
  Dests: 5600:auto
G(5520) (0 1) 5600 RETURN
  Origs: 5550:goto, 5580:goto, 5590:auto
  Dests: 
(0 1) 5610 REM *** PRINTS DEVICE NAME FROM ARRAY***
  Origs: 
  Dests: 
G(5620) (0 5) 5620 S8 = R1 * 12 - 11
G(5620) (1 4)      IF S8 > 72 THEN 5660
  Origs: 1710:gosub, 1780:gosub, 3620:gosub
  Dests: 5640:auto, 5660:ifthen
G(5620) (0 3) 5640 PRINT MID(D$, S8, 11),
G(5620) (0 2)      GOTO 5670
  Origs: 5620:auto
  Dests: 5670:goto
G(5620,5660) (0 3) 5660 PRINT MID(E$, S8 - 72, 11),
     WARNING: Inconsistent GOSUB origins
     WARNING: Multiple GOSUB entry points
  Origs: 3320:gosub, 5620:ifthen
  Dests: 5670:auto
G(5620,5660) (0 1) 5670 RETURN
     WARNING: Multiple GOSUB entry points
  Origs: 5640:goto, 5660:auto
  Dests: 
(0 1) 5680 REM ***STRING COMPARISON IN QUADRANT ARRAY*** 
  Origs: 
  Dests: 
G(5690) (0 8) 5690 S8 = Z1 * 24 + Z2 * 3 - 26
G(5690) (0 3)      Z3 = 0
G(5690) (1 4)      IF S8 > 72 THEN 5750
  Origs: 3040:gosub, 3100:gosub, 3230:gosub, 4180:gosub, 5430:gosub
  Dests: 5720:auto, 5750:ifthen
G(5690) (1 5) 5720 IF MID(Q$, S8, 3) <> A$ THEN 5810
  Origs: 5690:auto
  Dests: 5730:auto, 5810:ifthen
G(5690) (0 3) 5730 Z3 = 1
G(5690) (0 2)      GOTO 5810
  Origs: 5720:auto
  Dests: 5810:goto
G(5690) (1 4) 5750 IF S8 > 144 THEN 5790
  Origs: 5690:ifthen
  Dests: 5760:auto, 5790:ifthen
G(5690) (1 5) 5760 IF MID(R$, S8 - 72, 3) <> A$ THEN 5810
  Origs: 5750:auto
  Dests: 5770:auto, 5810:ifthen
G(5690) (0 3) 5770 Z3 = 1
G(5690) (0 2)      GOTO 5810
  Origs: 5760:auto
  Dests: 5810:goto
G(5690) (1 5) 5790 IF MID(S$, S8 - 144, 3) <> A$ THEN 5810
  Origs: 5750:ifthen
  Dests: 5800:auto, 5810:ifthen
G(5690) (0 3) 5800 Z3 = 1
  Origs: 5790:auto
  Dests: 5810:auto
G(5690) (0 1) 5810 RETURN
  Origs: 5720:ifthen, 5730:goto, 5760:ifthen, 5770:goto, 5790:ifthen, 5800:auto
  Dests: 
(0 2) 5820 & "     INSTRUCTIONS"
  Origs: 220:goto
  Dests: 5821:auto
(0 2) 5821 &
(0 2)      & "THE GALAXY IS DIVIDED INTO AN 8.8 QUADRANT GRID"
  Origs: 5820:auto
  Dests: 5822:auto
(0 2) 5822 & "WHICH IS IN TURN DIVIDED INTO AN 8.8 SECTOR GRID."
  Origs: 5821:auto
  Dests: 5823:auto
(0 2) 5823 &
(0 2)      & "THE CAST OF CHARACTERS IS AS FOLLOWS:"
  Origs: 5822:auto
  Dests: 5830:auto
(0 2) 5830 & "<*> = ENTERPRISE"
  Origs: 5823:auto
  Dests: 5840:auto
(0 2) 5840 & "+++ = KLINGON"
  Origs: 5830:auto
  Dests: 5850:auto
(0 2) 5850 & ">!< = STARRASE"
(0 2)      & " *  = STAR"
  Origs: 5840:auto
  Dests: 5870:auto
(0 2) 5870 & "COMMANO 0 = WARP ENGINE CONTROL:"
  Origs: 5850:auto
  Dests: 5880:auto
(0 2) 5880 & "  COURSE IS IN A CIRCULAR NUMERICAL       4  3  2"
  Origs: 5870:auto
  Dests: 5890:auto
(0 2) 5890 & "  VECTOR ARRANGEMENT AS SHOWN.             \ ^ /"
  Origs: 5880:auto
  Dests: 5900:auto
(0 2) 5900 & "  INTEGER AND REAL VALUE MAY BE             \^/"
  Origs: 5890:auto
  Dests: 5910:auto
(0 2) 5910 & "  USED. THEREFORE COURSE 1.5 IS          5 --- 1"
  Origs: 5900:auto
  Dests: 5920:auto
(0 2) 5920 & "  HALF WAY BETWEEN 1 AND 2.                 /^\"
  Origs: 5910:auto
  Dests: 5930:auto
(0 2) 5930 & "                                           / ^ \"
  Origs: 5920:auto
  Dests: 5940:auto
(0 2) 5940 & "  A VECTOR OF 9 IS UNDEFINED, BUT         6  7  8"
  Origs: 5930:auto
  Dests: 5950:auto
(0 2) 5950 & "  VALUES MAY APPROACH 9."
  Origs: 5940:auto
  Dests: 5960:auto
(0 2) 5960 & "                                          COURSE"
  Origs: 5950:auto
  Dests: 5970:auto
(0 2) 5970 & "  ONE WARP FACTOR IS THE SIZE OF"
  Origs: 5960:auto
  Dests: 5980:auto
(0 2) 5980 & "  ONE OUADRANT. THEREFORE TO GET"
  Origs: 5970:auto
  Dests: 5990:auto
(0 2) 5990 & "  FROM QUADRANT 6.5 TO 5.5 YOU WOULD"
  Origs: 5980:auto
  Dests: 6000:auto
(0 2) 6000 & "  USE COURSE 3, WARP FACTOR 1"
  Origs: 5990:auto
  Dests: 6005:auto
(0 2) 6005 &
  Origs: 6000:auto
  Dests: 6010:auto
(0 2) 6010 & "COMMAND 1 = SHORT RANGE SENSOR SCAN"
  Origs: 6005:auto
  Dests: 6020:auto
(0 2) 6020 & "  PRINT THE QUADRANT YOU ARE CURRENTLY IN, INCLUDING"
  Origs: 6010:auto
  Dests: 6030:auto
(0 2) 6030 & "  STARS. KLINGONS. STARBASE, AND THE ENTERPRISE, ALONG"
  Origs: 6020:auto
  Dests: 6040:auto
(0 2) 6040 & "  WITH OTHER PERTINATE INFORMATION."
  Origs: 6030:auto
  Dests: 6045:auto
(0 2) 6045 &
(0 2)      & "COMMAND 2 = LONG RANGE SENSOR SCAN"
  Origs: 6040:auto
  Dests: 6060:auto
(0 2) 6060 & "  SHOWS CONDITIONS IN SPACE FOR ONE QUADRANT ON EACH SIDE"
  Origs: 6045:auto
  Dests: 6070:auto
(0 2) 6070 & "  OF THE ENTERPRISE IN THE MIDDLE OF THE SCAN. THE SCAN"
  Origs: 6060:auto
  Dests: 6080:auto
(0 2) 6080 & "  IS CODED IN THE FORM XXX. WHERE THF UNITS DIGIT IS THE"
  Origs: 6070:auto
  Dests: 6090:auto
(0 2) 6090 & "  NUMBER OF STARS. THE TENS DIGIT TS THE NUMBER OF STAR-"
  Origs: 6080:auto
  Dests: 6100:auto
(0 2) 6100 & "  BASES. THE HUNDREDS DIGIT IS THE NUMBER OF KLINGONS."
  Origs: 6090:auto
  Dests: 6110:auto
(0 2) 6110 &
(0 2)      & "COMMAND 3 = PHASER CONTROL"
  Origs: 6100:auto
  Dests: 6120:auto
(0 2) 6120 & "  ALLOWS YOU TO DESTROY THE KLINGONS BY HITTING HIM WITH"
  Origs: 6110:auto
  Dests: 6130:auto
(0 2) 6130 & "  SUITABLY LARGE NUMBERS OF ENERGY UNITS. TO DEPLETE HIS"
  Origs: 6120:auto
  Dests: 6140:auto
(0 2) 6140 & "  SHIELD POWER. KEEP IN MIND THAT WHEN YOU SHOOT AT HIM,"
  Origs: 6130:auto
  Dests: 6150:auto
(0 2) 6150 & "  HE GONNA SHOOT AT YOU, TOO!"
  Origs: 6140:auto
  Dests: 6160:auto
(0 2) 6160 &
(0 2)      & "COMMAND 4 = PHOTON TORPEDO CONTROL"
  Origs: 6150:auto
  Dests: 6170:auto
(0 2) 6170 & "  COURSE IS THE SAME AS USED IN WARP ENGINE CONTROL"
  Origs: 6160:auto
  Dests: 6180:auto
(0 2) 6180 & "  IF YOU HIT THE KLINGON HE IS DESTROYED AND CANNOT FIRE"
  Origs: 6170:auto
  Dests: 6190:auto
(0 2) 6190 & "  BACK AT YOU. IF YOU MISS, YOU ARE SUBJECT TO HIS"
  Origs: 6180:auto
  Dests: 6200:auto
(0 2) 6200 & "  PHASER FIRE."
  Origs: 6190:auto
  Dests: 6210:auto
(0 2) 6210 &
(0 2)      & "  NOTE: THE LIBRARY COMPUTER (COMMAND 7) HAS AN OPTTQN"
  Origs: 6200:auto
  Dests: 6220:auto
(0 2) 6220 & " TO COMPUTE TORPEDO TRAJECTORY FOR YOU (OPTION 2)."
  Origs: 6210:auto
  Dests: 6230:auto
(0 2) 6230 & "COMMAND 5 = SHIELD CONTROL"
  Origs: 6220:auto
  Dests: 6240:auto
(0 2) 6240 & "  DEFINES NUMBER OF ENERGY UNITS TO BE ASSIGNED TO SHIELDS"
  Origs: 6230:auto
  Dests: 6250:auto
(0 2) 6250 & "  ENERGY IS TAKEN FROM TOTAL SHIP'S ENERGY."
  Origs: 6240:auto
  Dests: 6251:auto
(0 2) 6251 & "  NOTE THAT TOTAL ENERGY INCLUDES SHIELD ENERGY."
  Origs: 6250:auto
  Dests: 6260:auto
(0 2) 6260 &
(0 2)      & "COMMAND 6 = DAMAGE CONTROL REPORT"
  Origs: 6251:auto
  Dests: 6270:auto
(0 2) 6270 & "  GIVES STATE OF REPAIRS OF ALL DEVICES. A STATE OF RFPAIR"
  Origs: 6260:auto
  Dests: 6280:auto
(0 2) 6280 & "  LESS THAN ZERO SHOWS THAT THE DEVICE IS TEMPORARALY"
  Origs: 6270:auto
  Dests: 6290:auto
(0 2) 6290 & "  DAMAGED."
  Origs: 6280:auto
  Dests: 6300:auto
(0 2) 6300 &
(0 2)      & "COMMAND 7 = LIBRARY COMPUTER"
  Origs: 6290:auto
  Dests: 6310:auto
(0 2) 6310 & "  THE LIBRARY COMPUTER CONTAINS THREE OPTIONS:"
  Origs: 6300:auto
  Dests: 6320:auto
(0 2) 6320 & "    OPTION 0 = CUMULATIVE GALACTIC RECORD"
  Origs: 6310:auto
  Dests: 6330:auto
(0 2) 6330 & "      WHICH SHOWS COMPUTER MEMORY OF THE RESULTS"
  Origs: 6320:auto
  Dests: 6340:auto
(0 2) 6340 & "      OF ALL PREVIOUS LONG RANGE SENSOR SCANS"
  Origs: 6330:auto
  Dests: 6350:auto
(0 2) 6350 & "    OPTION 1 = STATUS REPORT"
  Origs: 6340:auto
  Dests: 6360:auto
(0 2) 6360 & "      WHICH SHOWS NUMBER OF KLINGONS, STARDATES,"
  Origs: 6350:auto
  Dests: 6370:auto
(0 2) 6370 & "      AND STARBASES LEFT."
  Origs: 6360:auto
  Dests: 6380:auto
(0 2) 6380 & "    OPTION 2 = PHOTON TORPEDO DATA"
  Origs: 6370:auto
  Dests: 6390:auto
(0 2) 6390 & "      GIVES TRAJECTORY AND DISTANCE BETWEEN THE"
  Origs: 6380:auto
  Dests: 6400:auto
(0 2) 6400 & "      ENTERPRISE AND ALL KLINGONS IN YOUR QUADRANT"
  Origs: 6390:auto
  Dests: 6500:auto
(0 3) 6500 GOTO 230
  Origs: 6400:auto
  Dests: 240:goto
G(3790) F(I) (0 1) 6510 END
     WARNING: Terminating statement in GOSUB
     WARNING: Terminating statement in FOR/NEXT
  Origs: 1298:ifthen, 4110:goto
  Dests: :stop

Unreachable code:

1510: IF K3 <= 0 THEN 1560
1520: GOSUB 3790
1530: IF K3 <= 0 THEN 1560
1540: IF S < 0 THEN 4000
1550: GOTO 1610
1560: IF E > 0 THEN 1610
1570: IF S < 1 THEN 3920
1580: PRINT "YOU HAVE" E " UNITS OF ENERGY"
1590: PRINT "SUGGEST YOU GET SOME FROM YOUR SHIELDS WHICH HAVE" S " UNITS LEFT"
1600: GOTO 1270
1610: FOR I = 1 TO 8
1610.1: IF D(I) > 0 THEN 1640
1630: D(I) = 1
1640: NEXT I
1650: IF RND(1) > .2 THEN 1810
1660: B1 = INT(RND(1) * 8 + 1)
1670: IF RND(1) >= .5 THEN 1750
1680: D(B1) = D(B1) - (RND(1) * 5 + 1)
1690: PRINT
1690.1: PRINT "DAMAGE CONTROL REPORT:";
1710: GOSUB 5610
1720: PRINT " DAMAGED"
1720.1: PRINT
1720.2: GOTO 1810
1750: D(B1) = D(B1) + (RND(1) * 5 + 1)
1760: PRINT
1760.1: PRINT "DAMAGE CONTROl REPORT:";
1780: GOSUB 5610
1790: PRINT " STATE OF REPAIR IMPROVED"
1790.1: PRINT
3070: A$ = "***"
3070.1: Z1 = X
3070.2: Z2 = Y
3100: GOSUB 5680
3110: IF Z3 = 0 THEN 3220
3120: PRINT "*** KLINGON DESTROYED ***"
3920: PRINT "THE ENTERPRISE IS DFAD IN SPACE. IF YOU SURVIVE ALL IMPENDING"
3930: PRINT "ATTACKS YOU WILL RE DEMOTED TO THE RANK OF PRIVATE"
3940: IF K3 <= 0 THEN 4020
3950: GOSUB 3790
3960: GOTO 3940
5130: IF A > 0 THEN 5170
5140: IF X = 0 THEN 5190
5150: C1 = 5
5150.1: GOTO 5080
5170: C1 = 3
5170.1: GOTO 5200

