Statistics:

Number of lines: 537
Number of valid statements: 631
Number of comments: 28
Number of executable statements: 630

Complexity:

Comment density: 0.044
Comprehension effort: 2259
McCabe complexity: 140
Halstead complexity:
 length: 3488
 volume: 21866.608
 difficulty: 67.971
 effort: 1486305.845
 language: 4.733
 intelligence: 321.703
 time: 1376.209

100 (0 1) REM *** PROGRAM SIMULATES TV PROGRAM STARTREK
  Origs: 
  Dests: 
110 (0 1) REM *** WRITTEN BY MIKE MAYFIELD, CENTERLINE ENGINEERING
  Origs: 
  Dests: 
120 (0 1) REM *** DEBUGGING AND MINOR REVISIONS BY LEO LAVERDURE, IRA POTEL,
  Origs: 
  Dests: 
130 (0 1) REM *** MARY COLE, AND DAVE AHL OF DIGITAL
  Origs: 
  Dests: 
170 (0 1) RANDOMIZE
  Origs: :start
  Dests: 180:auto
180 (0 2) PRINT "                  * * * STAR TREK * * *"
    (0 2) PRINT
  Origs: 170:auto
  Dests: 200:auto
200 (1 2) INPUT "DO YOU WANT INSTRUCTIONS (THEY'RE LONG!)"; A$
  Origs: 180:auto
  Dests: 210:auto
210 (1 4) IF A$ <> "YES" THEN 230
  Origs: 200:auto
  Dests: 220:auto, 240:ifthen
220 (0 2) GOTO 5820
  Origs: 210:auto
  Dests: 5820:goto
230 (0 1) REM *** PROGRAM BEGINS HERE
  Origs: 
  Dests: 
240 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) Z$, R$, Q$ = "                                                                          "
  Origs: 210:ifthen, 4030:goto, 4107:ifthen, 6500:goto
  Dests: 260:auto
260 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 6) DIM G(8, 8), C(9, 2), K(3, 3), N(3), Z(8, 8)
  Origs: 240:auto
  Dests: 290:auto
290 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 5) T0, T = INT(RND(1) * 20 + 20) * 100
  Origs: 260:auto
  Dests: 300:auto
300 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) T9 = 30
    G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) D0 = 0
    G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) E0, E = 3000
    G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) P0, P = 10
    G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) S9 = 200
    G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) S, S8 = 0
  Origs: 290:auto
  Dests: 370:auto
360 FND(.) (0 3) DEF FND(D) = SQR((K(I, 1) - S1) ** 2 + (K(I, 2) - S2) ** 2)
  Origs: 
  Dests: 
370 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) Q1 = INT(RND(1) * 8 + 1)
  Origs: 300:auto
  Dests: 380:auto
380 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) Q2 = INT(RND(1) * 8 + 1)
  Origs: 370:auto
  Dests: 390:auto
390 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) S1 = INT(RND(1) * 8 + 1)
  Origs: 380:auto
  Dests: 400:auto
400 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) S2 = INT(RND(1) * 8 + 1)
  Origs: 390:auto
  Dests: 410:auto
410 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) T7 = TIME(0)
  Origs: 400:auto
  Dests: 420:auto
420 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) C(2, 1), C(3, 1), C(4, 1), C(4, 2), C(5, 2), C(6, 2) = -1
  Origs: 410:auto
  Dests: 430:auto
430 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) C(1, 1), C(3, 2), C(5, 1), C(7, 2), C(9, 1) = 0
  Origs: 420:auto
  Dests: 440:auto
440 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) C(1, 2), C(2, 2), C(6, 1), C(7, 1), C(8, 1), C(8, 2), C(9, 2) = 1
  Origs: 430:auto
  Dests: 460:auto
450 (0 1) REM MAT D=ZER
  Origs: 
  Dests: 
460 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) D$ = "WARP ENGINESS.R.SENSORSL.R.SENSORSPHASER CNTRL"
  Origs: 440:auto
  Dests: 470:auto
470 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) D$ = D$ + "PHOTON TUBESDAMAGE CNTRL"
  Origs: 460:auto
  Dests: 480:auto
480 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) E$ = "SHIELD CNTRLCOMPUTER"
  Origs: 470:auto
  Dests: 490:auto
490 G(3790) F(I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) B9, K9 = 0
  Origs: 480:auto
  Dests: 500:auto
491 (0 1) REM *** SETS UP WHAT EXISTS IN GALAXY
  Origs: 
  Dests: 
500 G(3790) F(I:500,I:1910,I:2680,I:3160,I:3830,I:4900) (1 3) FOR I = 1 TO 8
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 490:auto
  Dests: 510:fornext, 760:fornext
510 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (1 3) FOR J = 1 TO 8
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 500:fornext
  Dests: 520:fornext, 750:fornext
520 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) R1 = RND(1)
  Origs: 510:fornext
  Dests: 530:auto
530 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (1 4) IF R1 > 0.98 THEN 580
  Origs: 520:auto
  Dests: 540:auto, 580:ifthen
540 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (1 4) IF R1 > 0.95 THEN 610
  Origs: 530:auto
  Dests: 550:auto, 610:ifthen
550 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (1 4) IF R1 > 0.8 THEN 640
  Origs: 540:auto
  Dests: 560:auto, 640:ifthen
560 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) K3 = 0
    G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 2) GOTO 660
  Origs: 550:auto
  Dests: 660:goto
580 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) K3 = 3
    G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) K9 = K9 + 3
    G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 2) GOTO 660
  Origs: 530:ifthen
  Dests: 660:goto
610 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) K3 = 2
    G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) K9 = K9 + 2
    G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 2) GOTO 660
  Origs: 540:ifthen
  Dests: 660:goto
640 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) K3 = 1
    G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) K9 = K9 + 1
  Origs: 550:ifthen
  Dests: 660:auto
660 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) R1 = RND(1)
  Origs: 560:goto, 580:goto, 610:goto, 640:auto
  Dests: 670:auto
670 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (1 4) IF R1 > 0.96 THEN 700
  Origs: 660:auto
  Dests: 680:auto, 700:ifthen
680 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) B3 = 0
    G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 2) GOTO 720
  Origs: 670:auto
  Dests: 720:goto
700 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) B3 = 1
    G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) B9 = B9 + 1
  Origs: 670:ifthen
  Dests: 720:auto
720 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 4) S3 = INT(RND(1) * 8 + 1)
  Origs: 680:goto, 700:auto
  Dests: 730:auto
730 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 8) G(I, J) = K3 * 100 + B3 * 10 + S3
  Origs: 720:auto
  Dests: 740:auto
740 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 3) Z(I, J) = 0
  Origs: 730:auto
  Dests: 750:auto
750 G(3790) F(I:500,J:510,I:1910,I:2680,I:3160,I:3830,I:4900) (0 1) NEXT J
  Origs: 510:fornext, 740:auto
  Dests: 760:auto
760 G(3790) F(I:500,I:1910,I:2680,I:3160,I:3830,I:4900) (0 1) NEXT I
  Origs: 500:fornext, 750:auto
  Dests: 770:auto
770 G(3790) (0 3) K7 = K9
  Origs: 760:auto
  Dests: 775:auto
775 G(3790) (0 2) PRINT
    G(3790) (0 2) PRINT
  Origs: 770:auto
  Dests: 780:auto
780 G(3790) (0 8) PRINT "YOU MUST DESTROY" K9 " KLINGONS IN" T9 " STARDATES WITH " B9 " STARBASES"
  Origs: 775:auto
  Dests: 790:auto
790 G(3790) (1 4) IF B9 > 0 THEN 810
  Origs: 780:auto
  Dests: 800:auto, 810:ifthen
800 G(3790) (0 3) G(6, 3) = 114
  Origs: 790:auto
  Dests: 810:auto
810 G(3790) F(I:1910,I:3160,I:4900) (0 3) K3, B3, S3 = 0
  Origs: 790:ifthen, 800:auto, 2320:goto
  Dests: 820:auto
820 G(3790) F(I:1910,I:3160,I:4900) (1 13) IF Q1 < 1 OR Q1 > 8 OR Q2 < 1 OR Q2 > 8 THEN 990
  Origs: 810:auto
  Dests: 830:auto, 990:ifthen
830 G(3790) F(I:1910,I:3160,I:4900) (0 4) X = G(Q1, Q2) * 0.01
  Origs: 820:auto
  Dests: 840:auto
840 G(3790) F(I:1910,I:3160,I:4900) (0 4) K3 = INT(X)
  Origs: 830:auto
  Dests: 850:auto
850 G(3790) F(I:1910,I:3160,I:4900) (0 4) B3 = INT((X - K3) * 10)
  Origs: 840:auto
  Dests: 860:auto
860 G(3790) F(I:1910,I:3160,I:4900) (0 6) S3 = G(Q1, Q2) - INT(G(Q1, Q2) * 0.1) + 10
  Origs: 850:auto
  Dests: 870:auto
870 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF K3 = 0 THEN 910
  Origs: 860:auto
  Dests: 880:auto, 910:ifthen
880 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF S > 200 THEN 910
  Origs: 870:auto
  Dests: 890:auto, 910:ifthen
890 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "COMBAT AREA      CONDITION RED"
  Origs: 880:auto
  Dests: 900:auto
900 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   SHIELDS DANGEROUSLY LOW"
  Origs: 890:auto
  Dests: 910:auto
910 G(3790) F(I:1910,I:3160,I:4900) (0 4) MAT K = ZER
  Origs: 870:ifthen, 880:ifthen, 900:auto
  Dests: 920:auto
920 G(3790) F(I:920,I:1910,I:3160,I:4900) (1 3) FOR I = 1 TO 3
    WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 910:auto
  Dests: 930:fornext, 940:fornext
930 G(3790) F(I:920,I:1910,I:3160,I:4900) (0 3) K(I, 3) = 0
  Origs: 920:fornext
  Dests: 940:auto
940 G(3790) F(I:920,I:1910,I:3160,I:4900) (0 1) NEXT I
  Origs: 920:fornext, 930:auto
  Dests: 950:auto
950 G(3790) (0 3) Q$ = Z$
    G(3790) (0 3) R$ = Z$
  Origs: 940:auto
  Dests: 970:auto
970 G(3790) (0 4) S$ = MID(Z$, 1, 48)
  Origs: 950:auto
  Dests: 980:auto
971 (0 1) REM *** PUT ENTERPRISE SOMEWHERE
  Origs: 
  Dests: 
980 G(3790) (0 3) A$ = "<*>"
  Origs: 970:auto
  Dests: 990:auto
990 G(3790) F(I:1910,I:3160,I:4900) (0 3) Z1 = S1
  Origs: 820:ifthen, 980:auto
  Dests: 1000:auto
1000 G(3790) F(I:1910,I:3160,I:4900) (0 3) Z2 = S2
  Origs: 990:auto
  Dests: 1010:auto
1010 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 5510
  Origs: 1000:auto
  Dests: 1020:auto, 5520:gosub
1020 G(3790) F(I:1020,I:1910,I:3160,I:4900) (1 3) FOR I = 1 TO K3
     WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 1010:auto
  Dests: 1030:fornext, 1110:fornext
1030 G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 2) GOSUB 5380
  Origs: 1020:fornext
  Dests: 1040:auto, 5380:gosub
1031 (0 1) REM *** PUT KLINGONS SOMEWHERE
  Origs: 
  Dests: 
1040 G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 3) A$ = "+++"
  Origs: 1030:auto
  Dests: 1050:auto
1050 G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 3) Z1 = R1
  Origs: 1040:auto
  Dests: 1060:auto
1060 G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 3) Z2 = R2
  Origs: 1050:auto
  Dests: 1070:auto
1070 G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 2) GOSUB 5510
  Origs: 1060:auto
  Dests: 1080:auto, 5520:gosub
1080 G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 3) K(I, 1) = R1
     G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 3) K(I, 2) = R2
     G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 3) K(I, 3) = S9
  Origs: 1070:auto
  Dests: 1110:auto
1110 G(3790) F(I:1020,I:1910,I:3160,I:4900) (0 1) NEXT I
  Origs: 1020:fornext, 1080:auto
  Dests: 1120:auto
1120 G(3790) F(I:1120) (1 3) FOR I = 1 TO B3
  Origs: 1110:auto
  Dests: 1130:fornext, 1180:fornext
1130 G(3790) F(I:1120) (0 2) GOSUB 5380
  Origs: 1120:fornext
  Dests: 1140:auto, 5380:gosub
1131 (0 1) REM *** PUT STARBASE(S) SOMEWHERE
  Origs: 
  Dests: 
1140 G(3790) F(I:1120) (0 3) A$ = ">1<"
     G(3790) F(I:1120) (0 3) Z1 = R1
     G(3790) F(I:1120) (0 3) Z2 = R2
  Origs: 1130:auto
  Dests: 1170:auto
1170 G(3790) F(I:1120) (0 2) GOSUB 5510
  Origs: 1140:auto
  Dests: 1180:auto, 5520:gosub
1180 G(3790) F(I:1120) (0 1) NEXT I
  Origs: 1120:fornext, 1170:auto
  Dests: 1190:auto
1190 G(3790) F(I:1190) (1 3) FOR I = 1 TO S3
  Origs: 1180:auto
  Dests: 1200:fornext, 1250:fornext
1200 G(3790) F(I:1190) (0 2) GOSUB 5380
  Origs: 1190:fornext
  Dests: 1210:auto, 5380:gosub
1201 (0 1) REM *** PUT STARS SOMEWHERE
  Origs: 
  Dests: 
1210 G(3790) F(I:1190) (0 3) A$ = " * "
     G(3790) F(I:1190) (0 3) Z1 = R1
     G(3790) F(I:1190) (0 3) Z2 = R2
  Origs: 1200:auto
  Dests: 1240:auto
1240 G(3790) F(I:1190) (0 2) GOSUB 5510
  Origs: 1210:auto
  Dests: 1250:auto, 5520:gosub
1250 G(3790) F(I:1190) (0 1) NEXT I
  Origs: 1190:fornext, 1240:auto
  Dests: 1260:auto
1260 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 4111
  Origs: 1250:auto, 1291:ifthen, 2160:goto
  Dests: 1270:auto, 4120:gosub
1270 G(3790) F(I:1910,I:3160,I:4900) (1 2) INPUT "COMMAND:"; A
  Origs: 1260:auto, 1400:goto, 1430:ifthen, 1600:goto, 2360:goto, 2500:goto, 2560:goto, 2790:goto, 2820:goto, 2850:goto, 2880:ifthen, 3450:goto, 3480:goto, 3510:ifthen, 3550:goto, 3580:goto, 3660:goto, 3680:goto, 4640:goto, 4820:goto, 5320:goto
  Dests: 1290:auto
1290 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 0 GOTO 1410
  Origs: 1270:auto
  Dests: 1291:auto, 1410:ifthen
1291 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF A = 1 GOTO 1260
     WARNING: Branch to line before GOSUB start
  Origs: 1290:auto
  Dests: 1260:ifthen, 1292:auto
1292 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 2 GOTO 2330
  Origs: 1291:auto
  Dests: 1293:auto, 2330:ifthen
1293 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 3 GOTO 2530
  Origs: 1292:auto
  Dests: 1294:auto, 2530:ifthen
1294 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 4 GOTO 2800
  Origs: 1293:auto
  Dests: 1295:auto, 2800:ifthen
1295 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 5 GOTO 3460
  Origs: 1294:auto
  Dests: 1296:auto, 3460:ifthen
1296 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 6 GOTO 3560
  Origs: 1295:auto
  Dests: 1297:auto, 3560:ifthen
1297 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 7 GOTO 4630
  Origs: 1296:auto
  Dests: 1298:auto, 4630:ifthen
1298 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 8 GOTO 6510
  Origs: 1297:auto
  Dests: 1310:auto, 6510:ifthen
1310 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   0 = SET COURSE"
  Origs: 1298:auto
  Dests: 1320:auto
1320 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   1 = SHORT RANGE SENSOR SCAN"
  Origs: 1310:auto
  Dests: 1330:auto
1330 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   2 = LONG RANGE SENSOR SCAN"
  Origs: 1320:auto
  Dests: 1340:auto
1340 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   3 = FIRE PHASERS"
  Origs: 1330:auto
  Dests: 1350:auto
1350 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   4 = FIRE PHOTON TORPEDOES"
  Origs: 1340:auto
  Dests: 1360:auto
1360 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   5 = SHIELD CONTROL"
  Origs: 1350:auto
  Dests: 1370:auto
1370 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   6 = DAMAGE CONTROL REPORT"
  Origs: 1360:auto
  Dests: 1380:auto
1380 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   7 = CALL ON LIBRARY COMPUTER"
  Origs: 1370:auto
  Dests: 1390:auto
1390 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   8 = END THE CONTEST"
     G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT
  Origs: 1380:auto
  Dests: 1400:auto
1400 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 1390:auto
  Dests: 1270:goto
1401 (0 1) REM *** COURSE, CONTROL CODE BEGIMS HERE
  Origs: 
  Dests: 
1410 G(3790) F(I:1910,I:3160,I:4900) (1 2) INPUT "COURSE (1-9):"; C1
  Origs: 1290:ifthen, 1440:ifthen, 1470:ifthen, 1500:goto
  Dests: 1430:auto
1430 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF C1 = 0 THEN 1270
     WARNING: Branch to line before GOSUB start
  Origs: 1410:auto
  Dests: 1270:ifthen, 1440:auto
1440 G(3790) F(I:1910,I:3160,I:4900) (1 8) IF C1 < 1 OR C1 > 9 THEN 1410
     WARNING: Branch to line before GOSUB start
  Origs: 1430:auto
  Dests: 1410:ifthen, 1450:auto
1450 G(3790) F(I:1910,I:3160,I:4900) (1 2) INPUT "WARP FACTOR (0-8):"; W1
  Origs: 1440:auto
  Dests: 1470:auto
1470 G(3790) F(I:1910,I:3160,I:4900) (1 8) IF W1 < 1 OR W1 > 8 THEN 1410
     WARNING: Branch to line before GOSUB start
  Origs: 1450:auto
  Dests: 1410:ifthen, 1480:auto
1480 G(3790) F(I:1910,I:3160,I:4900) (1 7) IF D(1) > 0 OR W1 <= 0.2 THEN 1810
  Origs: 1470:auto
  Dests: 1490:auto, 1810:ifthen
1490 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "WARP ENGINES ARE DAMAGEO. MAXIMUM SPEED = WARP .2"
  Origs: 1480:auto
  Dests: 1500:auto
1500 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1410
     WARNING: Branch to line before GOSUB start
  Origs: 1490:auto
  Dests: 1410:goto
1510 (1 4) IF K3 <= 0 THEN 1560
  Origs: 
  Dests: 1520:auto, 1560:ifthen
1520 (0 2) GOSUB 3790
  Origs: 1510:auto
  Dests: 1530:auto, 3790:gosub
1530 (1 4) IF K3 <= 0 THEN 1560
  Origs: 1520:auto
  Dests: 1540:auto, 1560:ifthen
1540 (1 4) IF S < 0 THEN 4000
  Origs: 1530:auto
  Dests: 1550:auto, 4000:ifthen
1550 (0 2) GOTO 1610
  Origs: 1540:auto
  Dests: 1610:goto
1560 (1 4) IF E > 0 THEN 1610
  Origs: 1510:ifthen, 1530:ifthen
  Dests: 1570:auto, 1610:ifthen
1570 (1 4) IF S < 1 THEN 3920
  Origs: 1560:auto
  Dests: 1580:auto, 3920:ifthen
1580 (0 4) PRINT "YOU HAVE" E " UNITS OF ENERGY"
  Origs: 1570:auto
  Dests: 1590:auto
1590 (0 4) PRINT "SUGGEST YOU GET SOME FROM YOUR SHIELDS WHICH HAVE" S " UNITS LEFT"
  Origs: 1580:auto
  Dests: 1600:auto
1600 (0 3) GOTO 1270
  Origs: 1590:auto
  Dests: 1270:goto
1610 F(I:1610) (1 3) FOR I = 1 TO 8
     F(I:1610) (1 4) IF D(I) > 0 THEN 1640
  Origs: 1550:goto, 1560:ifthen
  Dests: 1630:auto, 1640:fornext, 1640:ifthen
1611 (0 1) REM *** FIX ANY DAMAGED DEVICE
  Origs: 
  Dests: 
1630 F(I:1610) (0 3) D(I) = 1
  Origs: 1610:auto
  Dests: 1640:auto
1640 F(I:1610) (0 1) NEXT I
  Origs: 1610:fornext, 1610:ifthen, 1630:auto
  Dests: 1650:auto
1650 (1 5) IF RND(1) > 0.2 THEN 1810
  Origs: 1640:auto
  Dests: 1660:auto, 1810:ifthen
1660 (0 4) B1 = INT(RND(1) * 8 + 1)
  Origs: 1650:auto
  Dests: 1670:auto
1670 (1 5) IF RND(1) >= 0.5 THEN 1750
  Origs: 1660:auto
  Dests: 1680:auto, 1750:ifthen
1680 (0 8) D(B1) = D(B1) - (RND(1) * 5 + 1)
  Origs: 1670:auto
  Dests: 1690:auto
1690 (0 2) PRINT
     (0 2) PRINT "DAMAGE CONTROL REPORT:";
  Origs: 1680:auto
  Dests: 1710:auto
1710 (0 2) GOSUB 5610
  Origs: 1690:auto
  Dests: 1720:auto, 5620:gosub
1720 (0 2) PRINT " DAMAGED"
     (0 2) PRINT
     (0 2) GOTO 1810
  Origs: 1710:auto
  Dests: 1810:goto
1750 (0 8) D(B1) = D(B1) + (RND(1) * 5 + 1)
  Origs: 1670:ifthen
  Dests: 1760:auto
1760 (0 2) PRINT
     (0 2) PRINT "DAMAGE CONTROl REPORT:";
  Origs: 1750:auto
  Dests: 1780:auto
1780 (0 2) GOSUB 5610
  Origs: 1760:auto
  Dests: 1790:auto, 5620:gosub
1790 (0 2) PRINT " STATE OF REPAIR IMPROVED"
     (0 2) PRINT
  Origs: 1780:auto
  Dests: 1810:auto
1810 G(3790) F(I:1910,I:3160,I:4900) (0 4) N = INT(W1 * 8)
     G(3790) F(I:1910,I:3160,I:4900) (0 3) A$ = "   "
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z1 = S1
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z2 = S2
  Origs: 1480:ifthen, 1650:ifthen, 1720:goto, 1790:auto
  Dests: 1850:auto
1850 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 5510
  Origs: 1810:auto
  Dests: 1860:auto, 5520:gosub
1860 G(3790) F(I:1910,I:3160,I:4900) (0 10) X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 1850:auto
  Dests: 1870:auto
1870 G(3790) F(I:1910,I:3160,I:4900) (0 3) X = S1
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Y = S2
  Origs: 1860:auto
  Dests: 1890:auto
1890 G(3790) F(I:1910,I:3160,I:4900) (0 10) X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 1870:auto
  Dests: 1900:auto
1900 G(3790) F(I:1910,I:3160,I:4900) (0 10) X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
  Origs: 1890:auto
  Dests: 1910:auto
1910 G(3790) F(I:1910,I:3160,I:4900) (1 3) FOR I = 1 TO N
     G(3790) F(I:1910,I:3160,I:4900) (0 4) S1 = S1 + X1
     G(3790) F(I:1910,I:3160,I:4900) (0 4) S2 = S2 + X2
     WARNING: FORNEXT length exceeds limit 40
  Origs: 1900:auto
  Dests: 1940:auto, 2070:fornext
1940 G(3790) F(I:1910,I:3160,I:4900) (1 13) IF S1 < 1 OR S1 >= 9 OR S2 < 1 OR S2 >= 9 THEN 2170
  Origs: 1910:auto
  Dests: 1950:auto, 2170:ifthen
1950 G(3790) F(I:1910,I:3160,I:4900) (0 8) S8 = S1 * 24 + S2 * 3 - 26
     G(3790) F(I:1910,I:3160,I:4900) (1 4) IF S8 > 72 THEN 1990
  Origs: 1940:auto
  Dests: 1970:auto, 1990:ifthen
1970 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF MID(Q$, S8, 3) = "   " THEN 2070
  Origs: 1950:auto
  Dests: 1980:auto, 2070:ifthen
1980 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 2030
  Origs: 1970:auto
  Dests: 2030:goto
1990 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF S8 > 144 THEN 2020
  Origs: 1950:ifthen
  Dests: 2000:auto, 2020:ifthen
2000 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF MID(R$, S8 - 72, 3) = "   " THEN 2070
  Origs: 1990:auto
  Dests: 2010:auto, 2070:ifthen
2010 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 2030
  Origs: 2000:auto
  Dests: 2030:goto
2020 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF MID(S$, S8 - 144, 3) = "   " THEN 2070
  Origs: 1990:ifthen
  Dests: 2030:auto, 2070:ifthen
2030 G(3790) F(I:1910,I:3160,I:4900) (0 6) PRINT "WARP ENGINES SHUTDOWN AT SECTOR " S1 "." S2 " DUE TO BAD NAVAGATION"
  Origs: 1980:goto, 2010:goto, 2020:auto
  Dests: 2040:auto
2040 G(3790) F(I:1910,I:3160,I:4900) (0 4) S1 = S1 - X1
     G(3790) F(I:1910,I:3160,I:4900) (0 4) S2 = S2 - X2
     G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 2080
  Origs: 2030:auto
  Dests: 2080:goto
2070 G(3790) F(I:1910,I:3160,I:4900) (0 1) NEXT I
  Origs: 1910:fornext, 1970:ifthen, 2000:ifthen, 2020:ifthen
  Dests: 2080:auto
2080 G(3790) F(I:1910,I:3160,I:4900) (0 3) A$ = "<*>"
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z1 = S1
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z2 = S2
  Origs: 2040:goto, 2070:auto
  Dests: 2110:auto
2110 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 5510
  Origs: 2080:auto
  Dests: 2120:auto, 5520:gosub
2120 G(3790) F(I:1910,I:3160,I:4900) (0 5) E = E - N + 5
     G(3790) F(I:1910,I:3160,I:4900) (1 4) IF W1 < 1 THEN 2150
  Origs: 2110:auto
  Dests: 2140:auto, 2150:ifthen
2140 G(3790) F(I:1910,I:3160,I:4900) (0 4) T = T + 1
  Origs: 2120:auto
  Dests: 2150:auto
2150 G(3790) F(I:1910,I:3160,I:4900) (1 6) IF T > T0 + T9 THEN 3970
  Origs: 2120:ifthen, 2140:auto
  Dests: 2160:auto, 3970:ifthen
2160 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1260
     WARNING: Branch to line before GOSUB start
  Origs: 2150:auto
  Dests: 1260:goto
2170 G(3790) F(I:1910,I:3160,I:4900) (0 8) X = Q1 * 8 + X + X1 * N
     G(3790) F(I:1910,I:3160,I:4900) (0 8) Y = Q2 * 8 + Y + X2 * N
  Origs: 1940:ifthen
  Dests: 2190:auto
2190 G(3790) F(I:1910,I:3160,I:4900) (0 4) Q1 = INT(X / 8)
     G(3790) F(I:1910,I:3160,I:4900) (0 4) Q2 = INT(Y / 8)
     G(3790) F(I:1910,I:3160,I:4900) (0 4) S1 = INT(X - Q1 * 8)
     G(3790) F(I:1910,I:3160,I:4900) (0 4) S2 = INT(Y - Q2 * 8)
  Origs: 2170:auto
  Dests: 2230:auto
2230 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF S1 <> 0 THEN 2260
  Origs: 2190:auto
  Dests: 2240:auto, 2260:ifthen
2240 G(3790) F(I:1910,I:3160,I:4900) (0 4) Q1 = Q1 - 1
     G(3790) F(I:1910,I:3160,I:4900) (0 3) S1 = 8
  Origs: 2230:auto
  Dests: 2260:auto
2260 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF S2 <> 0 THEN 2290
  Origs: 2230:ifthen, 2240:auto
  Dests: 2270:auto, 2290:ifthen
2270 G(3790) F(I:1910,I:3160,I:4900) (0 4) Q2 = Q2 - 1
     G(3790) F(I:1910,I:3160,I:4900) (0 3) S2 = 8
  Origs: 2260:auto
  Dests: 2290:auto
2290 G(3790) F(I:1910,I:3160,I:4900) (0 4) T = T + 1
     G(3790) F(I:1910,I:3160,I:4900) (0 5) F = F - N + 5
  Origs: 2260:ifthen, 2270:auto
  Dests: 2310:auto
2310 G(3790) F(I:1910,I:3160,I:4900) (1 6) IF T > T0 + T9 THEN 3970
  Origs: 2290:auto
  Dests: 2320:auto, 3970:ifthen
2320 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 810
     WARNING: Branch to line before GOSUB start
  Origs: 2310:auto
  Dests: 810:goto
2321 (0 1) REM *** LONG RANGE SENSOR SCAN CODE BEGINS HERE
  Origs: 
  Dests: 
2330 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF D(3) > 0 THEN 2370
  Origs: 1292:ifthen
  Dests: 2340:auto, 2370:ifthen
2340 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "LONG RANGE SENSORS ARE INOPERABLE"
  Origs: 2330:auto
  Dests: 2360:auto
2360 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2340:auto
  Dests: 1270:goto
2370 G(3790) F(I:1910,I:3160,I:4900) (0 5) PRINT "LONG RANGE SENSOR SCAN FOR QUADRANT " Q1 "." Q2
  Origs: 2330:ifthen
  Dests: 2380:auto
2380 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "-------------------"
  Origs: 2370:auto
  Dests: 2390:auto
2390 G(3790) F(I:1910,I:2390,I:3160,I:4900) (1 5) FOR I = Q1 - 1 TO Q1 + 1
     WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 2380:auto
  Dests: 2400:fornext, 2490:fornext
2400 G(3790) F(I:1910,I:2390,I:3160,I:4900) (0 4) MAT N = ZER
  Origs: 2390:fornext
  Dests: 2410:auto
2410 G(3790) F(I:1910,I:2390,J:2410,I:3160,I:4900) (1 5) FOR J = Q2 - 1 TO Q2 + 1
     WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 2400:auto
  Dests: 2420:fornext, 2460:fornext
2420 G(3790) F(I:1910,I:2390,J:2410,I:3160,I:4900) (1 13) IF I < 1 OR I > 8 OR J < 1 OR J > 8 THEN 2460
  Origs: 2410:fornext
  Dests: 2430:auto, 2460:ifthen
2430 G(3790) F(I:1910,I:2390,J:2410,I:3160,I:4900) (0 3) N(J - Q2 + 2) = G(I, J)
  Origs: 2420:auto
  Dests: 2440:auto
2440 G(3790) F(I:1910,I:2390,J:2410,I:3160,I:4900) (1 4) IF D(7) < 0 THEN 2460
  Origs: 2430:auto
  Dests: 2450:auto, 2460:ifthen
2450 G(3790) F(I:1910,I:2390,J:2410,I:3160,I:4900) (0 3) Z(I, J) = G(I, J)
  Origs: 2440:auto
  Dests: 2460:auto
2460 G(3790) F(I:1910,I:2390,J:2410,I:3160,I:4900) (0 1) NEXT J
  Origs: 2410:fornext, 2420:ifthen, 2440:ifthen, 2450:auto
  Dests: 2470:auto
2470 G(3790) F(I:1910,I:2390,I:3160,I:4900) (0 3) P1$ = ": ### : ### : ### :"
  Origs: 2460:auto
  Dests: 2471:auto
2471 G(3790) F(I:1910,I:2390,I:3160,I:4900) (0 6) PRINT USING P1$ N(1), N(2), N(3)
  Origs: 2470:auto
  Dests: 2480:auto
2480 G(3790) F(I:1910,I:2390,I:3160,I:4900) (0 2) PRINT "------------------"
  Origs: 2471:auto
  Dests: 2490:auto
2490 G(3790) F(I:1910,I:2390,I:3160,I:4900) (0 1) NEXT I
  Origs: 2390:fornext, 2480:auto
  Dests: 2500:auto
2500 G(3790) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2490:auto
  Dests: 1270:goto
2501 (0 1) REM *** PHASER CONTROL CODE BEGINS HERE
  Origs: 
  Dests: 
2530 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF K3 <= 0 THEN 3670
  Origs: 1293:ifthen
  Dests: 2540:auto, 3670:ifthen
2540 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF D(4) > 0 THEN 2570
  Origs: 2530:auto
  Dests: 2560:auto, 2570:ifthen
2560 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2540:auto
  Dests: 1270:goto
2570 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF D(7) > 0 THEN 2590
  Origs: 2540:ifthen, 2630:ifthen
  Dests: 2580:auto, 2590:ifthen
2580 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT " COMPUTER FAILURE HAMPERS ACCURACY"
  Origs: 2570:auto
  Dests: 2590:auto
2590 G(3790) F(I:1910,I:3160,I:4900) (0 3) PRINT "PHASERS LOCKED ON TARGET, ENERGY AVAILABLE=" E
  Origs: 2570:ifthen, 2580:auto
  Dests: 2600:auto
2600 G(3790) F(I:1910,I:3160,I:4900) (1 2) INPUT "NUMBER OF UNITS TO FIRE:"; X
  Origs: 2590:auto
  Dests: 2620:auto
2620 G(3790) F(I:1910,I:3160,I:4900) (1 3) IF X < 1270
  Origs: 2600:auto
  Dests: 2630:auto
2630 G(3790) F(I:1910,I:3160,I:4900) (1 6) IF E - X < 0 THEN 2570
     WARNING: Branch to line before GOSUB start
  Origs: 2620:auto
  Dests: 2570:ifthen, 2640:auto
2640 G(3790) F(I:1910,I:3160,I:4900) (0 4) E = E - X
  Origs: 2630:auto
  Dests: 2650:auto
2650 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 3790
  Origs: 2640:auto
  Dests: 2660:auto, 3790:gosub
2660 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF D(7) > 0 THEN 2680
  Origs: 2650:auto
  Dests: 2670:auto, 2680:ifthen
2670 G(3790) F(I:1910,I:3160,I:4900) (0 5) X = X * RND(1)
  Origs: 2660:auto
  Dests: 2680:auto
2680 G(3790) F(I:1910,I:2680,I:3160,I:4900) (1 3) FOR I = 1 TO 3
     WARNING: FORNEXT length exceeds limit 40
     WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 2660:ifthen, 2670:auto
  Dests: 2690:fornext, 2770:fornext
2690 G(3790) F(I:1910,I:2680,I:3160,I:4900) (1 4) IF K(I, 3) <= 0 THEN 2770
  Origs: 2680:fornext, 3330:ifthen
  Dests: 2700:auto, 2770:ifthen
2700 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 4) H = INT((X / K / FND(0)) * (2 * RND(1)))
  Origs: 2690:auto
  Dests: 2710:auto
2710 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 4) K(I, 3) = K(I, 3) - H
  Origs: 2700:auto
  Dests: 2720:auto
2720 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 6) PRINT H " UNIT HIT ON KLINGON AT SECTOR " K(I, 1) "." K(I, 2);
  Origs: 2710:auto
  Dests: 2730:auto
2730 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 4) PRINT "    (" K(I, 3) " LEFT)"
  Origs: 2720:auto
  Dests: 2740:auto
2740 G(3790) F(I:1910,I:2680,I:3160,I:4900) (1 4) IF K(I, 3) > 0 THEN 2770
  Origs: 2730:auto
  Dests: 2750:auto, 2770:ifthen
2750 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) GOSUB 3690
  Origs: 2740:auto
  Dests: 2760:auto, 3690:gosub
2760 G(3790) F(I:1910,I:2680,I:3160,I:4900) (1 4) IF K9 <= 0 THEN 4040
  Origs: 2750:auto
  Dests: 2770:auto, 4040:ifthen
2770 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 1) NEXT I
  Origs: 2680:fornext, 2690:ifthen, 2740:ifthen, 2760:auto
  Dests: 2780:auto
2780 G(3790) (1 4) IF E < 0 THEN 4000
  Origs: 2770:auto
  Dests: 2790:auto, 4000:ifthen
2790 G(3790) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2780:auto
  Dests: 1270:goto
2791 (0 1) REM *** PHOTON TORPEDO CODE BEGINS HERE
  Origs: 
  Dests: 
2800 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF D(5) >= 0 THEN 2830
  Origs: 1294:ifthen
  Dests: 2810:auto, 2830:ifthen
2810 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "PHOTON TUBES ARE NOT OPERATIONAL"
  Origs: 2800:auto
  Dests: 2820:auto
2820 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2810:auto
  Dests: 1270:goto
2830 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF P > 0 THEN 2860
  Origs: 2800:ifthen
  Dests: 2840:auto, 2860:ifthen
2840 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "ALL PHOTON TORPEDOES EXPENDED"
  Origs: 2830:auto
  Dests: 2850:auto
2850 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2840:auto
  Dests: 1270:goto
2860 G(3790) F(I:1910,I:3160,I:4900) (1 2) INPUT "TORPEDO COURSE (1-9):"; C1
  Origs: 2830:ifthen, 2890:ifthen
  Dests: 2880:auto
2880 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF C1 < 0 THEN 1270
     WARNING: Branch to line before GOSUB start
  Origs: 2860:auto
  Dests: 1270:ifthen, 2890:auto
2890 G(3790) F(I:1910,I:3160,I:4900) (1 8) IF C1 < 1 OR C1 > 9 THEN 2860
     WARNING: Branch to line before GOSUB start
  Origs: 2880:auto
  Dests: 2860:ifthen, 2900:auto
2900 G(3790) F(I:1910,I:3160,I:4900) (0 10) X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 2890:auto
  Dests: 2910:auto
2910 G(3790) F(I:1910,I:3160,I:4900) (0 10) X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
  Origs: 2900:auto
  Dests: 2920:auto
2920 G(3790) F(I:1910,I:3160,I:4900) (0 3) X = S1
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Y = S2
     G(3790) F(I:1910,I:3160,I:4900) (0 4) P = P - 1
  Origs: 2910:auto
  Dests: 2950:auto
2950 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "TORPEDO TRACK:"
  Origs: 2920:auto
  Dests: 2960:auto
2960 G(3790) F(I:1910,I:3160,I:4900) (0 4) X = X + X1
     G(3790) F(I:1910,I:3160,I:4900) (0 4) Y = Y + X2
  Origs: 2950:auto, 3060:goto
  Dests: 2980:auto
2980 G(3790) F(I:1910,I:3160,I:4900) (1 13) IF X < 1 OR X >= 9 OR Y < 1 OR Y >= 9 THEN 3420
  Origs: 2960:auto
  Dests: 2990:auto, 3420:ifthen
2990 G(3790) F(I:1910,I:3160,I:4900) (0 5) PRINT "               " X "." Y
  Origs: 2980:auto
  Dests: 3010:auto
3010 G(3790) F(I:1910,I:3160,I:4900) (0 3) A$ = "   "
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z1 = X
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z2 = Y
  Origs: 2990:auto
  Dests: 3040:auto
3040 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 5680
  Origs: 3010:auto
  Dests: 3050:auto, 5690:gosub
3050 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF Z3 = 0 THEN 3220
  Origs: 3040:auto
  Dests: 3060:auto, 3220:ifthen
3060 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 2960
     WARNING: Branch to line before GOSUB start
  Origs: 3050:auto
  Dests: 2960:goto
3070 (0 3) A$ = "***"
     (0 3) Z1 = X
     (0 3) Z2 = Y
  Origs: 
  Dests: 3100:auto
3100 (0 2) GOSUB 5680
  Origs: 3070:auto
  Dests: 3110:auto, 5690:gosub
3110 (1 4) IF Z3 = 0 THEN 3220
  Origs: 3100:auto
  Dests: 3120:auto, 3220:ifthen
3120 (0 2) PRINT "*** KLINGON DESTROYED ***"
  Origs: 3110:auto
  Dests: 3130:auto
3130 G(3790) F(I:1910,I:3160,I:4900) (0 4) K3 = K3 - 1
     G(3790) F(I:1910,I:3160,I:4900) (0 4) K9 = K9 - 1
  Origs: 3120:auto, 5030:ifthen
  Dests: 3150:auto
3150 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF K9 <= 8 THEN 4040
  Origs: 3130:auto, 5060:ifthen
  Dests: 3160:auto, 4040:ifthen
3160 G(3790) F(I:1910,I:3160,I:4900) (1 3) FOR I = 1 TO 3
     G(3790) F(I:1910,I:3160,I:4900) (1 5) IF INT(X) = K(I, 1) THEN 3190
     WARNING: FORNEXT length exceeds limit 40
  Origs: 3150:auto
  Dests: 3180:auto, 3190:fornext, 3190:ifthen
3180 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF INT(Y) <> K(I, 2) THEN 3200
  Origs: 3160:auto
  Dests: 3190:auto, 3200:ifthen
3190 G(3790) F(I:1910,I:3160,I:4900) (0 1) NEXT I
  Origs: 3160:fornext, 3160:ifthen, 3180:auto
  Dests: 3200:auto
3200 G(3790) F(I:1910,I:3160,I:4900) (0 3) K(I, 3) = 0
     G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 3360
  Origs: 3180:ifthen, 3190:auto
  Dests: 3360:goto
3220 G(3790) F(I:1910,I:3160,I:4900) (0 3) A$ = " * "
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z1 = X
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z2 = Y
  Origs: 3050:ifthen, 3110:ifthen
  Dests: 3230:auto
3230 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 5680
  Origs: 3220:auto
  Dests: 3240:auto, 5690:gosub
3240 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF Z3 = 0 THEN 3290
  Origs: 3230:auto
  Dests: 3270:auto, 3290:ifthen
3270 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "YOU CAN'T DESTROY STARS, SILLY"
  Origs: 3240:auto
  Dests: 3280:auto
3280 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 3420
  Origs: 3270:auto
  Dests: 3420:goto
3290 G(3790) F(I:1910,I:3160,I:4900) (0 3) A$ = ">1<"
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z1 = X
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z2 = Y
  Origs: 3240:ifthen
  Dests: 3320:auto
3320 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 5660
  Origs: 3290:auto
  Dests: 3330:auto, 5660:gosub
3330 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF Z3 = 0 THEN 2690
     WARNING: Branch to line before GOSUB start
  Origs: 3320:auto
  Dests: 2690:ifthen, 3340:auto
3340 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "*** STAR BASE DESTROYED *** .......CONGRATULATIONS"
  Origs: 3330:auto
  Dests: 3350:auto
3350 G(3790) F(I:1910,I:3160,I:4900) (0 4) B3 = B3 - 1
  Origs: 3340:auto
  Dests: 3360:auto
3360 G(3790) F(I:1910,I:3160,I:4900) (0 3) A$ = "   "
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z1 = X
     G(3790) F(I:1910,I:3160,I:4900) (0 3) Z2 = Y
  Origs: 3200:goto, 3350:auto
  Dests: 3390:auto
3390 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 5510
  Origs: 3360:auto
  Dests: 3400:auto, 5520:gosub
3400 G(3790) F(I:1910,I:3160,I:4900) (0 8) G(Q1, Q2) = K3 * 100 + B3 * 10 + S3
  Origs: 3390:auto
  Dests: 3410:auto
3410 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 3430
  Origs: 3400:auto
  Dests: 3430:goto
3420 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "TORPEDO MISSED"
  Origs: 2980:ifthen, 3280:goto
  Dests: 3430:auto
3430 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOSUB 3790
  Origs: 3410:goto, 3420:auto
  Dests: 3440:auto, 3790:gosub
3440 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF E < 0 THEN 4000
  Origs: 3430:auto
  Dests: 3450:auto, 4000:ifthen
3450 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3440:auto
  Dests: 1270:goto
3451 (0 1) REM *** SHIELD CONTROL CODE BEGINS HERE
  Origs: 
  Dests: 
3460 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF D(7) >= 0 THEN 3490
  Origs: 1295:ifthen
  Dests: 3470:auto, 3490:ifthen
3470 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "SHIELD CONTROL IS NON-OPERATIONAL"
  Origs: 3460:auto
  Dests: 3480:auto
3480 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3470:auto
  Dests: 1270:goto
3490 G(3790) F(I:1910,I:3160,I:4900) (0 4) PRINT "ENERGY AVAILABLE =" F * S;
  Origs: 3460:ifthen, 3520:ifthen
  Dests: 3500:auto
3500 G(3790) F(I:1910,I:3160,I:4900) (1 2) INPUT "   NUMBER OF UNTTS TO SHIELDS:"; X
  Origs: 3490:auto
  Dests: 3510:auto
3510 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF X <= 0 THEN 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3500:auto
  Dests: 1270:ifthen, 3520:auto
3520 G(3790) F(I:1910,I:3160,I:4900) (1 7) IF E + S - X < 0 THEN 3490
     WARNING: Branch to line before GOSUB start
  Origs: 3510:auto
  Dests: 3490:ifthen, 3530:auto
3530 G(3790) F(I:1910,I:3160,I:4900) (0 5) F = E + S - X
     G(3790) F(I:1910,I:3160,I:4900) (0 3) S = X
  Origs: 3520:auto
  Dests: 3550:auto
3550 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3530:auto
  Dests: 1270:goto
3551 (0 1) REM *** DAMAGE CONTROL RFPORT CODE BEGINS HERE
  Origs: 
  Dests: 
3560 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF D(6) > 0 THEN 3590
  Origs: 1296:ifthen, 4870:goto
  Dests: 3570:auto, 3590:ifthen
3570 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "DAMAGE CONTROL REPORT IS NOT AVAILABLE"
  Origs: 3560:auto
  Dests: 3580:auto
3580 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3570:auto
  Dests: 1270:goto
3590 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "DEVICE STATE OF REPAIR"
  Origs: 3560:ifthen
  Dests: 3610:auto
3610 G(3790) F(I:1910,I:3160,R1:3610,I:4900) (1 3) FOR R1 = 1 TO 8
     WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 3590:auto
  Dests: 3620:fornext, 3640:fornext
3620 G(3790) F(I:1910,I:3160,R1:3610,I:4900) (0 2) GOSUB 5610
  Origs: 3610:fornext
  Dests: 3630:auto, 5620:gosub
3630 G(3790) F(I:1910,I:3160,R1:3610,I:4900) (0 2) PRINT D(R1)
  Origs: 3620:auto
  Dests: 3640:auto
3640 G(3790) F(I:1910,I:3160,R1:3610,I:4900) (0 1) NEXT R1
     G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT
  Origs: 3610:fornext, 3630:auto
  Dests: 3660:auto
3660 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3640:auto
  Dests: 1270:goto
3670 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "SHORT RANGE SENSORS REPORT NO KLINGONS IN THIS QUADRANT"
  Origs: 2530:ifthen
  Dests: 3680:auto
3680 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 3670:auto
  Dests: 1270:goto
3690 G(3690) (0 6) PRINT "KLINGON AT SECTOR " K(I, 1) "," K(I, 2) "DESTROYED ***"
  Origs: 2750:gosub
  Dests: 3710:auto
3710 G(3690) (0 4) K3 = K3 - 1
     G(3690) (0 4) K9 = K9 - 1
     G(3690) (0 3) A$ = "   "
     G(3690) (0 3) Z1 = K(I, 1)
     G(3690) (0 3) Z2 = K(I, 2)
  Origs: 3690:auto
  Dests: 3760:auto
3760 G(3690) (0 2) GOSUB 5510
  Origs: 3710:auto
  Dests: 3770:auto, 5520:gosub
3770 G(3690) (0 8) G(Q1, Q2) = K3 * 100 + B3 * 10 + S3
  Origs: 3760:auto
  Dests: 3780:auto
3780 G(3690) (0 1) RETURN
  Origs: 3770:auto
  Dests: 
3790 G(3790) (1 4) IF C$ <> "DOCKED" THEN 3820
     WARNING: GOSUB length exceeds limit 40
  Origs: 1520:gosub, 2650:gosub, 3430:gosub, 3950:gosub
  Dests: 3800:auto, 3820:ifthen
3800 G(3790) (0 2) PRINT "STAR BASE SHIELDS PROTECT THE ENTERPISE"
  Origs: 3790:auto
  Dests: 3810:auto
3810 G(3790) (0 1) RETURN
  Origs: 3800:auto
  Dests: 
3820 G(3790) (1 4) IF K3 <= 0 THEN 3910
  Origs: 3790:ifthen
  Dests: 3830:auto, 3910:ifthen
3830 G(3790) F(I:3830) (1 3) FOR I = 1 TO 3
     G(3790) F(I:3830) (1 4) IF K(I, 3) <= 0 THEN 3900
     WARNING: FORNEXT length exceeds limit 40
  Origs: 3820:auto
  Dests: 3850:auto, 3900:fornext, 3900:ifthen
3850 G(3790) F(I:3830) (0 4) H = INT((K(I, 3) / FND(0)) * (2 + RND(1)))
     G(3790) F(I:3830) (0 4) S = S - H
  Origs: 3830:auto
  Dests: 3870:auto
3870 G(3790) F(I:3830) (0 6) PRINT H " UNIT HIT ON ENTERPRISE AT SECTOR " K(I, 1) "," K(I, 2);
  Origs: 3850:auto
  Dests: 3871:auto
3871 G(3790) F(I:3830) (0 4) PRINT "     (" S " LEFT)"
  Origs: 3870:auto
  Dests: 3890:auto
3890 G(3790) F(I:3830) (1 4) IF S < 0 THEN 4000
  Origs: 3871:auto
  Dests: 3900:auto, 4000:ifthen
3900 G(3790) F(I:3830) (0 1) NEXT I
  Origs: 3830:fornext, 3830:ifthen, 3890:auto
  Dests: 3910:auto
3910 G(3790) (0 1) RETURN
  Origs: 3820:ifthen, 3900:auto
  Dests: 
3920 (0 2) PRINT "THE ENTERPRISE IS DFAD IN SPACE. IF YOU SURVIVE ALL IMPENDING"
  Origs: 1570:ifthen
  Dests: 3930:auto
3930 (0 2) PRINT "ATTACKS YOU WILL RE DEMOTED TO THE RANK OF PRIVATE"
  Origs: 3920:auto
  Dests: 3940:auto
3940 (1 4) IF K3 <= 0 THEN 4020
  Origs: 3930:auto, 3960:goto
  Dests: 3950:auto, 4020:ifthen
3950 (0 3) GOSUB 3790
  Origs: 3940:auto
  Dests: 3790:gosub, 3960:auto
3960 (0 3) GOTO 3940
  Origs: 3950:auto
  Dests: 3940:goto
3970 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:3160,I:4900) (0 3) PRINT "IT IS STARDATE" T
  Origs: 2150:ifthen, 2310:ifthen
  Dests: 3990:auto
3990 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 4020
  Origs: 3970:auto
  Dests: 4020:goto
3991 (0 1) REM *** NO ENERGY LEFT
  Origs: 
  Dests: 
4000 G(3790) F(I:1910,I:3160,I:3830,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:3160,I:3830,I:4900) (0 2) PRINT "THE ENTERPRISE HAS BEEN DESTROYED. THF FEOERATION WILL BE CONQUERED"
  Origs: 1540:ifthen, 2780:ifthen, 3440:ifthen, 3890:ifthen
  Dests: 4020:auto
4020 G(3790) F(I:1910,I:3160,I:3830,I:4900) (0 4) PRINT "THERE ARE STILL " K9 " KLINGON BATTLE CRUISERS"
  Origs: 3940:ifthen, 3990:goto, 4000:auto
  Dests: 4030:auto
4030 G(3790) F(I:1910,I:3160,I:3830,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:3160,I:3830,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:3160,I:3830,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:3160,I:3830,I:4900) (0 2) PRINT "YOU GET ANOTHER CHANCE..."
     G(3790) F(I:1910,I:3160,I:3830,I:4900) (0 3) GOTO 230
     WARNING: Branch to line before GOSUB start
  Origs: 4020:auto
  Dests: 240:goto
4040 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) PRINT "THF LAST KLINGON BATTLE CRUISER IN THE GALAXY HAS BEEN DESTROYED"
  Origs: 2760:ifthen, 3150:ifthen
  Dests: 4050:auto
4050 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) PRINT "THE FEDERATION HAS BEEN SAVED!!!!!"
     G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) PRINT
  Origs: 4040:auto
  Dests: 4075:auto
4075 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 7) E5 = ((K7 / (T - T0)) * 1000)
  Origs: 4050:auto
  Dests: 4080:auto
4080 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 3) PRINT "YOUR EFFICIENCY RATING =" E5
  Origs: 4075:auto
  Dests: 4100:auto
4100 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 6) PRINT "YOUR ACTUAL TIME OF MISSION =" INT(TIME(0) - T7) / 60; " MINUTES"
  Origs: 4080:auto
  Dests: 4105:auto
4105 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) PRINT
  Origs: 4100:auto
  Dests: 4106:auto
4106 G(3790) F(I:1910,I:2680,I:3160,I:4900) (1 2) INPUT "DO YOU WANT TO TRY AGAIN"; R$
  Origs: 4105:auto
  Dests: 4107:auto
4107 G(3790) F(I:1910,I:2680,I:3160,I:4900) (1 5) IF R$ = "YES" THEN 230
     WARNING: Branch to line before GOSUB start
  Origs: 4106:auto
  Dests: 240:ifthen, 4110:auto
4110 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 2) GOTO 6510
  Origs: 4107:auto
  Dests: 6510:goto
4111 (0 1) REM *** SHORT RANGE SENSOR SCAN AND STARTING POINT CODE
  Origs: 
  Dests: 
4120 G(4120) F(I:4120) (1 5) FOR I = S1 - 1 TO S1 + 1
     WARNING: GOSUB length exceeds limit 40
     WARNING: FORNEXT length exceeds limit 40
  Origs: 1260:gosub
  Dests: 4130:fornext, 4210:fornext
4130 G(4120) F(I:4120,J:4130) (1 5) FOR J = S2 - 1 TO S2 + 1
  Origs: 4120:fornext
  Dests: 4140:fornext, 4200:fornext
4140 G(4120) F(I:4120,J:4130) (1 13) IF I < 1 OR I > 8 OR J < 1 OR J > 8 THEN 4200
  Origs: 4130:fornext
  Dests: 4150:auto, 4200:ifthen
4150 G(4120) F(I:4120,J:4130) (0 3) A$ = ">1<"
     G(4120) F(I:4120,J:4130) (0 3) Z1 = I
     G(4120) F(I:4120,J:4130) (0 3) Z2 = J
  Origs: 4140:auto
  Dests: 4180:auto
4180 G(4120) F(I:4120,J:4130) (0 2) GOSUB 5680
  Origs: 4150:auto
  Dests: 4190:auto, 5690:gosub
4190 G(4120) F(I:4120,J:4130) (1 4) IF Z3 = 1 THEN 4240
  Origs: 4180:auto
  Dests: 4200:auto, 4240:ifthen
4200 G(4120) F(I:4120,J:4130) (0 1) NEXT J
  Origs: 4130:fornext, 4140:ifthen, 4190:auto
  Dests: 4210:auto
4210 G(4120) F(I:4120) (0 1) NEXT I
  Origs: 4120:fornext, 4200:auto
  Dests: 4220:auto
4220 G(4120) (0 3) D0 = 0
     G(4120) (0 2) GOTO 4310
  Origs: 4210:auto
  Dests: 4310:goto
4240 G(4120) F(I:4120,J:4130) (0 3) D0 = 1
     G(4120) F(I:4120,J:4130) (0 3) C$ = "DOCKED"
     G(4120) F(I:4120,J:4130) (0 3) E = 3000
     G(4120) F(I:4120,J:4130) (0 3) P = 10
  Origs: 4190:ifthen
  Dests: 4280:auto
4280 G(4120) F(I:4120,J:4130) (0 2) PRINT "SHIELDS DROPPED FOR DOCKING PURPOSES"
  Origs: 4240:auto
  Dests: 4290:auto
4290 G(4120) F(I:4120,J:4130) (0 3) S = 0
     G(4120) F(I:4120,J:4130) (0 2) GOTO 4380
  Origs: 4280:auto
  Dests: 4380:goto
4310 G(4120) (1 4) IF K3 > 0 THEN 4350
  Origs: 4220:goto
  Dests: 4320:auto, 4350:ifthen
4320 G(4120) (1 6) IF E < E0 * 0.1 THEN 4370
  Origs: 4310:auto
  Dests: 4330:auto, 4370:ifthen
4330 G(4120) (0 3) C$ = "GREEN"
  Origs: 4320:auto
  Dests: 4340:auto
4340 G(4120) (0 2) GOTO 4380
  Origs: 4330:auto
  Dests: 4380:goto
4350 G(4120) (0 3) C$ = "RED"
     G(4120) (0 2) GOTO 4380
  Origs: 4310:ifthen
  Dests: 4380:goto
4370 G(4120) (0 3) C$ = "YELLOW"
  Origs: 4320:ifthen
  Dests: 4380:auto
4380 G(4120) F(I:4120,J:4130) (1 4) IF D(2) >= 0 THEN 4430
  Origs: 4290:goto, 4340:goto, 4350:goto, 4370:auto
  Dests: 4390:auto, 4430:ifthen
4390 G(4120) F(I:4120,J:4130) (0 2) PRINT
     G(4120) F(I:4120,J:4130) (0 2) PRINT "*** SHORT RANGE SENSORS ARE OUT ***"
     G(4120) F(I:4120,J:4130) (0 2) PRINT
  Origs: 4380:auto
  Dests: 4420:auto
4420 G(4120) F(I:4120,J:4130) (0 2) GOTO 4530
  Origs: 4390:auto
  Dests: 4530:goto
4430 G(4120) F(I:4120,J:4130) (0 3) O1$ = "----------------------------"
  Origs: 4380:ifthen
  Dests: 4435:auto
4435 G(4120) F(I:4120,J:4130) (0 2) PRINT O1$
  Origs: 4430:auto
  Dests: 4440:auto
4440 G(4120) F(I:4120,J:4130) (0 3) O2$ = " \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"
  Origs: 4435:auto
  Dests: 4445:auto
4445 G(4120) F(I:4120,J:4130) (0 19) PRINT USING O2$, MID(Q$, 1, 3), MID(Q$, 4, 3), MID(Q$, 7, 3), MID(Q$, 10, 3), MID(Q$, 13, 3), MID(Q$, 16, 3), MID(Q$, 19, 3), MID(Q$, 22, 3)
  Origs: 4440:auto
  Dests: 4450:auto
4450 G(4120) F(I:4120,J:4130) (0 4) O3$ = O2$ + "        STARDATE        #####"
  Origs: 4445:auto
  Dests: 4455:auto
4455 G(4120) F(I:4120,J:4130) (0 20) PRINT USING O3$, MID(Q$, 25, 3), MID(Q$, 28, 3), MID(Q$, 31, 3), MID(Q$, 34, 3), MID(Q$, 37, 3), MID(Q$, 40, 3), MID(Q$, 43, 3), MID(Q$, 46, 3), T
  Origs: 4450:auto
  Dests: 4460:auto
4460 G(4120) F(I:4120,J:4130) (0 4) O4$ = O2$ + "        CONDITION      \    \"
  Origs: 4455:auto
  Dests: 4465:auto
4465 G(4120) F(I:4120,J:4130) (0 20) PRINT USING O4$, MID(Q$, 49, 3), MID(Q$, 52, 3), MID(Q$, 55, 3), MID(Q$, 58, 3), MID(Q$, 61, 3), MID(Q$, 64, 3), MID(Q$, 67, 3), MID(Q$, 70, 3), C$
  Origs: 4460:auto
  Dests: 4470:auto
4470 G(4120) F(I:4120,J:4130) (0 4) O5$ = O2$ + "        QUADRANT          # #"
  Origs: 4465:auto
  Dests: 4475:auto
4475 G(4120) F(I:4120,J:4130) (0 21) PRINT USING O5$, MID(R$, 1, 3), MID(R$, 4, 3), MID(R$, 7, 3), MID(R$, 10, 3), MID(R$, 13, 3), MID(R$, 16, 3), MID(R$, 19, 3), MID(R$, 22, 3), Q1, Q2
  Origs: 4470:auto
  Dests: 4480:auto
4480 G(4120) F(I:4120,J:4130) (0 4) O6$ = O2$ + "        SECTOR            # #"
  Origs: 4475:auto
  Dests: 4485:auto
4485 G(4120) F(I:4120,J:4130) (0 21) PRINT USING O6$, MID(R$, 25, 3), MID(R$, 28, 3), MID(R$, 31, 3), MID(R$, 34, 3), MID(R$, 37, 3), MID(R$, 40, 3), MID(R$, 43, 3), MID(R$, 46, 3), S1, S2
  Origs: 4480:auto
  Dests: 4490:auto
4490 G(4120) F(I:4120,J:4130) (0 4) O7$ = O2$ + "        TOTAL ENERGY   ######"
  Origs: 4485:auto
  Dests: 4495:auto
4495 G(4120) F(I:4120,J:4130) (0 20) PRINT USING O7$, MID(R$, 49, 3), MID(R$, 52, 3), MID(R$, 55, 3), MID(R$, 58, 3), MID(R$, 61, 3), MID(R$, 64, 3), MID(R$, 67, 3), MID(R$, 70, 3), E
  Origs: 4490:auto
  Dests: 4500:auto
4500 G(4120) F(I:4120,J:4130) (0 4) O8$ = O2$ + "        PHOTON TORPEDOES  ###"
  Origs: 4495:auto
  Dests: 4505:auto
4505 G(4120) F(I:4120,J:4130) (0 20) PRINT USING O8$, MID(S$, 1, 3), MID(S$, 4, 3), MID(S$, 7, 3), MID(S$, 10, 3), MID(S$, 13, 3), MID(S$, 16, 3), MID(S$, 19, 3), MID(S$, 22, 3), P
  Origs: 4500:auto
  Dests: 4510:auto
4510 G(4120) F(I:4120,J:4130) (0 4) O9$ = O2$ + "        SHIELDS        ######"
  Origs: 4505:auto
  Dests: 4515:auto
4515 G(4120) F(I:4120,J:4130) (0 20) PRINT USING O9$, MID(S$, 25, 3), MID(S$, 28, 3), MID(S$, 31, 3), MID(S$, 34, 3), MID(S$, 37, 3), MID(S$, 40, 3), MID(S$, 43, 3), MID(S$, 46, 3), S
  Origs: 4510:auto
  Dests: 4520:auto
4520 G(4120) F(I:4120,J:4130) (0 2) PRINT O1$
  Origs: 4515:auto
  Dests: 4530:auto
4530 G(4120) F(I:4120,J:4130) (0 1) RETURN
  Origs: 4420:goto, 4520:auto
  Dests: 
4620 (0 1) REM *** LIBRARY COMPUTER CODE BEGINS HERE"
  Origs: 
  Dests: 
4630 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF D(8) >= 0 THEN 4660
  Origs: 1297:ifthen
  Dests: 4640:auto, 4660:ifthen
4640 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "COMPUTER DISABLED"
     G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 4630:auto
  Dests: 1270:goto
4660 G(3790) F(I:1910,I:3160,I:4900) (1 2) INPUT "CDMPUTER ACTIVE AND AWAITING COMMAND:"; A
  Origs: 4630:ifthen, 4730:goto
  Dests: 4680:auto
4680 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 0 GOTO 4740
  Origs: 4660:auto
  Dests: 4681:auto, 4740:ifthen
4681 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 1 GOTO 4830
  Origs: 4680:auto
  Dests: 4682:auto, 4830:ifthen
4682 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A = 2 GOTO 4880
  Origs: 4681:auto
  Dests: 4690:auto, 4880:ifthen
4690 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "FUNCTIONS AVAILABLE FROM COMPUTER"
  Origs: 4682:auto
  Dests: 4700:auto
4700 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   0 = CUMULATIVE GALACTIC RECORD"
  Origs: 4690:auto
  Dests: 4710:auto
4710 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   1 = STATUS REPORT"
  Origs: 4700:auto
  Dests: 4720:auto
4720 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   2 = PHOTON TORPEDO DATA"
  Origs: 4710:auto
  Dests: 4730:auto
4730 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 4660
  Origs: 4720:auto
  Dests: 4660:goto
4731 (0 1) REM *** CUMULATIVE GALACTIC RECORD CODE BEGINS HERE
  Origs: 
  Dests: 
4740 G(3790) F(I:1910,I:3160,I:4900) (0 5) PRINT "COMPUTER RECORD OF GALAXY FOR QUADRANT " Q1 "," Q2
  Origs: 4680:ifthen
  Dests: 4760:auto
4760 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "     1     2     3     4     5     6     7     8"
  Origs: 4740:auto
  Dests: 4770:auto
4770 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   ----- ----- ----- ----- ----- ----- ----- -----"
  Origs: 4760:auto
  Dests: 4780:auto
4780 G(3790) F(I:1910,I:3160,I:4780,I:4900) (1 3) FOR I = 1 TO 8
     WARNING: FOR/NEXT nesting exceeds limit 3
  Origs: 4770:auto
  Dests: 4790:fornext, 4810:fornext
4790 G(3790) F(I:1910,I:3160,I:4780,I:4900) (0 3) N1$ = "#   ###   ###   ###   ###   ###   ###   ###   ###"
  Origs: 4780:fornext
  Dests: 4795:auto
4795 G(3790) F(I:1910,I:3160,I:4780,I:4900) (0 12) PRINT USING N1$, I, Z(I, 1), Z(I, 2), Z(I, 3), Z(I, 4), Z(I, 5), Z(I, 6), Z(I, 7), Z(I, 8)
  Origs: 4790:auto
  Dests: 4800:auto
4800 G(3790) F(I:1910,I:3160,I:4780,I:4900) (0 2) PRINT "   ----- ----- ----- ----- ----- ----- ----- -----"
  Origs: 4795:auto
  Dests: 4810:auto
4810 G(3790) F(I:1910,I:3160,I:4780,I:4900) (0 1) NEXT I
  Origs: 4780:fornext, 4800:auto
  Dests: 4820:auto
4820 G(3790) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 4810:auto
  Dests: 1270:goto
4821 (0 1) REM *** STATUS REPORT CODE BEGINS HERE
  Origs: 
  Dests: 
4830 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT "   STATUS REPORT"
  Origs: 4681:ifthen
  Dests: 4840:auto
4840 G(3790) F(I:1910,I:3160,I:4900) (0 3) PRINT "NUMBER OF KLINGONS LEFT =" K9
  Origs: 4830:auto
  Dests: 4850:auto
4850 G(3790) F(I:1910,I:3160,I:4900) (0 5) V5 = (T0 + T9) - T
  Origs: 4840:auto
  Dests: 4851:auto
4851 G(3790) F(I:1910,I:3160,I:4900) (0 3) PRINT "NUMRER OF STARDATES LFFT ="; V5
  Origs: 4850:auto
  Dests: 4860:auto
4860 G(3790) F(I:1910,I:3160,I:4900) (0 3) PRINT "NUMBER OF STARBASES LEFT =" B9
  Origs: 4851:auto
  Dests: 4870:auto
4870 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 3560
     WARNING: Branch to line before GOSUB start
  Origs: 4860:auto
  Dests: 3560:goto
4880 G(3790) F(I:1910,I:3160,I:4900) (0 2) PRINT
     G(3790) F(I:1910,I:3160,I:4900) (0 3) H8 = 0
  Origs: 4682:ifthen
  Dests: 4900:auto
4881 (0 1) REM *** PHOTON TORPEDO DATA CODE BEGINS HERE
  Origs: 
  Dests: 
4900 G(3790) F(I:1910,I:3160,I:4900) (1 3) FOR I = 1 TO 3
     WARNING: FORNEXT length exceeds limit 40
  Origs: 4880:auto
  Dests: 4910:fornext, 5260:fornext
4910 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF K(I, 3) <= 0 THEN 5260
  Origs: 4900:fornext
  Dests: 4920:auto, 5260:ifthen
4920 G(3790) F(I:1910,I:3160,I:4900) (0 3) C1 = S1
     G(3790) F(I:1910,I:3160,I:4900) (0 3) A = S2
     G(3790) F(I:1910,I:3160,I:4900) (0 3) W1 = K(I, 1)
     G(3790) F(I:1910,I:3160,I:4900) (0 3) X = K(I, 2)
  Origs: 4910:auto
  Dests: 4960:auto
4960 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 5010
  Origs: 4920:auto
  Dests: 5010:goto
4970 G(3790) (0 10) PRINT "YOU ARE AT QUADRANT ( " Q1 "," Q2 " ) SECTOR ( " S1 "," S2 " )"
  Origs: 5300:ifthen
  Dests: 4990:auto
4990 G(3790) (4 5) INPUT "SHIP ANO TARGET COORDINATES ARE:"; C1, A, W1, X
  Origs: 4970:auto
  Dests: 5010:auto
5010 G(3790) F(I:1910,I:3160,I:4900) (0 4) X = X - A
     G(3790) F(I:1910,I:3160,I:4900) (0 4) A = C1 - W1
  Origs: 4960:goto, 4990:auto
  Dests: 5030:auto
5030 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF X < 0 THEN 3130
     WARNING: Branch to line before GOSUB start
  Origs: 5010:auto
  Dests: 3130:ifthen, 5031:auto
5031 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF A < 0 THEN 5190
  Origs: 5030:auto
  Dests: 5050:auto, 5190:ifthen
5050 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF X > 0 THEN 5070
  Origs: 5031:auto
  Dests: 5060:auto, 5070:ifthen
5060 G(3790) F(I:1910,I:3160,I:4900) (1 5) IF A = 0 THEN 3150
     WARNING: Branch to line before GOSUB start
  Origs: 5050:auto
  Dests: 3150:ifthen, 5070:auto
5070 G(3790) F(I:1910,I:3160,I:4900) (0 3) C1 = 1
  Origs: 5050:ifthen, 5060:auto
  Dests: 5080:auto
5080 G(3790) F(I:1910,I:3160,I:4900) (1 6) IF ABS(A) <= ABS(X) THEN 5110
  Origs: 5070:auto, 5150:goto
  Dests: 5085:auto, 5110:ifthen
5085 G(3790) F(I:1910,I:3160,I:4900) (0 12) V5 = C1 + (((ABS(A) - ABS(X)) + ABS(A)) / ABS(A))
  Origs: 5080:auto
  Dests: 5090:auto
5090 G(3790) F(I:1910,I:3160,I:4900) (0 3) PRINT "DIRECTION =" V5
  Origs: 5085:auto
  Dests: 5100:auto
5100 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 5240
  Origs: 5090:auto
  Dests: 5240:goto
5110 G(3790) F(I:1910,I:3160,I:4900) (0 8) PRINT "DIRECTION =" C1 + (ABS(A) / ABS(X))
  Origs: 5080:ifthen
  Dests: 5120:auto
5120 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 5240
  Origs: 5110:auto
  Dests: 5240:goto
5130 (1 4) IF A > 0 THEN 5170
  Origs: 
  Dests: 5140:auto, 5170:ifthen
5140 (1 4) IF X = 0 THEN 5190
  Origs: 5130:auto
  Dests: 5150:auto, 5190:ifthen
5150 (0 3) C1 = 5
     (0 3) GOTO 5080
  Origs: 5140:auto
  Dests: 5080:goto
5170 (0 3) C1 = 3
     (0 2) GOTO 5200
  Origs: 5130:ifthen
  Dests: 5200:goto
5190 G(3790) F(I:1910,I:3160,I:4900) (0 3) C1 = 7
  Origs: 5031:ifthen, 5140:ifthen
  Dests: 5200:auto
5200 G(3790) F(I:1910,I:3160,I:4900) (1 6) IF ABS(A) >= ABS(X) THEN 5230
  Origs: 5170:goto, 5190:auto
  Dests: 5210:auto, 5230:ifthen
5210 G(3790) F(I:1910,I:3160,I:4900) (0 12) PRINT "DIRECTION =" C1 + (((ABS(X) - ABS(A)) + ABS(X)) / ABS(X))
  Origs: 5200:auto
  Dests: 5220:auto
5220 G(3790) F(I:1910,I:3160,I:4900) (0 2) GOTO 5240
  Origs: 5210:auto
  Dests: 5240:goto
5230 G(3790) F(I:1910,I:3160,I:4900) (0 8) PRINT "DIRECTION =" C1 + (ABS(X) / ABS(A))
  Origs: 5200:ifthen
  Dests: 5240:auto
5240 G(3790) F(I:1910,I:3160,I:4900) (0 4) PRINT "DISTANCE =" SQR(X ** 2 * A ** 2)
  Origs: 5100:goto, 5120:goto, 5220:goto, 5230:auto
  Dests: 5250:auto
5250 G(3790) F(I:1910,I:3160,I:4900) (1 4) IF H8 = 1 THEN 5320
  Origs: 5240:auto
  Dests: 5260:auto, 5320:ifthen
5260 G(3790) F(I:1910,I:3160,I:4900) (0 1) NEXT I
  Origs: 4900:fornext, 4910:ifthen, 5250:auto
  Dests: 5270:auto
5270 G(3790) (0 3) H8 = 0
  Origs: 5260:auto
  Dests: 5280:auto
5280 G(3790) (1 2) INPUT "DO YOU WANT TO USE THE CALCULATOR"; A$
  Origs: 5270:auto, 5310:ifthen
  Dests: 5300:auto
5300 G(3790) (1 5) IF A$ = "YES" THEN 4970
  Origs: 5280:auto
  Dests: 4970:ifthen, 5310:auto
5310 G(3790) (1 5) IF A$ <> "NO" THEN 5280
  Origs: 5300:auto
  Dests: 5280:ifthen, 5320:auto
5320 G(3790) F(I:1910,I:3160,I:4900) (0 3) GOTO 1270
     WARNING: Branch to line before GOSUB start
  Origs: 5250:ifthen, 5310:auto
  Dests: 1270:goto
5321 (0 1) REM *** END OF. LIBRARY COMPUTER CODE
  Origs: 
  Dests: 
5380 G(5380) (0 4) R1 = INT(RND(1) * 8 + 1)
     G(5380) (0 4) R2 = INT(RND(1) * 8 + 1)
     G(5380) (0 3) A$ = "   "
     G(5380) (0 3) Z1 = R1
     G(5380) (0 3) Z2 = R2
     WARNING: Inconsistent GOSUB origins
  Origs: 1030:gosub, 1130:gosub, 1200:gosub, 5440:ifthen
  Dests: 5430:auto
5430 G(5380) (0 2) GOSUB 5680
  Origs: 5380:auto
  Dests: 5440:auto, 5690:gosub
5440 G(5380) (1 5) IF Z3 = 0 THEN 5380
  Origs: 5430:auto
  Dests: 5380:ifthen, 5450:auto
5450 G(5380) (0 1) RETURN
  Origs: 5440:auto
  Dests: 
5510 (0 1) REM *** INSERTION IN STRING ARRAY FOR QUADRANT ***
  Origs: 
  Dests: 
5520 G(5520) (0 8) S8 = Z1 * 24 + Z2 * 3 - 26
     G(5520) (1 4) IF S8 > 72 THEN 5560
  Origs: 1010:gosub, 1070:gosub, 1170:gosub, 1240:gosub, 1850:gosub, 2110:gosub, 3390:gosub, 3760:gosub
  Dests: 5540:auto, 5560:ifthen
5540 G(5520) (0 7) Q$ = LEFT(Q$, S8 - 1) + A$ + RIGHT(Q$, S8 + 3)
  Origs: 5520:auto
  Dests: 5550:auto
5550 G(5520) (0 2) GOTO 5600
  Origs: 5540:auto
  Dests: 5600:goto
5560 G(5520) (1 4) IF S8 > 144 THEN 5590
  Origs: 5520:ifthen
  Dests: 5570:auto, 5590:ifthen
5570 G(5520) (0 7) R$ = LEFT(R$, S8 - 73) + A$ + RIGHT(R$, S8 - 69)
  Origs: 5560:auto
  Dests: 5580:auto
5580 G(5520) (0 2) GOTO 5600
  Origs: 5570:auto
  Dests: 5600:goto
5590 G(5520) (0 7) S$ = LEFT(S$, S8 - 145) + A$ + RIGHT(S$, S8 - 141)
  Origs: 5560:ifthen
  Dests: 5600:auto
5600 G(5520) (0 1) RETURN
  Origs: 5550:goto, 5580:goto, 5590:auto
  Dests: 
5610 (0 1) REM *** PRINTS DEVICE NAME FROM ARRAY***
  Origs: 
  Dests: 
5620 G(5620) (0 5) S8 = R1 * 12 - 11
     G(5620) (1 4) IF S8 > 72 THEN 5660
  Origs: 1710:gosub, 1780:gosub, 3620:gosub
  Dests: 5640:auto, 5660:ifthen
5640 G(5620) (0 3) PRINT MID(D$, S8, 11),
     G(5620) (0 2) GOTO 5670
  Origs: 5620:auto
  Dests: 5670:goto
5660 G(5620,5660) (0 3) PRINT MID(E$, S8 - 72, 11),
     WARNING: Inconsistent GOSUB origins
     WARNING: Multiple GOSUB entry points
  Origs: 3320:gosub, 5620:ifthen
  Dests: 5670:auto
5670 G(5620,5660) (0 1) RETURN
     WARNING: Multiple GOSUB entry points
  Origs: 5640:goto, 5660:auto
  Dests: 
5680 (0 1) REM ***STRING COMPARISON IN QUADRANT ARRAY*** 
  Origs: 
  Dests: 
5690 G(5690) (0 8) S8 = Z1 * 24 + Z2 * 3 - 26
     G(5690) (0 3) Z3 = 0
     G(5690) (1 4) IF S8 > 72 THEN 5750
  Origs: 3040:gosub, 3100:gosub, 3230:gosub, 4180:gosub, 5430:gosub
  Dests: 5720:auto, 5750:ifthen
5720 G(5690) (1 5) IF MID(Q$, S8, 3) <> A$ THEN 5810
  Origs: 5690:auto
  Dests: 5730:auto, 5810:ifthen
5730 G(5690) (0 3) Z3 = 1
     G(5690) (0 2) GOTO 5810
  Origs: 5720:auto
  Dests: 5810:goto
5750 G(5690) (1 4) IF S8 > 144 THEN 5790
  Origs: 5690:ifthen
  Dests: 5760:auto, 5790:ifthen
5760 G(5690) (1 5) IF MID(R$, S8 - 72, 3) <> A$ THEN 5810
  Origs: 5750:auto
  Dests: 5770:auto, 5810:ifthen
5770 G(5690) (0 3) Z3 = 1
     G(5690) (0 2) GOTO 5810
  Origs: 5760:auto
  Dests: 5810:goto
5790 G(5690) (1 5) IF MID(S$, S8 - 144, 3) <> A$ THEN 5810
  Origs: 5750:ifthen
  Dests: 5800:auto, 5810:ifthen
5800 G(5690) (0 3) Z3 = 1
  Origs: 5790:auto
  Dests: 5810:auto
5810 G(5690) (0 1) RETURN
  Origs: 5720:ifthen, 5730:goto, 5760:ifthen, 5770:goto, 5790:ifthen, 5800:auto
  Dests: 
5820 (0 2) & "     INSTRUCTIONS"
  Origs: 220:goto
  Dests: 5821:auto
5821 (0 2) &
     (0 2) & "THE GALAXY IS DIVIDED INTO AN 8.8 QUADRANT GRID"
  Origs: 5820:auto
  Dests: 5822:auto
5822 (0 2) & "WHICH IS IN TURN DIVIDED INTO AN 8.8 SECTOR GRID."
  Origs: 5821:auto
  Dests: 5823:auto
5823 (0 2) &
     (0 2) & "THE CAST OF CHARACTERS IS AS FOLLOWS:"
  Origs: 5822:auto
  Dests: 5830:auto
5830 (0 2) & "<*> = ENTERPRISE"
  Origs: 5823:auto
  Dests: 5840:auto
5840 (0 2) & "+++ = KLINGON"
  Origs: 5830:auto
  Dests: 5850:auto
5850 (0 2) & ">!< = STARRASE"
     (0 2) & " *  = STAR"
  Origs: 5840:auto
  Dests: 5870:auto
5870 (0 2) & "COMMANO 0 = WARP ENGINE CONTROL:"
  Origs: 5850:auto
  Dests: 5880:auto
5880 (0 2) & "  COURSE IS IN A CIRCULAR NUMERICAL       4  3  2"
  Origs: 5870:auto
  Dests: 5890:auto
5890 (0 2) & "  VECTOR ARRANGEMENT AS SHOWN.             \ ^ /"
  Origs: 5880:auto
  Dests: 5900:auto
5900 (0 2) & "  INTEGER AND REAL VALUE MAY BE             \^/"
  Origs: 5890:auto
  Dests: 5910:auto
5910 (0 2) & "  USED. THEREFORE COURSE 1.5 IS          5 --- 1"
  Origs: 5900:auto
  Dests: 5920:auto
5920 (0 2) & "  HALF WAY BETWEEN 1 AND 2.                 /^\"
  Origs: 5910:auto
  Dests: 5930:auto
5930 (0 2) & "                                           / ^ \"
  Origs: 5920:auto
  Dests: 5940:auto
5940 (0 2) & "  A VECTOR OF 9 IS UNDEFINED, BUT         6  7  8"
  Origs: 5930:auto
  Dests: 5950:auto
5950 (0 2) & "  VALUES MAY APPROACH 9."
  Origs: 5940:auto
  Dests: 5960:auto
5960 (0 2) & "                                          COURSE"
  Origs: 5950:auto
  Dests: 5970:auto
5970 (0 2) & "  ONE WARP FACTOR IS THE SIZE OF"
  Origs: 5960:auto
  Dests: 5980:auto
5980 (0 2) & "  ONE OUADRANT. THEREFORE TO GET"
  Origs: 5970:auto
  Dests: 5990:auto
5990 (0 2) & "  FROM QUADRANT 6.5 TO 5.5 YOU WOULD"
  Origs: 5980:auto
  Dests: 6000:auto
6000 (0 2) & "  USE COURSE 3, WARP FACTOR 1"
  Origs: 5990:auto
  Dests: 6005:auto
6005 (0 2) &
  Origs: 6000:auto
  Dests: 6010:auto
6010 (0 2) & "COMMAND 1 = SHORT RANGE SENSOR SCAN"
  Origs: 6005:auto
  Dests: 6020:auto
6020 (0 2) & "  PRINT THE QUADRANT YOU ARE CURRENTLY IN, INCLUDING"
  Origs: 6010:auto
  Dests: 6030:auto
6030 (0 2) & "  STARS. KLINGONS. STARBASE, AND THE ENTERPRISE, ALONG"
  Origs: 6020:auto
  Dests: 6040:auto
6040 (0 2) & "  WITH OTHER PERTINATE INFORMATION."
  Origs: 6030:auto
  Dests: 6045:auto
6045 (0 2) &
     (0 2) & "COMMAND 2 = LONG RANGE SENSOR SCAN"
  Origs: 6040:auto
  Dests: 6060:auto
6060 (0 2) & "  SHOWS CONDITIONS IN SPACE FOR ONE QUADRANT ON EACH SIDE"
  Origs: 6045:auto
  Dests: 6070:auto
6070 (0 2) & "  OF THE ENTERPRISE IN THE MIDDLE OF THE SCAN. THE SCAN"
  Origs: 6060:auto
  Dests: 6080:auto
6080 (0 2) & "  IS CODED IN THE FORM XXX. WHERE THF UNITS DIGIT IS THE"
  Origs: 6070:auto
  Dests: 6090:auto
6090 (0 2) & "  NUMBER OF STARS. THE TENS DIGIT TS THE NUMBER OF STAR-"
  Origs: 6080:auto
  Dests: 6100:auto
6100 (0 2) & "  BASES. THE HUNDREDS DIGIT IS THE NUMBER OF KLINGONS."
  Origs: 6090:auto
  Dests: 6110:auto
6110 (0 2) &
     (0 2) & "COMMAND 3 = PHASER CONTROL"
  Origs: 6100:auto
  Dests: 6120:auto
6120 (0 2) & "  ALLOWS YOU TO DESTROY THE KLINGONS BY HITTING HIM WITH"
  Origs: 6110:auto
  Dests: 6130:auto
6130 (0 2) & "  SUITABLY LARGE NUMBERS OF ENERGY UNITS. TO DEPLETE HIS"
  Origs: 6120:auto
  Dests: 6140:auto
6140 (0 2) & "  SHIELD POWER. KEEP IN MIND THAT WHEN YOU SHOOT AT HIM,"
  Origs: 6130:auto
  Dests: 6150:auto
6150 (0 2) & "  HE GONNA SHOOT AT YOU, TOO!"
  Origs: 6140:auto
  Dests: 6160:auto
6160 (0 2) &
     (0 2) & "COMMAND 4 = PHOTON TORPEDO CONTROL"
  Origs: 6150:auto
  Dests: 6170:auto
6170 (0 2) & "  COURSE IS THE SAME AS USED IN WARP ENGINE CONTROL"
  Origs: 6160:auto
  Dests: 6180:auto
6180 (0 2) & "  IF YOU HIT THE KLINGON HE IS DESTROYED AND CANNOT FIRE"
  Origs: 6170:auto
  Dests: 6190:auto
6190 (0 2) & "  BACK AT YOU. IF YOU MISS, YOU ARE SUBJECT TO HIS"
  Origs: 6180:auto
  Dests: 6200:auto
6200 (0 2) & "  PHASER FIRE."
  Origs: 6190:auto
  Dests: 6210:auto
6210 (0 2) &
     (0 2) & "  NOTE: THE LIBRARY COMPUTER (COMMAND 7) HAS AN OPTTQN"
  Origs: 6200:auto
  Dests: 6220:auto
6220 (0 2) & " TO COMPUTE TORPEDO TRAJECTORY FOR YOU (OPTION 2)."
  Origs: 6210:auto
  Dests: 6230:auto
6230 (0 2) & "COMMAND 5 = SHIELD CONTROL"
  Origs: 6220:auto
  Dests: 6240:auto
6240 (0 2) & "  DEFINES NUMBER OF ENERGY UNITS TO BE ASSIGNED TO SHIELDS"
  Origs: 6230:auto
  Dests: 6250:auto
6250 (0 2) & "  ENERGY IS TAKEN FROM TOTAL SHIP'S ENERGY."
  Origs: 6240:auto
  Dests: 6251:auto
6251 (0 2) & "  NOTE THAT TOTAL ENERGY INCLUDES SHIELD ENERGY."
  Origs: 6250:auto
  Dests: 6260:auto
6260 (0 2) &
     (0 2) & "COMMAND 6 = DAMAGE CONTROL REPORT"
  Origs: 6251:auto
  Dests: 6270:auto
6270 (0 2) & "  GIVES STATE OF REPAIRS OF ALL DEVICES. A STATE OF RFPAIR"
  Origs: 6260:auto
  Dests: 6280:auto
6280 (0 2) & "  LESS THAN ZERO SHOWS THAT THE DEVICE IS TEMPORARALY"
  Origs: 6270:auto
  Dests: 6290:auto
6290 (0 2) & "  DAMAGED."
  Origs: 6280:auto
  Dests: 6300:auto
6300 (0 2) &
     (0 2) & "COMMAND 7 = LIBRARY COMPUTER"
  Origs: 6290:auto
  Dests: 6310:auto
6310 (0 2) & "  THE LIBRARY COMPUTER CONTAINS THREE OPTIONS:"
  Origs: 6300:auto
  Dests: 6320:auto
6320 (0 2) & "    OPTION 0 = CUMULATIVE GALACTIC RECORD"
  Origs: 6310:auto
  Dests: 6330:auto
6330 (0 2) & "      WHICH SHOWS COMPUTER MEMORY OF THE RESULTS"
  Origs: 6320:auto
  Dests: 6340:auto
6340 (0 2) & "      OF ALL PREVIOUS LONG RANGE SENSOR SCANS"
  Origs: 6330:auto
  Dests: 6350:auto
6350 (0 2) & "    OPTION 1 = STATUS REPORT"
  Origs: 6340:auto
  Dests: 6360:auto
6360 (0 2) & "      WHICH SHOWS NUMBER OF KLINGONS, STARDATES,"
  Origs: 6350:auto
  Dests: 6370:auto
6370 (0 2) & "      AND STARBASES LEFT."
  Origs: 6360:auto
  Dests: 6380:auto
6380 (0 2) & "    OPTION 2 = PHOTON TORPEDO DATA"
  Origs: 6370:auto
  Dests: 6390:auto
6390 (0 2) & "      GIVES TRAJECTORY AND DISTANCE BETWEEN THE"
  Origs: 6380:auto
  Dests: 6400:auto
6400 (0 2) & "      ENTERPRISE AND ALL KLINGONS IN YOUR QUADRANT"
  Origs: 6390:auto
  Dests: 6500:auto
6500 (0 3) GOTO 230
  Origs: 6400:auto
  Dests: 240:goto
6510 G(3790) F(I:1910,I:2680,I:3160,I:4900) (0 1) END
     WARNING: Terminating statement in GOSUB
     WARNING: Terminating statement in FOR/NEXT
  Origs: 1298:ifthen, 4110:goto
  Dests: :stop

Unreachable code:

1510: IF K3 <= 0 THEN 1560
1520: GOSUB 3790
1530: IF K3 <= 0 THEN 1560
1540: IF S < 0 THEN 4000
1550: GOTO 1610
1560: IF E > 0 THEN 1610
1570: IF S < 1 THEN 3920
1580: PRINT "YOU HAVE" E " UNITS OF ENERGY"
1590: PRINT "SUGGEST YOU GET SOME FROM YOUR SHIELDS WHICH HAVE" S " UNITS LEFT"
1600: GOTO 1270
1610: FOR I = 1 TO 8
1610.1: IF D(I) > 0 THEN 1640
1630: D(I) = 1
1640: NEXT I
1650: IF RND(1) > 0.2 THEN 1810
1660: B1 = INT(RND(1) * 8 + 1)
1670: IF RND(1) >= 0.5 THEN 1750
1680: D(B1) = D(B1) - (RND(1) * 5 + 1)
1690: PRINT
1690.1: PRINT "DAMAGE CONTROL REPORT:";
1710: GOSUB 5610
1720: PRINT " DAMAGED"
1720.1: PRINT
1720.2: GOTO 1810
1750: D(B1) = D(B1) + (RND(1) * 5 + 1)
1760: PRINT
1760.1: PRINT "DAMAGE CONTROl REPORT:";
1780: GOSUB 5610
1790: PRINT " STATE OF REPAIR IMPROVED"
1790.1: PRINT
3070: A$ = "***"
3070.1: Z1 = X
3070.2: Z2 = Y
3100: GOSUB 5680
3110: IF Z3 = 0 THEN 3220
3120: PRINT "*** KLINGON DESTROYED ***"
3920: PRINT "THE ENTERPRISE IS DFAD IN SPACE. IF YOU SURVIVE ALL IMPENDING"
3930: PRINT "ATTACKS YOU WILL RE DEMOTED TO THE RANK OF PRIVATE"
3940: IF K3 <= 0 THEN 4020
3950: GOSUB 3790
3960: GOTO 3940
5130: IF A > 0 THEN 5170
5140: IF X = 0 THEN 5190
5150: C1 = 5
5150.1: GOTO 5080
5170: C1 = 3
5170.1: GOTO 5200

