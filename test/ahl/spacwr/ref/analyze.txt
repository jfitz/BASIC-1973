Statistics:

Number of lines: 537
Number of valid statements: 631
Number of comments: 28
Number of executable statements: 629

Complexity:

Comment density: 0.044
Comprehension effort: 2259
McCabe complexity: 140
Halstead complexity:
 length: 3488
 volume: 21866.608
 difficulty: 67.971
 effort: 1486305.845
 language: 4.733
 intelligence: 321.703
 time: 1376.209

(0 1) 100 REM *** PROGRAM SIMULATES TV PROGRAM STARTREK
  Origs: 
  Dests: 110
(0 1) 110 REM *** WRITTEN BY MIKE MAYFIELD, CENTERLINE ENGINEERING
  Origs: 100
  Dests: 120
(0 1) 120 REM *** DEBUGGING AND MINOR REVISIONS BY LEO LAVERDURE, IRA POTEL,
  Origs: 110
  Dests: 130
(0 1) 130 REM *** MARY COLE, AND DAVE AHL OF DIGITAL
  Origs: 120
  Dests: 170
(0 1) 170 RANDOMIZE
  Origs: 130
  Dests: 180
(0 2) 180 PRINT "                  * * * STAR TREK * * *"
(0 2)     PRINT
  Origs: 170
  Dests: 200
(1 2) 200 INPUT "DO YOU WANT INSTRUCTIONS (THEY'RE LONG!)"; A$
  Origs: 180
  Dests: 210
(1 4) 210 IF A$ <> "YES" THEN 230
  Origs: 200
  Dests: 220, 230
(0 2) 220 GOTO 5820
  Origs: 210
  Dests: 5820
(0 1) 230 REM *** PROGRAM BEGINS HERE
  Origs: 210, 4030, 4107, 6500
  Dests: 240
(0 3) 240 Z$, R$, Q$ = "                                                                          "
  Origs: 230
  Dests: 260
(0 6) 260 DIM G(8, 8), C(9, 2), K(3, 3), N(3), Z(8, 8)
  Origs: 240
  Dests: 290
(0 5) 290 T0, T = INT(RND(1) * 20 + 20) * 100
  Origs: 260
  Dests: 300
(0 3) 300 T9 = 30
(0 3)     D0 = 0
(0 3)     E0, E = 3000
(0 3)     P0, P = 10
(0 3)     S9 = 200
(0 3)     S, S8 = 0
  Origs: 290
  Dests: 360
(0 3) 360 DEF FND(D) = SQR((K(I, 1) - S1) ** 2 + (K(I, 2) - S2) ** 2)
  Origs: 300
  Dests: 370
(0 4) 370 Q1 = INT(RND(1) * 8 + 1)
  Origs: 360
  Dests: 380
(0 4) 380 Q2 = INT(RND(1) * 8 + 1)
  Origs: 370
  Dests: 390
(0 4) 390 S1 = INT(RND(1) * 8 + 1)
  Origs: 380
  Dests: 400
(0 4) 400 S2 = INT(RND(1) * 8 + 1)
  Origs: 390
  Dests: 410
(0 4) 410 T7 = TIME(0)
  Origs: 400
  Dests: 420
(0 4) 420 C(2, 1), C(3, 1), C(4, 1), C(4, 2), C(5, 2), C(6, 2) = -1
  Origs: 410
  Dests: 430
(0 3) 430 C(1, 1), C(3, 2), C(5, 1), C(7, 2), C(9, 1) = 0
  Origs: 420
  Dests: 440
(0 3) 440 C(1, 2), C(2, 2), C(6, 1), C(7, 1), C(8, 1), C(8, 2), C(9, 2) = 1
  Origs: 430
  Dests: 450
(0 1) 450 REM MAT D=ZER
  Origs: 440
  Dests: 460
(0 3) 460 D$ = "WARP ENGINESS.R.SENSORSL.R.SENSORSPHASER CNTRL"
  Origs: 450
  Dests: 470
(0 4) 470 D$ = D$ + "PHOTON TUBESDAMAGE CNTRL"
  Origs: 460
  Dests: 480
(0 3) 480 E$ = "SHIELD CNTRLCOMPUTER"
  Origs: 470
  Dests: 490
(0 3) 490 B9, K9 = 0
  Origs: 480
  Dests: 491
(0 1) 491 REM *** SETS UP WHAT EXISTS IN GALAXY
  Origs: 490
  Dests: 500
(1 3) 500 FOR I = 1 TO 8
  Origs: 491
  Dests: 510
(1 3) 510 FOR J = 1 TO 8
  Origs: 500
  Dests: 520
(0 4) 520 R1 = RND(1)
  Origs: 510
  Dests: 530
(1 4) 530 IF R1 > .98 THEN 580
  Origs: 520
  Dests: 540, 580
(1 4) 540 IF R1 > .95 THEN 610
  Origs: 530
  Dests: 550, 610
(1 4) 550 IF R1 > .8 THEN 640
  Origs: 540
  Dests: 560, 640
(0 3) 560 K3 = 0
(0 2)     GOTO 660
  Origs: 550
  Dests: 660
(0 3) 580 K3 = 3
(0 4)     K9 = K9 + 3
(0 2)     GOTO 660
  Origs: 530
  Dests: 660
(0 3) 610 K3 = 2
(0 4)     K9 = K9 + 2
(0 2)     GOTO 660
  Origs: 540
  Dests: 660
(0 3) 640 K3 = 1
(0 4)     K9 = K9 + 1
  Origs: 550
  Dests: 660
(0 4) 660 R1 = RND(1)
  Origs: 560, 580, 610, 640
  Dests: 670
(1 4) 670 IF R1 > .96 THEN 700
  Origs: 660
  Dests: 680, 700
(0 3) 680 B3 = 0
(0 2)     GOTO 720
  Origs: 670
  Dests: 720
(0 3) 700 B3 = 1
(0 4)     B9 = B9 + 1
  Origs: 670
  Dests: 720
(0 4) 720 S3 = INT(RND(1) * 8 + 1)
  Origs: 680, 700
  Dests: 730
(0 8) 730 G(I, J) = K3 * 100 + B3 * 10 + S3
  Origs: 720
  Dests: 740
(0 3) 740 Z(I, J) = 0
  Origs: 730
  Dests: 750
(0 1) 750 NEXT J
  Origs: 740
  Dests: 760
(0 1) 760 NEXT I
  Origs: 750
  Dests: 770
(0 3) 770 K7 = K9
  Origs: 760
  Dests: 775
(0 2) 775 PRINT
(0 2)     PRINT
  Origs: 770
  Dests: 780
(0 8) 780 PRINT "YOU MUST DESTROY" K9 " KLINGONS IN" T9 " STARDATES WITH " B9 " STARBASES"
  Origs: 775
  Dests: 790
(1 4) 790 IF B9 > 0 THEN 810
  Origs: 780
  Dests: 800, 810
(0 3) 800 G(6, 3) = 114
  Origs: 790
  Dests: 810
(0 3) 810 K3, B3, S3 = 0
  Origs: 790, 800, 2320
  Dests: 820
(1 13) 820 IF Q1 < 1 OR Q1 > 8 OR Q2 < 1 OR Q2 > 8 THEN 990
  Origs: 810
  Dests: 830, 990
(0 4) 830 X = G(Q1, Q2) * .01
  Origs: 820
  Dests: 840
(0 4) 840 K3 = INT(X)
  Origs: 830
  Dests: 850
(0 4) 850 B3 = INT((X - K3) * 10)
  Origs: 840
  Dests: 860
(0 6) 860 S3 = G(Q1, Q2) - INT(G(Q1, Q2) * .1) + 10
  Origs: 850
  Dests: 870
(1 4) 870 IF K3 = 0 THEN 910
  Origs: 860
  Dests: 880, 910
(1 4) 880 IF S > 200 THEN 910
  Origs: 870
  Dests: 890, 910
(0 2) 890 PRINT "COMBAT AREA      CONDITION RED"
  Origs: 880
  Dests: 900
(0 2) 900 PRINT "   SHIELDS DANGEROUSLY LOW"
  Origs: 890
  Dests: 910
(0 4) 910 MAT K = ZER
  Origs: 870, 880, 900
  Dests: 920
(1 3) 920 FOR I = 1 TO 3
  Origs: 910
  Dests: 930
(0 3) 930 K(I, 3) = 0
  Origs: 920
  Dests: 940
(0 1) 940 NEXT I
  Origs: 930
  Dests: 950
(0 3) 950 Q$ = Z$
(0 3)     R$ = Z$
  Origs: 940
  Dests: 970
(0 4) 970 S$ = MID(Z$, 1, 48)
  Origs: 950
  Dests: 971
(0 1) 971 REM *** PUT ENTERPRISE SOMEWHERE
  Origs: 970
  Dests: 980
(0 3) 980 A$ = "<*>"
  Origs: 971
  Dests: 990
(0 3) 990 Z1 = S1
  Origs: 820, 980
  Dests: 1000
(0 3) 1000 Z2 = S2
  Origs: 990
  Dests: 1010
(0 2) 1010 GOSUB 5510
  Origs: 1000
  Dests: 1020, 5510
(1 3) 1020 FOR I = 1 TO K3
  Origs: 1010
  Dests: 1030
(0 2) 1030 GOSUB 5380
  Origs: 1020
  Dests: 1031, 5380
(0 1) 1031 REM *** PUT KLINGONS SOMEWHERE
  Origs: 1030
  Dests: 1040
(0 3) 1040 A$ = "+++"
  Origs: 1031
  Dests: 1050
(0 3) 1050 Z1 = R1
  Origs: 1040
  Dests: 1060
(0 3) 1060 Z2 = R2
  Origs: 1050
  Dests: 1070
(0 2) 1070 GOSUB 5510
  Origs: 1060
  Dests: 1080, 5510
(0 3) 1080 K(I, 1) = R1
(0 3)      K(I, 2) = R2
(0 3)      K(I, 3) = S9
  Origs: 1070
  Dests: 1110
(0 1) 1110 NEXT I
  Origs: 1080
  Dests: 1120
(1 3) 1120 FOR I = 1 TO B3
  Origs: 1110
  Dests: 1130
(0 2) 1130 GOSUB 5380
  Origs: 1120
  Dests: 1131, 5380
(0 1) 1131 REM *** PUT STARBASE(S) SOMEWHERE
  Origs: 1130
  Dests: 1140
(0 3) 1140 A$ = ">1<"
(0 3)      Z1 = R1
(0 3)      Z2 = R2
  Origs: 1131
  Dests: 1170
(0 2) 1170 GOSUB 5510
  Origs: 1140
  Dests: 1180, 5510
(0 1) 1180 NEXT I
  Origs: 1170
  Dests: 1190
(1 3) 1190 FOR I = 1 TO S3
  Origs: 1180
  Dests: 1200
(0 2) 1200 GOSUB 5380
  Origs: 1190
  Dests: 1201, 5380
(0 1) 1201 REM *** PUT STARS SOMEWHERE
  Origs: 1200
  Dests: 1210
(0 3) 1210 A$ = " * "
(0 3)      Z1 = R1
(0 3)      Z2 = R2
  Origs: 1201
  Dests: 1240
(0 2) 1240 GOSUB 5510
  Origs: 1210
  Dests: 1250, 5510
(0 1) 1250 NEXT I
  Origs: 1240
  Dests: 1260
(0 2) 1260 GOSUB 4111
  Origs: 1250, 1291, 2160
  Dests: 1270, 4111
(1 2) 1270 INPUT "COMMAND:"; A
  Origs: 1260, 1400, 1430, 1600, 2360, 2500, 2560, 2790, 2820, 2850, 2880, 3450, 3480, 3510, 3550, 3580, 3660, 3680, 4640, 4820, 5320
  Dests: 1290
(1 4) 1290 IF A = 0 GOTO 1410
  Origs: 1270
  Dests: 1291, 1410
(1 5) 1291 IF A = 1 GOTO 1260
  Origs: 1290
  Dests: 1260, 1292
(1 4) 1292 IF A = 2 GOTO 2330
  Origs: 1291
  Dests: 1293, 2330
(1 4) 1293 IF A = 3 GOTO 2530
  Origs: 1292
  Dests: 1294, 2530
(1 4) 1294 IF A = 4 GOTO 2800
  Origs: 1293
  Dests: 1295, 2800
(1 4) 1295 IF A = 5 GOTO 3460
  Origs: 1294
  Dests: 1296, 3460
(1 4) 1296 IF A = 6 GOTO 3560
  Origs: 1295
  Dests: 1297, 3560
(1 4) 1297 IF A = 7 GOTO 4630
  Origs: 1296
  Dests: 1298, 4630
(1 4) 1298 IF A = 8 GOTO 6510
  Origs: 1297
  Dests: 1310, 6510
(0 2) 1310 PRINT
(0 2)      PRINT "   0 = SET COURSE"
  Origs: 1298
  Dests: 1320
(0 2) 1320 PRINT "   1 = SHORT RANGE SENSOR SCAN"
  Origs: 1310
  Dests: 1330
(0 2) 1330 PRINT "   2 = LONG RANGE SENSOR SCAN"
  Origs: 1320
  Dests: 1340
(0 2) 1340 PRINT "   3 = FIRE PHASERS"
  Origs: 1330
  Dests: 1350
(0 2) 1350 PRINT "   4 = FIRE PHOTON TORPEDOES"
  Origs: 1340
  Dests: 1360
(0 2) 1360 PRINT "   5 = SHIELD CONTROL"
  Origs: 1350
  Dests: 1370
(0 2) 1370 PRINT "   6 = DAMAGE CONTROL REPORT"
  Origs: 1360
  Dests: 1380
(0 2) 1380 PRINT "   7 = CALL ON LIBRARY COMPUTER"
  Origs: 1370
  Dests: 1390
(0 2) 1390 PRINT "   8 = END THE CONTEST"
(0 2)      PRINT
  Origs: 1380
  Dests: 1400
(0 3) 1400 GOTO 1270
  Origs: 1390
  Dests: 1270
(0 1) 1401 REM *** COURSE, CONTROL CODE BEGIMS HERE
  Origs: 
  Dests: 1410
(1 2) 1410 INPUT "COURSE (1-9):"; C1
  Origs: 1290, 1401, 1440, 1470, 1500
  Dests: 1430
(1 5) 1430 IF C1 = 0 THEN 1270
  Origs: 1410
  Dests: 1270, 1440
(1 8) 1440 IF C1 < 1 OR C1 > 9 THEN 1410
  Origs: 1430
  Dests: 1410, 1450
(1 2) 1450 INPUT "WARP FACTOR (0-8):"; W1
  Origs: 1440
  Dests: 1470
(1 8) 1470 IF W1 < 1 OR W1 > 8 THEN 1410
  Origs: 1450
  Dests: 1410, 1480
(1 7) 1480 IF D(1) > 0 OR W1 <= .2 THEN 1810
  Origs: 1470
  Dests: 1490, 1810
(0 2) 1490 PRINT "WARP ENGINES ARE DAMAGEO. MAXIMUM SPEED = WARP .2"
  Origs: 1480
  Dests: 1500
(0 3) 1500 GOTO 1410
  Origs: 1490
  Dests: 1410
(1 4) 1510 IF K3 <= 0 THEN 1560
  Origs: 
  Dests: 1520, 1560
(0 2) 1520 GOSUB 3790
  Origs: 1510
  Dests: 1530, 3790
(1 4) 1530 IF K3 <= 0 THEN 1560
  Origs: 1520
  Dests: 1540, 1560
(1 4) 1540 IF S < 0 THEN 4000
  Origs: 1530
  Dests: 1550, 4000
(0 2) 1550 GOTO 1610
  Origs: 1540
  Dests: 1610
(1 4) 1560 IF E > 0 THEN 1610
  Origs: 1510, 1530
  Dests: 1570, 1610
(1 4) 1570 IF S < 1 THEN 3920
  Origs: 1560
  Dests: 1580, 3920
(0 4) 1580 PRINT "YOU HAVE" E " UNITS OF ENERGY"
  Origs: 1570
  Dests: 1590
(0 4) 1590 PRINT "SUGGEST YOU GET SOME FROM YOUR SHIELDS WHICH HAVE" S " UNITS LEFT"
  Origs: 1580
  Dests: 1600
(0 3) 1600 GOTO 1270
  Origs: 1590
  Dests: 1270
(1 3) 1610 FOR I = 1 TO 8
(1 4)      IF D(I) > 0 THEN 1640
  Origs: 1550, 1560
  Dests: 1611, 1640
(0 1) 1611 REM *** FIX ANY DAMAGED DEVICE
  Origs: 1610
  Dests: 1630
(0 3) 1630 D(I) = 1
  Origs: 1611
  Dests: 1640
(0 1) 1640 NEXT I
  Origs: 1610, 1630
  Dests: 1650
(1 5) 1650 IF RND(1) > .2 THEN 1810
  Origs: 1640
  Dests: 1660, 1810
(0 4) 1660 B1 = INT(RND(1) * 8 + 1)
  Origs: 1650
  Dests: 1670
(1 5) 1670 IF RND(1) >= .5 THEN 1750
  Origs: 1660
  Dests: 1680, 1750
(0 8) 1680 D(B1) = D(B1) - (RND(1) * 5 + 1)
  Origs: 1670
  Dests: 1690
(0 2) 1690 PRINT
(0 2)      PRINT "DAMAGE CONTROL REPORT:";
  Origs: 1680
  Dests: 1710
(0 2) 1710 GOSUB 5610
  Origs: 1690
  Dests: 1720, 5610
(0 2) 1720 PRINT " DAMAGED"
(0 2)      PRINT
(0 2)      GOTO 1810
  Origs: 1710
  Dests: 1810
(0 8) 1750 D(B1) = D(B1) + (RND(1) * 5 + 1)
  Origs: 1670
  Dests: 1760
(0 2) 1760 PRINT
(0 2)      PRINT "DAMAGE CONTROl REPORT:";
  Origs: 1750
  Dests: 1780
(0 2) 1780 GOSUB 5610
  Origs: 1760
  Dests: 1790, 5610
(0 2) 1790 PRINT " STATE OF REPAIR IMPROVED"
(0 2)      PRINT
  Origs: 1780
  Dests: 1810
(0 4) 1810 N = INT(W1 * 8)
(0 3)      A$ = "   "
(0 3)      Z1 = S1
(0 3)      Z2 = S2
  Origs: 1480, 1650, 1720, 1790
  Dests: 1850
(0 2) 1850 GOSUB 5510
  Origs: 1810
  Dests: 1860, 5510
(0 10) 1860 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 1850
  Dests: 1870
(0 3) 1870 X = S1
(0 3)      Y = S2
  Origs: 1860
  Dests: 1890
(0 10) 1890 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 1870
  Dests: 1900
(0 10) 1900 X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
  Origs: 1890
  Dests: 1910
(1 3) 1910 FOR I = 1 TO N
(0 4)      S1 = S1 + X1
(0 4)      S2 = S2 + X2
  Origs: 1900
  Dests: 1940
(1 13) 1940 IF S1 < 1 OR S1 >= 9 OR S2 < 1 OR S2 >= 9 THEN 2170
  Origs: 1910
  Dests: 1950, 2170
(0 8) 1950 S8 = S1 * 24 + S2 * 3 - 26
(1 4)      IF S8 > 72 THEN 1990
  Origs: 1940
  Dests: 1970, 1990
(1 5) 1970 IF MID(Q$, S8, 3) = "   " THEN 2070
  Origs: 1950
  Dests: 1980, 2070
(0 2) 1980 GOTO 2030
  Origs: 1970
  Dests: 2030
(1 4) 1990 IF S8 > 144 THEN 2020
  Origs: 1950
  Dests: 2000, 2020
(1 5) 2000 IF MID(R$, S8 - 72, 3) = "   " THEN 2070
  Origs: 1990
  Dests: 2010, 2070
(0 2) 2010 GOTO 2030
  Origs: 2000
  Dests: 2030
(1 5) 2020 IF MID(S$, S8 - 144, 3) = "   " THEN 2070
  Origs: 1990
  Dests: 2030, 2070
(0 6) 2030 PRINT "WARP ENGINES SHUTDOWN AT SECTOR " S1 "." S2 " DUE TO BAD NAVAGATION"
  Origs: 1980, 2010, 2020
  Dests: 2040
(0 4) 2040 S1 = S1 - X1
(0 4)      S2 = S2 - X2
(0 2)      GOTO 2080
  Origs: 2030
  Dests: 2080
(0 1) 2070 NEXT I
  Origs: 1970, 2000, 2020
  Dests: 2080
(0 3) 2080 A$ = "<*>"
(0 3)      Z1 = S1
(0 3)      Z2 = S2
  Origs: 2040, 2070
  Dests: 2110
(0 2) 2110 GOSUB 5510
  Origs: 2080
  Dests: 2120, 5510
(0 5) 2120 E = E - N + 5
(1 4)      IF W1 < 1 THEN 2150
  Origs: 2110
  Dests: 2140, 2150
(0 4) 2140 T = T + 1
  Origs: 2120
  Dests: 2150
(1 6) 2150 IF T > T0 + T9 THEN 3970
  Origs: 2120, 2140
  Dests: 2160, 3970
(0 3) 2160 GOTO 1260
  Origs: 2150
  Dests: 1260
(0 8) 2170 X = Q1 * 8 + X + X1 * N
(0 8)      Y = Q2 * 8 + Y + X2 * N
  Origs: 1940
  Dests: 2190
(0 4) 2190 Q1 = INT(X / 8)
(0 4)      Q2 = INT(Y / 8)
(0 4)      S1 = INT(X - Q1 * 8)
(0 4)      S2 = INT(Y - Q2 * 8)
  Origs: 2170
  Dests: 2230
(1 4) 2230 IF S1 <> 0 THEN 2260
  Origs: 2190
  Dests: 2240, 2260
(0 4) 2240 Q1 = Q1 - 1
(0 3)      S1 = 8
  Origs: 2230
  Dests: 2260
(1 4) 2260 IF S2 <> 0 THEN 2290
  Origs: 2230, 2240
  Dests: 2270, 2290
(0 4) 2270 Q2 = Q2 - 1
(0 3)      S2 = 8
  Origs: 2260
  Dests: 2290
(0 4) 2290 T = T + 1
(0 5)      F = F - N + 5
  Origs: 2260, 2270
  Dests: 2310
(1 6) 2310 IF T > T0 + T9 THEN 3970
  Origs: 2290
  Dests: 2320, 3970
(0 3) 2320 GOTO 810
  Origs: 2310
  Dests: 810
(0 1) 2321 REM *** LONG RANGE SENSOR SCAN CODE BEGINS HERE
  Origs: 
  Dests: 2330
(1 4) 2330 IF D(3) > 0 THEN 2370
  Origs: 1292, 2321
  Dests: 2340, 2370
(0 2) 2340 PRINT "LONG RANGE SENSORS ARE INOPERABLE"
  Origs: 2330
  Dests: 2360
(0 3) 2360 GOTO 1270
  Origs: 2340
  Dests: 1270
(0 5) 2370 PRINT "LONG RANGE SENSOR SCAN FOR QUADRANT " Q1 "." Q2
  Origs: 2330
  Dests: 2380
(0 2) 2380 PRINT "-------------------"
  Origs: 2370
  Dests: 2390
(1 5) 2390 FOR I = Q1 - 1 TO Q1 + 1
  Origs: 2380
  Dests: 2400
(0 4) 2400 MAT N = ZER
  Origs: 2390
  Dests: 2410
(1 5) 2410 FOR J = Q2 - 1 TO Q2 + 1
  Origs: 2400
  Dests: 2420
(1 13) 2420 IF I < 1 OR I > 8 OR J < 1 OR J > 8 THEN 2460
  Origs: 2410
  Dests: 2430, 2460
(0 3) 2430 N(J - Q2 + 2) = G(I, J)
  Origs: 2420
  Dests: 2440
(1 4) 2440 IF D(7) < 0 THEN 2460
  Origs: 2430
  Dests: 2450, 2460
(0 3) 2450 Z(I, J) = G(I, J)
  Origs: 2440
  Dests: 2460
(0 1) 2460 NEXT J
  Origs: 2420, 2440, 2450
  Dests: 2470
(0 3) 2470 P1$ = ": ### : ### : ### :"
  Origs: 2460
  Dests: 2471
(0 6) 2471 PRINT USING P1$ N(1), N(2), N(3)
  Origs: 2470
  Dests: 2480
(0 2) 2480 PRINT "------------------"
  Origs: 2471
  Dests: 2490
(0 1) 2490 NEXT I
  Origs: 2480
  Dests: 2500
(0 3) 2500 GOTO 1270
  Origs: 2490
  Dests: 1270
(0 1) 2501 REM *** PHASER CONTROL CODE BEGINS HERE
  Origs: 
  Dests: 2530
(1 4) 2530 IF K3 <= 0 THEN 3670
  Origs: 1293, 2501
  Dests: 2540, 3670
(1 4) 2540 IF D(4) > 0 THEN 2570
  Origs: 2530
  Dests: 2560, 2570
(0 3) 2560 GOTO 1270
  Origs: 2540
  Dests: 1270
(1 4) 2570 IF D(7) > 0 THEN 2590
  Origs: 2540, 2630
  Dests: 2580, 2590
(0 2) 2580 PRINT " COMPUTER FAILURE HAMPERS ACCURACY"
  Origs: 2570
  Dests: 2590
(0 3) 2590 PRINT "PHASERS LOCKED ON TARGET, ENERGY AVAILABLE=" E
  Origs: 2570, 2580
  Dests: 2600
(1 2) 2600 INPUT "NUMBER OF UNITS TO FIRE:"; X
  Origs: 2590
  Dests: 2620
(1 3) 2620 IF X < 01270
  Origs: 2600
  Dests: 2630
(1 6) 2630 IF E - X < 0 THEN 2570
  Origs: 2620
  Dests: 2570, 2640
(0 4) 2640 E = E - X
  Origs: 2630
  Dests: 2650
(0 2) 2650 GOSUB 3790
  Origs: 2640
  Dests: 2660, 3790
(1 4) 2660 IF D(7) > 0 THEN 2680
  Origs: 2650
  Dests: 2670, 2680
(0 5) 2670 X = X * RND(1)
  Origs: 2660
  Dests: 2680
(1 3) 2680 FOR I = 1 TO 3
  Origs: 2660, 2670
  Dests: 2690
(1 4) 2690 IF K(I, 3) <= 0 THEN 2770
  Origs: 2680, 3330
  Dests: 2700, 2770
(0 4) 2700 H = INT((X / K / FND(0)) * (2 * RND(1)))
  Origs: 2690
  Dests: 2710
(0 4) 2710 K(I, 3) = K(I, 3) - H
  Origs: 2700
  Dests: 2720
(0 6) 2720 PRINT H " UNIT HIT ON KLINGON AT SECTOR " K(I, 1) "." K(I, 2);
  Origs: 2710
  Dests: 2730
(0 4) 2730 PRINT "    (" K(I, 3) " LEFT)"
  Origs: 2720
  Dests: 2740
(1 4) 2740 IF K(I, 3) > 0 THEN 2770
  Origs: 2730
  Dests: 2750, 2770
(0 2) 2750 GOSUB 3690
  Origs: 2740
  Dests: 2760, 3690
(1 4) 2760 IF K9 <= 0 THEN 4040
  Origs: 2750
  Dests: 2770, 4040
(0 1) 2770 NEXT I
  Origs: 2690, 2740, 2760
  Dests: 2780
(1 4) 2780 IF E < 0 THEN 4000
  Origs: 2770
  Dests: 2790, 4000
(0 3) 2790 GOTO 1270
  Origs: 2780
  Dests: 1270
(0 1) 2791 REM *** PHOTON TORPEDO CODE BEGINS HERE
  Origs: 
  Dests: 2800
(1 4) 2800 IF D(5) >= 0 THEN 2830
  Origs: 1294, 2791
  Dests: 2810, 2830
(0 2) 2810 PRINT "PHOTON TUBES ARE NOT OPERATIONAL"
  Origs: 2800
  Dests: 2820
(0 3) 2820 GOTO 1270
  Origs: 2810
  Dests: 1270
(1 4) 2830 IF P > 0 THEN 2860
  Origs: 2800
  Dests: 2840, 2860
(0 2) 2840 PRINT "ALL PHOTON TORPEDOES EXPENDED"
  Origs: 2830
  Dests: 2850
(0 3) 2850 GOTO 1270
  Origs: 2840
  Dests: 1270
(1 2) 2860 INPUT "TORPEDO COURSE (1-9):"; C1
  Origs: 2830, 2890
  Dests: 2880
(1 5) 2880 IF C1 < 0 THEN 1270
  Origs: 2860
  Dests: 1270, 2890
(1 8) 2890 IF C1 < 1 OR C1 > 9 THEN 2860
  Origs: 2880
  Dests: 2860, 2900
(0 10) 2900 X1 = C(C1, 1) + (C(C1 + 1, 1) - C(C1, 1)) * (C1 - INT(C1))
  Origs: 2890
  Dests: 2910
(0 10) 2910 X2 = C(C1, 2) + (C(C1 + 1, 2) - C(C1, 2)) * (C1 - INT(C1))
  Origs: 2900
  Dests: 2920
(0 3) 2920 X = S1
(0 3)      Y = S2
(0 4)      P = P - 1
  Origs: 2910
  Dests: 2950
(0 2) 2950 PRINT "TORPEDO TRACK:"
  Origs: 2920
  Dests: 2960
(0 4) 2960 X = X + X1
(0 4)      Y = Y + X2
  Origs: 2950, 3060
  Dests: 2980
(1 13) 2980 IF X < 1 OR X >= 9 OR Y < 1 OR Y >= 9 THEN 3420
  Origs: 2960
  Dests: 2990, 3420
(0 5) 2990 PRINT "               " X "." Y
  Origs: 2980
  Dests: 3010
(0 3) 3010 A$ = "   "
(0 3)      Z1 = X
(0 3)      Z2 = Y
  Origs: 2990
  Dests: 3040
(0 2) 3040 GOSUB 5680
  Origs: 3010
  Dests: 3050, 5680
(1 4) 3050 IF Z3 = 0 THEN 3220
  Origs: 3040
  Dests: 3060, 3220
(0 3) 3060 GOTO 2960
  Origs: 3050
  Dests: 2960
(0 3) 3070 A$ = "***"
(0 3)      Z1 = X
(0 3)      Z2 = Y
  Origs: 
  Dests: 3100
(0 2) 3100 GOSUB 5680
  Origs: 3070
  Dests: 3110, 5680
(1 4) 3110 IF Z3 = 0 THEN 3220
  Origs: 3100
  Dests: 3120, 3220
(0 2) 3120 PRINT "*** KLINGON DESTROYED ***"
  Origs: 3110
  Dests: 3130
(0 4) 3130 K3 = K3 - 1
(0 4)      K9 = K9 - 1
  Origs: 3120, 5030
  Dests: 3150
(1 4) 3150 IF K9 <= 8 THEN 4040
  Origs: 3130, 5060
  Dests: 3160, 4040
(1 3) 3160 FOR I = 1 TO 3
(1 5)      IF INT(X) = K(I, 1) THEN 3190
  Origs: 3150
  Dests: 3180, 3190
(1 5) 3180 IF INT(Y) <> K(I, 2) THEN 3200
  Origs: 3160
  Dests: 3190, 3200
(0 1) 3190 NEXT I
  Origs: 3160, 3180
  Dests: 3200
(0 3) 3200 K(I, 3) = 0
(0 2)      GOTO 3360
  Origs: 3180, 3190
  Dests: 3360
(0 3) 3220 A$ = " * "
(0 3)      Z1 = X
(0 3)      Z2 = Y
  Origs: 3050, 3110
  Dests: 3230
(0 2) 3230 GOSUB 5680
  Origs: 3220
  Dests: 3240, 5680
(1 4) 3240 IF Z3 = 0 THEN 3290
  Origs: 3230
  Dests: 3270, 3290
(0 2) 3270 PRINT "YOU CAN'T DESTROY STARS, SILLY"
  Origs: 3240
  Dests: 3280
(0 2) 3280 GOTO 3420
  Origs: 3270
  Dests: 3420
(0 3) 3290 A$ = ">1<"
(0 3)      Z1 = X
(0 3)      Z2 = Y
  Origs: 3240
  Dests: 3320
(0 2) 3320 GOSUB 5660
  Origs: 3290
  Dests: 3330, 5660
(1 5) 3330 IF Z3 = 0 THEN 2690
  Origs: 3320
  Dests: 2690, 3340
(0 2) 3340 PRINT "*** STAR BASE DESTROYED *** .......CONGRATULATIONS"
  Origs: 3330
  Dests: 3350
(0 4) 3350 B3 = B3 - 1
  Origs: 3340
  Dests: 3360
(0 3) 3360 A$ = "   "
(0 3)      Z1 = X
(0 3)      Z2 = Y
  Origs: 3200, 3350
  Dests: 3390
(0 2) 3390 GOSUB 5510
  Origs: 3360
  Dests: 3400, 5510
(0 8) 3400 G(Q1, Q2) = K3 * 100 + B3 * 10 + S3
  Origs: 3390
  Dests: 3410
(0 2) 3410 GOTO 3430
  Origs: 3400
  Dests: 3430
(0 2) 3420 PRINT "TORPEDO MISSED"
  Origs: 2980, 3280
  Dests: 3430
(0 2) 3430 GOSUB 3790
  Origs: 3410, 3420
  Dests: 3440, 3790
(1 4) 3440 IF E < 0 THEN 4000
  Origs: 3430
  Dests: 3450, 4000
(0 3) 3450 GOTO 1270
  Origs: 3440
  Dests: 1270
(0 1) 3451 REM *** SHIELD CONTROL CODE BEGINS HERE
  Origs: 
  Dests: 3460
(1 4) 3460 IF D(7) >= 0 THEN 3490
  Origs: 1295, 3451
  Dests: 3470, 3490
(0 2) 3470 PRINT "SHIELD CONTROL IS NON-OPERATIONAL"
  Origs: 3460
  Dests: 3480
(0 3) 3480 GOTO 1270
  Origs: 3470
  Dests: 1270
(0 4) 3490 PRINT "ENERGY AVAILABLE =" F * S;
  Origs: 3460, 3520
  Dests: 3500
(1 2) 3500 INPUT "   NUMBER OF UNTTS TO SHIELDS:"; X
  Origs: 3490
  Dests: 3510
(1 5) 3510 IF X <= 0 THEN 1270
  Origs: 3500
  Dests: 1270, 3520
(1 7) 3520 IF E + S - X < 0 THEN 3490
  Origs: 3510
  Dests: 3490, 3530
(0 5) 3530 F = E + S - X
(0 3)      S = X
  Origs: 3520
  Dests: 3550
(0 3) 3550 GOTO 1270
  Origs: 3530
  Dests: 1270
(0 1) 3551 REM *** DAMAGE CONTROL RFPORT CODE BEGINS HERE
  Origs: 
  Dests: 3560
(1 4) 3560 IF D(6) > 0 THEN 3590
  Origs: 1296, 3551, 4870
  Dests: 3570, 3590
(0 2) 3570 PRINT "DAMAGE CONTROL REPORT IS NOT AVAILABLE"
  Origs: 3560
  Dests: 3580
(0 3) 3580 GOTO 1270
  Origs: 3570
  Dests: 1270
(0 2) 3590 PRINT
(0 2)      PRINT "DEVICE STATE OF REPAIR"
  Origs: 3560
  Dests: 3610
(1 3) 3610 FOR R1 = 1 TO 8
  Origs: 3590
  Dests: 3620
(0 2) 3620 GOSUB 5610
  Origs: 3610
  Dests: 3630, 5610
(0 2) 3630 PRINT D(R1)
  Origs: 3620
  Dests: 3640
(0 1) 3640 NEXT R1
(0 2)      PRINT
  Origs: 3630
  Dests: 3660
(0 3) 3660 GOTO 1270
  Origs: 3640
  Dests: 1270
(0 2) 3670 PRINT "SHORT RANGE SENSORS REPORT NO KLINGONS IN THIS QUADRANT"
  Origs: 2530
  Dests: 3680
(0 3) 3680 GOTO 1270
  Origs: 3670
  Dests: 1270
(0 6) 3690 PRINT "KLINGON AT SECTOR " K(I, 1) "," K(I, 2) "DESTROYED ***"
  Origs: 2750
  Dests: 3710
(0 4) 3710 K3 = K3 - 1
(0 4)      K9 = K9 - 1
(0 3)      A$ = "   "
(0 3)      Z1 = K(I, 1)
(0 3)      Z2 = K(I, 2)
  Origs: 3690
  Dests: 3760
(0 2) 3760 GOSUB 5510
  Origs: 3710
  Dests: 3770, 5510
(0 8) 3770 G(Q1, Q2) = K3 * 100 + B3 * 10 + S3
  Origs: 3760
  Dests: 3780
(0 1) 3780 RETURN
  Origs: 3770
  Dests: 
(1 4) 3790 IF C$ <> "DOCKED" THEN 3820
  Origs: 1520, 2650, 3430, 3950
  Dests: 3800, 3820
(0 2) 3800 PRINT "STAR BASE SHIELDS PROTECT THE ENTERPISE"
  Origs: 3790
  Dests: 3810
(0 1) 3810 RETURN
  Origs: 3800
  Dests: 
(1 4) 3820 IF K3 <= 0 THEN 3910
  Origs: 3790
  Dests: 3830, 3910
(1 3) 3830 FOR I = 1 TO 3
(1 4)      IF K(I, 3) <= 0 THEN 3900
  Origs: 3820
  Dests: 3850, 3900
(0 4) 3850 H = INT((K(I, 3) / FND(0)) * (2 + RND(1)))
(0 4)      S = S - H
  Origs: 3830
  Dests: 3870
(0 6) 3870 PRINT H " UNIT HIT ON ENTERPRISE AT SECTOR " K(I, 1) "," K(I, 2);
  Origs: 3850
  Dests: 3871
(0 4) 3871 PRINT "     (" S " LEFT)"
  Origs: 3870
  Dests: 3890
(1 4) 3890 IF S < 0 THEN 4000
  Origs: 3871
  Dests: 3900, 4000
(0 1) 3900 NEXT I
  Origs: 3830, 3890
  Dests: 3910
(0 1) 3910 RETURN
  Origs: 3820, 3900
  Dests: 
(0 2) 3920 PRINT "THE ENTERPRISE IS DFAD IN SPACE. IF YOU SURVIVE ALL IMPENDING"
  Origs: 1570
  Dests: 3930
(0 2) 3930 PRINT "ATTACKS YOU WILL RE DEMOTED TO THE RANK OF PRIVATE"
  Origs: 3920
  Dests: 3940
(1 4) 3940 IF K3 <= 0 THEN 4020
  Origs: 3930, 3960
  Dests: 3950, 4020
(0 3) 3950 GOSUB 3790
  Origs: 3940
  Dests: 3790, 3960
(0 3) 3960 GOTO 3940
  Origs: 3950
  Dests: 3940
(0 2) 3970 PRINT
(0 3)      PRINT "IT IS STARDATE" T
  Origs: 2150, 2310
  Dests: 3990
(0 2) 3990 GOTO 4020
  Origs: 3970
  Dests: 4020
(0 1) 3991 REM *** NO ENERGY LEFT
  Origs: 
  Dests: 4000
(0 2) 4000 PRINT
(0 2)      PRINT "THE ENTERPRISE HAS BEEN DESTROYED. THF FEOERATION WILL BE CONQUERED"
  Origs: 1540, 2780, 3440, 3890, 3991
  Dests: 4020
(0 4) 4020 PRINT "THERE ARE STILL " K9 " KLINGON BATTLE CRUISERS"
  Origs: 3940, 3990, 4000
  Dests: 4030
(0 2) 4030 PRINT
(0 2)      PRINT
(0 2)      PRINT
(0 2)      PRINT "YOU GET ANOTHER CHANCE..."
(0 3)      GOTO 230
  Origs: 4020
  Dests: 230
(0 2) 4040 PRINT
(0 2)      PRINT "THF LAST KLINGON BATTLE CRUISER IN THE GALAXY HAS BEEN DESTROYED"
  Origs: 2760, 3150
  Dests: 4050
(0 2) 4050 PRINT "THE FEDERATION HAS BEEN SAVED!!!!!"
(0 2)      PRINT
  Origs: 4040
  Dests: 4075
(0 7) 4075 E5 = ((K7 / (T - T0)) * 1000)
  Origs: 4050
  Dests: 4080
(0 3) 4080 PRINT "YOUR EFFICIENCY RATING =" E5
  Origs: 4075
  Dests: 4100
(0 6) 4100 PRINT "YOUR ACTUAL TIME OF MISSION =" INT(TIME(0) - T7) / 60; " MINUTES"
  Origs: 4080
  Dests: 4105
(0 2) 4105 PRINT
(0 2)      PRINT
(0 2)      PRINT
  Origs: 4100
  Dests: 4106
(1 2) 4106 INPUT "DO YOU WANT TO TRY AGAIN"; R$
  Origs: 4105
  Dests: 4107
(1 5) 4107 IF R$ = "YES" THEN 230
  Origs: 4106
  Dests: 230, 4110
(0 2) 4110 GOTO 6510
  Origs: 4107
  Dests: 6510
(0 1) 4111 REM *** SHORT RANGE SENSOR SCAN AND STARTING POINT CODE
  Origs: 1260
  Dests: 4120
(1 5) 4120 FOR I = S1 - 1 TO S1 + 1
  Origs: 4111
  Dests: 4130
(1 5) 4130 FOR J = S2 - 1 TO S2 + 1
  Origs: 4120
  Dests: 4140
(1 13) 4140 IF I < 1 OR I > 8 OR J < 1 OR J > 8 THEN 4200
  Origs: 4130
  Dests: 4150, 4200
(0 3) 4150 A$ = ">1<"
(0 3)      Z1 = I
(0 3)      Z2 = J
  Origs: 4140
  Dests: 4180
(0 2) 4180 GOSUB 5680
  Origs: 4150
  Dests: 4190, 5680
(1 4) 4190 IF Z3 = 1 THEN 4240
  Origs: 4180
  Dests: 4200, 4240
(0 1) 4200 NEXT J
  Origs: 4140, 4190
  Dests: 4210
(0 1) 4210 NEXT I
  Origs: 4200
  Dests: 4220
(0 3) 4220 D0 = 0
(0 2)      GOTO 4310
  Origs: 4210
  Dests: 4310
(0 3) 4240 D0 = 1
(0 3)      C$ = "DOCKED"
(0 3)      E = 3000
(0 3)      P = 10
  Origs: 4190
  Dests: 4280
(0 2) 4280 PRINT "SHIELDS DROPPED FOR DOCKING PURPOSES"
  Origs: 4240
  Dests: 4290
(0 3) 4290 S = 0
(0 2)      GOTO 4380
  Origs: 4280
  Dests: 4380
(1 4) 4310 IF K3 > 0 THEN 4350
  Origs: 4220
  Dests: 4320, 4350
(1 6) 4320 IF E < E0 * .1 THEN 4370
  Origs: 4310
  Dests: 4330, 4370
(0 3) 4330 C$ = "GREEN"
  Origs: 4320
  Dests: 4340
(0 2) 4340 GOTO 4380
  Origs: 4330
  Dests: 4380
(0 3) 4350 C$ = "RED"
(0 2)      GOTO 4380
  Origs: 4310
  Dests: 4380
(0 3) 4370 C$ = "YELLOW"
  Origs: 4320
  Dests: 4380
(1 4) 4380 IF D(2) >= 0 THEN 4430
  Origs: 4290, 4340, 4350, 4370
  Dests: 4390, 4430
(0 2) 4390 PRINT
(0 2)      PRINT "*** SHORT RANGE SENSORS ARE OUT ***"
(0 2)      PRINT
  Origs: 4380
  Dests: 4420
(0 2) 4420 GOTO 4530
  Origs: 4390
  Dests: 4530
(0 3) 4430 O1$ = "----------------------------"
  Origs: 4380
  Dests: 4435
(0 2) 4435 PRINT O1$
  Origs: 4430
  Dests: 4440
(0 3) 4440 O2$ = " \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"
  Origs: 4435
  Dests: 4445
(0 19) 4445 PRINT USING O2$, MID(Q$, 1, 3), MID(Q$, 4, 3), MID(Q$, 7, 3), MID(Q$, 10, 3), MID(Q$, 13, 3), MID(Q$, 16, 3), MID(Q$, 19, 3), MID(Q$, 22, 3)
  Origs: 4440
  Dests: 4450
(0 4) 4450 O3$ = O2$ + "        STARDATE        #####"
  Origs: 4445
  Dests: 4455
(0 20) 4455 PRINT USING O3$, MID(Q$, 25, 3), MID(Q$, 28, 3), MID(Q$, 31, 3), MID(Q$, 34, 3), MID(Q$, 37, 3), MID(Q$, 40, 3), MID(Q$, 43, 3), MID(Q$, 46, 3), T
  Origs: 4450
  Dests: 4460
(0 4) 4460 O4$ = O2$ + "        CONDITION      \    \"
  Origs: 4455
  Dests: 4465
(0 20) 4465 PRINT USING O4$, MID(Q$, 49, 3), MID(Q$, 52, 3), MID(Q$, 55, 3), MID(Q$, 58, 3), MID(Q$, 61, 3), MID(Q$, 64, 3), MID(Q$, 67, 3), MID(Q$, 70, 3), C$
  Origs: 4460
  Dests: 4470
(0 4) 4470 O5$ = O2$ + "        QUADRANT          # #"
  Origs: 4465
  Dests: 4475
(0 21) 4475 PRINT USING O5$, MID(R$, 1, 3), MID(R$, 4, 3), MID(R$, 7, 3), MID(R$, 10, 3), MID(R$, 13, 3), MID(R$, 16, 3), MID(R$, 19, 3), MID(R$, 22, 3), Q1, Q2
  Origs: 4470
  Dests: 4480
(0 4) 4480 O6$ = O2$ + "        SECTOR            # #"
  Origs: 4475
  Dests: 4485
(0 21) 4485 PRINT USING O6$, MID(R$, 25, 3), MID(R$, 28, 3), MID(R$, 31, 3), MID(R$, 34, 3), MID(R$, 37, 3), MID(R$, 40, 3), MID(R$, 43, 3), MID(R$, 46, 3), S1, S2
  Origs: 4480
  Dests: 4490
(0 4) 4490 O7$ = O2$ + "        TOTAL ENERGY   ######"
  Origs: 4485
  Dests: 4495
(0 20) 4495 PRINT USING O7$, MID(R$, 49, 3), MID(R$, 52, 3), MID(R$, 55, 3), MID(R$, 58, 3), MID(R$, 61, 3), MID(R$, 64, 3), MID(R$, 67, 3), MID(R$, 70, 3), E
  Origs: 4490
  Dests: 4500
(0 4) 4500 O8$ = O2$ + "        PHOTON TORPEDOES  ###"
  Origs: 4495
  Dests: 4505
(0 20) 4505 PRINT USING O8$, MID(S$, 1, 3), MID(S$, 4, 3), MID(S$, 7, 3), MID(S$, 10, 3), MID(S$, 13, 3), MID(S$, 16, 3), MID(S$, 19, 3), MID(S$, 22, 3), P
  Origs: 4500
  Dests: 4510
(0 4) 4510 O9$ = O2$ + "        SHIELDS        ######"
  Origs: 4505
  Dests: 4515
(0 20) 4515 PRINT USING O9$, MID(S$, 25, 3), MID(S$, 28, 3), MID(S$, 31, 3), MID(S$, 34, 3), MID(S$, 37, 3), MID(S$, 40, 3), MID(S$, 43, 3), MID(S$, 46, 3), S
  Origs: 4510
  Dests: 4520
(0 2) 4520 PRINT O1$
  Origs: 4515
  Dests: 4530
(0 1) 4530 RETURN
  Origs: 4420, 4520
  Dests: 
(0 1) 4620 REM *** LIBRARY COMPUTER CODE BEGINS HERE"
  Origs: 
  Dests: 4630
(1 4) 4630 IF D(8) >= 0 THEN 4660
  Origs: 1297, 4620
  Dests: 4640, 4660
(0 2) 4640 PRINT "COMPUTER DISABLED"
(0 3)      GOTO 1270
  Origs: 4630
  Dests: 1270
(1 2) 4660 INPUT "CDMPUTER ACTIVE AND AWAITING COMMAND:"; A
  Origs: 4630, 4730
  Dests: 4680
(1 4) 4680 IF A = 0 GOTO 4740
  Origs: 4660
  Dests: 4681, 4740
(1 4) 4681 IF A = 1 GOTO 4830
  Origs: 4680
  Dests: 4682, 4830
(1 4) 4682 IF A = 2 GOTO 4880
  Origs: 4681
  Dests: 4690, 4880
(0 2) 4690 PRINT "FUNCTIONS AVAILABLE FROM COMPUTER"
  Origs: 4682
  Dests: 4700
(0 2) 4700 PRINT "   0 = CUMULATIVE GALACTIC RECORD"
  Origs: 4690
  Dests: 4710
(0 2) 4710 PRINT "   1 = STATUS REPORT"
  Origs: 4700
  Dests: 4720
(0 2) 4720 PRINT "   2 = PHOTON TORPEDO DATA"
  Origs: 4710
  Dests: 4730
(0 3) 4730 GOTO 4660
  Origs: 4720
  Dests: 4660
(0 1) 4731 REM *** CUMULATIVE GALACTIC RECORD CODE BEGINS HERE
  Origs: 
  Dests: 4740
(0 5) 4740 PRINT "COMPUTER RECORD OF GALAXY FOR QUADRANT " Q1 "," Q2
  Origs: 4680, 4731
  Dests: 4760
(0 2) 4760 PRINT "     1     2     3     4     5     6     7     8"
  Origs: 4740
  Dests: 4770
(0 2) 4770 PRINT "   ----- ----- ----- ----- ----- ----- ----- -----"
  Origs: 4760
  Dests: 4780
(1 3) 4780 FOR I = 1 TO 8
  Origs: 4770
  Dests: 4790
(0 3) 4790 N1$ = "#   ###   ###   ###   ###   ###   ###   ###   ###"
  Origs: 4780
  Dests: 4795
(0 12) 4795 PRINT USING N1$, I, Z(I, 1), Z(I, 2), Z(I, 3), Z(I, 4), Z(I, 5), Z(I, 6), Z(I, 7), Z(I, 8)
  Origs: 4790
  Dests: 4800
(0 2) 4800 PRINT "   ----- ----- ----- ----- ----- ----- ----- -----"
  Origs: 4795
  Dests: 4810
(0 1) 4810 NEXT I
  Origs: 4800
  Dests: 4820
(0 3) 4820 GOTO 1270
  Origs: 4810
  Dests: 1270
(0 1) 4821 REM *** STATUS REPORT CODE BEGINS HERE
  Origs: 
  Dests: 4830
(0 2) 4830 PRINT "   STATUS REPORT"
  Origs: 4681, 4821
  Dests: 4840
(0 3) 4840 PRINT "NUMBER OF KLINGONS LEFT =" K9
  Origs: 4830
  Dests: 4850
(0 5) 4850 V5 = (T0 + T9) - T
  Origs: 4840
  Dests: 4851
(0 3) 4851 PRINT "NUMRER OF STARDATES LFFT ="; V5
  Origs: 4850
  Dests: 4860
(0 3) 4860 PRINT "NUMBER OF STARBASES LEFT =" B9
  Origs: 4851
  Dests: 4870
(0 3) 4870 GOTO 3560
  Origs: 4860
  Dests: 3560
(0 2) 4880 PRINT
(0 3)      H8 = 0
  Origs: 4682
  Dests: 4881
(0 1) 4881 REM *** PHOTON TORPEDO DATA CODE BEGINS HERE
  Origs: 4880
  Dests: 4900
(1 3) 4900 FOR I = 1 TO 3
  Origs: 4881
  Dests: 4910
(1 4) 4910 IF K(I, 3) <= 0 THEN 5260
  Origs: 4900
  Dests: 4920, 5260
(0 3) 4920 C1 = S1
(0 3)      A = S2
(0 3)      W1 = K(I, 1)
(0 3)      X = K(I, 2)
  Origs: 4910
  Dests: 4960
(0 2) 4960 GOTO 5010
  Origs: 4920
  Dests: 5010
(0 10) 4970 PRINT "YOU ARE AT QUADRANT ( " Q1 "," Q2 " ) SECTOR ( " S1 "," S2 " )"
  Origs: 5300
  Dests: 4990
(4 5) 4990 INPUT "SHIP ANO TARGET COORDINATES ARE:"; C1, A, W1, X
  Origs: 4970
  Dests: 5010
(0 4) 5010 X = X - A
(0 4)      A = C1 - W1
  Origs: 4960, 4990
  Dests: 5030
(1 5) 5030 IF X < 0 THEN 3130
  Origs: 5010
  Dests: 3130, 5031
(1 4) 5031 IF A < 0 THEN 5190
  Origs: 5030
  Dests: 5050, 5190
(1 4) 5050 IF X > 0 THEN 5070
  Origs: 5031
  Dests: 5060, 5070
(1 5) 5060 IF A = 0 THEN 3150
  Origs: 5050
  Dests: 3150, 5070
(0 3) 5070 C1 = 1
  Origs: 5050, 5060
  Dests: 5080
(1 6) 5080 IF ABS(A) <= ABS(X) THEN 5110
  Origs: 5070, 5150
  Dests: 5085, 5110
(0 12) 5085 V5 = C1 + (((ABS(A) - ABS(X)) + ABS(A)) / ABS(A))
  Origs: 5080
  Dests: 5090
(0 3) 5090 PRINT "DIRECTION =" V5
  Origs: 5085
  Dests: 5100
(0 2) 5100 GOTO 5240
  Origs: 5090
  Dests: 5240
(0 8) 5110 PRINT "DIRECTION =" C1 + (ABS(A) / ABS(X))
  Origs: 5080
  Dests: 5120
(0 2) 5120 GOTO 5240
  Origs: 5110
  Dests: 5240
(1 4) 5130 IF A > 0 THEN 5170
  Origs: 
  Dests: 5140, 5170
(1 4) 5140 IF X = 0 THEN 5190
  Origs: 5130
  Dests: 5150, 5190
(0 3) 5150 C1 = 5
(0 3)      GOTO 5080
  Origs: 5140
  Dests: 5080
(0 3) 5170 C1 = 3
(0 2)      GOTO 5200
  Origs: 5130
  Dests: 5200
(0 3) 5190 C1 = 7
  Origs: 5031, 5140
  Dests: 5200
(1 6) 5200 IF ABS(A) >= ABS(X) THEN 5230
  Origs: 5170, 5190
  Dests: 5210, 5230
(0 12) 5210 PRINT "DIRECTION =" C1 + (((ABS(X) - ABS(A)) + ABS(X)) / ABS(X))
  Origs: 5200
  Dests: 5220
(0 2) 5220 GOTO 5240
  Origs: 5210
  Dests: 5240
(0 8) 5230 PRINT "DIRECTION =" C1 + (ABS(X) / ABS(A))
  Origs: 5200
  Dests: 5240
(0 4) 5240 PRINT "DISTANCE =" SQR(X ** 2 * A ** 2)
  Origs: 5100, 5120, 5220, 5230
  Dests: 5250
(1 4) 5250 IF H8 = 1 THEN 5320
  Origs: 5240
  Dests: 5260, 5320
(0 1) 5260 NEXT I
  Origs: 4910, 5250
  Dests: 5270
(0 3) 5270 H8 = 0
  Origs: 5260
  Dests: 5280
(1 2) 5280 INPUT "DO YOU WANT TO USE THE CALCULATOR"; A$
  Origs: 5270, 5310
  Dests: 5300
(1 5) 5300 IF A$ = "YES" THEN 4970
  Origs: 5280
  Dests: 4970, 5310
(1 5) 5310 IF A$ <> "NO" THEN 5280
  Origs: 5300
  Dests: 5280, 5320
(0 3) 5320 GOTO 1270
  Origs: 5250, 5310
  Dests: 1270
(0 1) 5321 REM *** END OF. LIBRARY COMPUTER CODE
  Origs: 
  Dests: 5380
(0 4) 5380 R1 = INT(RND(1) * 8 + 1)
(0 4)      R2 = INT(RND(1) * 8 + 1)
(0 3)      A$ = "   "
(0 3)      Z1 = R1
(0 3)      Z2 = R2
  Origs: 1030, 1130, 1200, 5321, 5440
  Dests: 5430
(0 2) 5430 GOSUB 5680
  Origs: 5380
  Dests: 5440, 5680
(1 5) 5440 IF Z3 = 0 THEN 5380
  Origs: 5430
  Dests: 5380, 5450
(0 1) 5450 RETURN
  Origs: 5440
  Dests: 
(0 1) 5510 REM *** INSERTION IN STRING ARRAY FOR QUADRANT ***
  Origs: 1010, 1070, 1170, 1240, 1850, 2110, 3390, 3760
  Dests: 5520
(0 8) 5520 S8 = Z1 * 24 + Z2 * 3 - 26
(1 4)      IF S8 > 72 THEN 5560
  Origs: 5510
  Dests: 5540, 5560
(0 7) 5540 Q$ = LEFT(Q$, S8 - 1) + A$ + RIGHT(Q$, S8 + 3)
  Origs: 5520
  Dests: 5550
(0 2) 5550 GOTO 5600
  Origs: 5540
  Dests: 5600
(1 4) 5560 IF S8 > 144 THEN 5590
  Origs: 5520
  Dests: 5570, 5590
(0 7) 5570 R$ = LEFT(R$, S8 - 73) + A$ + RIGHT(R$, S8 - 69)
  Origs: 5560
  Dests: 5580
(0 2) 5580 GOTO 5600
  Origs: 5570
  Dests: 5600
(0 7) 5590 S$ = LEFT(S$, S8 - 145) + A$ + RIGHT(S$, S8 - 141)
  Origs: 5560
  Dests: 5600
(0 1) 5600 RETURN
  Origs: 5550, 5580, 5590
  Dests: 
(0 1) 5610 REM *** PRINTS DEVICE NAME FROM ARRAY***
  Origs: 1710, 1780, 3620
  Dests: 5620
(0 5) 5620 S8 = R1 * 12 - 11
(1 4)      IF S8 > 72 THEN 5660
  Origs: 5610
  Dests: 5640, 5660
(0 3) 5640 PRINT MID(D$, S8, 11),
(0 2)      GOTO 5670
  Origs: 5620
  Dests: 5670
(0 3) 5660 PRINT MID(E$, S8 - 72, 11),
  Origs: 3320, 5620
  Dests: 5670
(0 1) 5670 RETURN
  Origs: 5640, 5660
  Dests: 
(0 1) 5680 REM ***STRING COMPARISON IN QUADRANT ARRAY*** 
  Origs: 3040, 3100, 3230, 4180, 5430
  Dests: 5690
(0 8) 5690 S8 = Z1 * 24 + Z2 * 3 - 26
(0 3)      Z3 = 0
(1 4)      IF S8 > 72 THEN 5750
  Origs: 5680
  Dests: 5720, 5750
(1 5) 5720 IF MID(Q$, S8, 3) <> A$ THEN 5810
  Origs: 5690
  Dests: 5730, 5810
(0 3) 5730 Z3 = 1
(0 2)      GOTO 5810
  Origs: 5720
  Dests: 5810
(1 4) 5750 IF S8 > 144 THEN 5790
  Origs: 5690
  Dests: 5760, 5790
(1 5) 5760 IF MID(R$, S8 - 72, 3) <> A$ THEN 5810
  Origs: 5750
  Dests: 5770, 5810
(0 3) 5770 Z3 = 1
(0 2)      GOTO 5810
  Origs: 5760
  Dests: 5810
(1 5) 5790 IF MID(S$, S8 - 144, 3) <> A$ THEN 5810
  Origs: 5750
  Dests: 5800, 5810
(0 3) 5800 Z3 = 1
  Origs: 5790
  Dests: 5810
(0 1) 5810 RETURN
  Origs: 5720, 5730, 5760, 5770, 5790, 5800
  Dests: 
(0 2) 5820 & "     INSTRUCTIONS"
  Origs: 220
  Dests: 5821
(0 2) 5821 &
(0 2)      & "THE GALAXY IS DIVIDED INTO AN 8.8 QUADRANT GRID"
  Origs: 5820
  Dests: 5822
(0 2) 5822 & "WHICH IS IN TURN DIVIDED INTO AN 8.8 SECTOR GRID."
  Origs: 5821
  Dests: 5823
(0 2) 5823 &
(0 2)      & "THE CAST OF CHARACTERS IS AS FOLLOWS:"
  Origs: 5822
  Dests: 5830
(0 2) 5830 & "<*> = ENTERPRISE"
  Origs: 5823
  Dests: 5840
(0 2) 5840 & "+++ = KLINGON"
  Origs: 5830
  Dests: 5850
(0 2) 5850 & ">!< = STARRASE"
(0 2)      & " *  = STAR"
  Origs: 5840
  Dests: 5870
(0 2) 5870 & "COMMANO 0 = WARP ENGINE CONTROL:"
  Origs: 5850
  Dests: 5880
(0 2) 5880 & "  COURSE IS IN A CIRCULAR NUMERICAL       4  3  2"
  Origs: 5870
  Dests: 5890
(0 2) 5890 & "  VECTOR ARRANGEMENT AS SHOWN.             \ ^ /"
  Origs: 5880
  Dests: 5900
(0 2) 5900 & "  INTEGER AND REAL VALUE MAY BE             \^/"
  Origs: 5890
  Dests: 5910
(0 2) 5910 & "  USED. THEREFORE COURSE 1.5 IS          5 --- 1"
  Origs: 5900
  Dests: 5920
(0 2) 5920 & "  HALF WAY BETWEEN 1 AND 2.                 /^\"
  Origs: 5910
  Dests: 5930
(0 2) 5930 & "                                           / ^ \"
  Origs: 5920
  Dests: 5940
(0 2) 5940 & "  A VECTOR OF 9 IS UNDEFINED, BUT         6  7  8"
  Origs: 5930
  Dests: 5950
(0 2) 5950 & "  VALUES MAY APPROACH 9."
  Origs: 5940
  Dests: 5960
(0 2) 5960 & "                                          COURSE"
  Origs: 5950
  Dests: 5970
(0 2) 5970 & "  ONE WARP FACTOR IS THE SIZE OF"
  Origs: 5960
  Dests: 5980
(0 2) 5980 & "  ONE OUADRANT. THEREFORE TO GET"
  Origs: 5970
  Dests: 5990
(0 2) 5990 & "  FROM QUADRANT 6.5 TO 5.5 YOU WOULD"
  Origs: 5980
  Dests: 6000
(0 2) 6000 & "  USE COURSE 3, WARP FACTOR 1"
  Origs: 5990
  Dests: 6005
(0 2) 6005 &
  Origs: 6000
  Dests: 6010
(0 2) 6010 & "COMMAND 1 = SHORT RANGE SENSOR SCAN"
  Origs: 6005
  Dests: 6020
(0 2) 6020 & "  PRINT THE QUADRANT YOU ARE CURRENTLY IN, INCLUDING"
  Origs: 6010
  Dests: 6030
(0 2) 6030 & "  STARS. KLINGONS. STARBASE, AND THE ENTERPRISE, ALONG"
  Origs: 6020
  Dests: 6040
(0 2) 6040 & "  WITH OTHER PERTINATE INFORMATION."
  Origs: 6030
  Dests: 6045
(0 2) 6045 &
(0 2)      & "COMMAND 2 = LONG RANGE SENSOR SCAN"
  Origs: 6040
  Dests: 6060
(0 2) 6060 & "  SHOWS CONDITIONS IN SPACE FOR ONE QUADRANT ON EACH SIDE"
  Origs: 6045
  Dests: 6070
(0 2) 6070 & "  OF THE ENTERPRISE IN THE MIDDLE OF THE SCAN. THE SCAN"
  Origs: 6060
  Dests: 6080
(0 2) 6080 & "  IS CODED IN THE FORM XXX. WHERE THF UNITS DIGIT IS THE"
  Origs: 6070
  Dests: 6090
(0 2) 6090 & "  NUMBER OF STARS. THE TENS DIGIT TS THE NUMBER OF STAR-"
  Origs: 6080
  Dests: 6100
(0 2) 6100 & "  BASES. THE HUNDREDS DIGIT IS THE NUMBER OF KLINGONS."
  Origs: 6090
  Dests: 6110
(0 2) 6110 &
(0 2)      & "COMMAND 3 = PHASER CONTROL"
  Origs: 6100
  Dests: 6120
(0 2) 6120 & "  ALLOWS YOU TO DESTROY THE KLINGONS BY HITTING HIM WITH"
  Origs: 6110
  Dests: 6130
(0 2) 6130 & "  SUITABLY LARGE NUMBERS OF ENERGY UNITS. TO DEPLETE HIS"
  Origs: 6120
  Dests: 6140
(0 2) 6140 & "  SHIELD POWER. KEEP IN MIND THAT WHEN YOU SHOOT AT HIM,"
  Origs: 6130
  Dests: 6150
(0 2) 6150 & "  HE GONNA SHOOT AT YOU, TOO!"
  Origs: 6140
  Dests: 6160
(0 2) 6160 &
(0 2)      & "COMMAND 4 = PHOTON TORPEDO CONTROL"
  Origs: 6150
  Dests: 6170
(0 2) 6170 & "  COURSE IS THE SAME AS USED IN WARP ENGINE CONTROL"
  Origs: 6160
  Dests: 6180
(0 2) 6180 & "  IF YOU HIT THE KLINGON HE IS DESTROYED AND CANNOT FIRE"
  Origs: 6170
  Dests: 6190
(0 2) 6190 & "  BACK AT YOU. IF YOU MISS, YOU ARE SUBJECT TO HIS"
  Origs: 6180
  Dests: 6200
(0 2) 6200 & "  PHASER FIRE."
  Origs: 6190
  Dests: 6210
(0 2) 6210 &
(0 2)      & "  NOTE: THE LIBRARY COMPUTER (COMMAND 7) HAS AN OPTTQN"
  Origs: 6200
  Dests: 6220
(0 2) 6220 & " TO COMPUTE TORPEDO TRAJECTORY FOR YOU (OPTION 2)."
  Origs: 6210
  Dests: 6230
(0 2) 6230 & "COMMAND 5 = SHIELD CONTROL"
  Origs: 6220
  Dests: 6240
(0 2) 6240 & "  DEFINES NUMBER OF ENERGY UNITS TO BE ASSIGNED TO SHIELDS"
  Origs: 6230
  Dests: 6250
(0 2) 6250 & "  ENERGY IS TAKEN FROM TOTAL SHIP'S ENERGY."
  Origs: 6240
  Dests: 6251
(0 2) 6251 & "  NOTE THAT TOTAL ENERGY INCLUDES SHIELD ENERGY."
  Origs: 6250
  Dests: 6260
(0 2) 6260 &
(0 2)      & "COMMAND 6 = DAMAGE CONTROL REPORT"
  Origs: 6251
  Dests: 6270
(0 2) 6270 & "  GIVES STATE OF REPAIRS OF ALL DEVICES. A STATE OF RFPAIR"
  Origs: 6260
  Dests: 6280
(0 2) 6280 & "  LESS THAN ZERO SHOWS THAT THE DEVICE IS TEMPORARALY"
  Origs: 6270
  Dests: 6290
(0 2) 6290 & "  DAMAGED."
  Origs: 6280
  Dests: 6300
(0 2) 6300 &
(0 2)      & "COMMAND 7 = LIBRARY COMPUTER"
  Origs: 6290
  Dests: 6310
(0 2) 6310 & "  THE LIBRARY COMPUTER CONTAINS THREE OPTIONS:"
  Origs: 6300
  Dests: 6320
(0 2) 6320 & "    OPTION 0 = CUMULATIVE GALACTIC RECORD"
  Origs: 6310
  Dests: 6330
(0 2) 6330 & "      WHICH SHOWS COMPUTER MEMORY OF THE RESULTS"
  Origs: 6320
  Dests: 6340
(0 2) 6340 & "      OF ALL PREVIOUS LONG RANGE SENSOR SCANS"
  Origs: 6330
  Dests: 6350
(0 2) 6350 & "    OPTION 1 = STATUS REPORT"
  Origs: 6340
  Dests: 6360
(0 2) 6360 & "      WHICH SHOWS NUMBER OF KLINGONS, STARDATES,"
  Origs: 6350
  Dests: 6370
(0 2) 6370 & "      AND STARBASES LEFT."
  Origs: 6360
  Dests: 6380
(0 2) 6380 & "    OPTION 2 = PHOTON TORPEDO DATA"
  Origs: 6370
  Dests: 6390
(0 2) 6390 & "      GIVES TRAJECTORY AND DISTANCE BETWEEN THE"
  Origs: 6380
  Dests: 6400
(0 2) 6400 & "      ENTERPRISE AND ALL KLINGONS IN YOUR QUADRANT"
  Origs: 6390
  Dests: 6500
(0 3) 6500 GOTO 230
  Origs: 6400
  Dests: 230
(0 1) 6510 END
  Origs: 1298, 4110
  Dests: 

Unreachable code:

1510: IF K3 <= 0 THEN 1560
1520: GOSUB 3790
1530: IF K3 <= 0 THEN 1560
1540: IF S < 0 THEN 4000
1550: GOTO 1610
1560: IF E > 0 THEN 1610
1570: IF S < 1 THEN 3920
1580: PRINT "YOU HAVE" E " UNITS OF ENERGY"
1590: PRINT "SUGGEST YOU GET SOME FROM YOUR SHIELDS WHICH HAVE" S " UNITS LEFT"
1600: GOTO 1270
1610: FOR I = 1 TO 8
1610.1: IF D(I) > 0 THEN 1640
1630: D(I) = 1
1640: NEXT I
1650: IF RND(1) > .2 THEN 1810
1660: B1 = INT(RND(1) * 8 + 1)
1670: IF RND(1) >= .5 THEN 1750
1680: D(B1) = D(B1) - (RND(1) * 5 + 1)
1690: PRINT
1690.1: PRINT "DAMAGE CONTROL REPORT:";
1710: GOSUB 5610
1720: PRINT " DAMAGED"
1720.1: PRINT
1720.2: GOTO 1810
1750: D(B1) = D(B1) + (RND(1) * 5 + 1)
1760: PRINT
1760.1: PRINT "DAMAGE CONTROl REPORT:";
1780: GOSUB 5610
1790: PRINT " STATE OF REPAIR IMPROVED"
1790.1: PRINT
3070: A$ = "***"
3070.1: Z1 = X
3070.2: Z2 = Y
3100: GOSUB 5680
3110: IF Z3 = 0 THEN 3220
3120: PRINT "*** KLINGON DESTROYED ***"
3920: PRINT "THE ENTERPRISE IS DFAD IN SPACE. IF YOU SURVIVE ALL IMPENDING"
3930: PRINT "ATTACKS YOU WILL RE DEMOTED TO THE RANK OF PRIVATE"
3940: IF K3 <= 0 THEN 4020
3950: GOSUB 3790
3960: GOTO 3940
5130: IF A > 0 THEN 5170
5140: IF X = 0 THEN 5190
5150: C1 = 5
5150.1: GOTO 5080
5170: C1 = 3
5170.1: GOTO 5200

