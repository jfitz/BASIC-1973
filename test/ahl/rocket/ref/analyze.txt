Statistics:

Number of lines: 35
Number of valid statements: 88
Number of comments: 0
Number of executable statements: 88

Complexity:

Comment density: 0.000
Comprehension effort: 354
McCabe complexity: 15
Halstead complexity:
 length: 409
 volume: 1940.677
 difficulty: 24.211
 effort: 46984.817
 language: 3.311
 intelligence: 80.158
 time: 43.504

(0 2) 2 PRINT "THIS IS A COMPUTER SIMULATION OF AN APOLLO LUNAR"
  Origs: :start
  Dests: 3:auto
(0 2) 3 PRINT "LANDING CAPSULE, "
(0 2)   PRINT
(0 2)   PRINT
  Origs: 2:auto
  Dests: 4:auto
(0 2) 4 PRINT "THE ON-BOARD COMPUTER HAS FAILED (IT WASN'T MADE BY"
  Origs: 3:auto
  Dests: 5:auto
(0 2) 5 PRINT "DIGITAL) SO YOU HAVE TO LAND THE CAPSULE MANUALLY"
  Origs: 4:auto
  Dests: 6:auto
(0 2) 6 PRINT
(0 2)   PRINT "SET BURN RATE OF RETRO ROCKETS TO ANY VALUE BETWEEN"
  Origs: 5:auto, 95:goto
  Dests: 7:auto
(0 2) 7 PRINT "0 (FREE FALL) AND 200 (MAXIMUM BURN) POUNDS PER SECOND"
  Origs: 6:auto
  Dests: 8:auto
(0 2) 8 PRINT "SET NEW BURN RATE EVERY 10 SECONDS. "
(0 2)   PRINT
  Origs: 7:auto
  Dests: 9:auto
(0 2) 9 PRINT "CAPSULE WEIGHT 32,500 LBS; FUEL WEIGHT 16,500 LBS"
  Origs: 8:auto
  Dests: 10:auto
(0 2) 10 PRINT
(0 2)    PRINT
(0 2)    PRINT "GOOD LUCK!!!"
  Origs: 9:auto
  Dests: 11:auto
(0 3) 11 L = 0
  Origs: 10:auto
  Dests: 13:auto
(0 2) 13 PRINT
(0 6)    PRINT "SEC", "MI + FT", "MPH", "LB FUEL", "BURN RATE"
(0 2)    PRINT
  Origs: 11:auto
  Dests: 15:auto
(0 3) 15 A = 120
(0 3)    V = 1
(0 3)    M = 33000
(0 3)    N = 16500
(0 3)    G = 0.001
(0 3)    Z = 1.8
  Origs: 13:auto
  Dests: 21:auto
(0 10) 21 PRINT L, INT(A); INT(5280 * (A - INT(A))), 3600 * V, M - N,
(1 2)    INPUT K
(0 3)    T = 10
  Origs: 15:auto, 31:ifthen
  Dests: 31:auto
(1 5) 31 IF M - N < 0.001 THEN 41
(1 5)    IF T < 0.001 THEN 21
(0 3)    S = T
(1 8)    IF M >= N + S * K THEN 35
  Origs: 21:auto, 38:goto, 83:goto, 83:ifthen
  Dests: 21:ifthen, 32:auto, 35:ifthen, 41:ifthen
(0 5) 32 S = (M - N) / K
  Origs: 31:auto
  Dests: 35:auto
(0 2) 35 GOSUB 91
(1 4)    IF I <= 0 THEN 71
(1 4)    IF V <= 0 THEN 38
(1 4)    IF J < 0 THEN 81
  Origs: 31:ifthen, 32:auto
  Dests: 38:auto, 38:ifthen, 71:ifthen, 81:ifthen, 91:gosub
(0 2) 38 GOSUB 61
(0 3)    GOTO 31
  Origs: 35:auto, 35:ifthen
  Dests: 31:goto, 61:gosub
(0 4) 41 PRINT "FUEL OUT AT" L "SEC"
(0 7)    S = (-V + SQR(V * V + 2 * A * G)) / G
(0 6)    V = V + G * S
(0 4)    L = L + S
  Origs: 31:ifthen
  Dests: 51:auto
(0 4) 51 W = 3600 * V
(0 6)    PRINT "ON MOON AT" L "SEC - IMPACT VELOCITY" W "MPH"
  Origs: 41:auto, 71:ifthen
  Dests: 52:auto
(1 4) 52 IF W > 1.2 THEN 53
(0 2)    PRINT "PERFECT LANDING! (LUCKY) "
(0 2)    GOTO 95
  Origs: 51:auto
  Dests: 53:auto, 53:ifthen, 95:goto
(1 4) 53 IF W > 10 THEN 56
(0 2)    PRINT "GOOD LANDING (COULD BE BETTER) "
(0 2)    GOTO 95
  Origs: 52:auto, 52:ifthen
  Dests: 56:auto, 56:ifthen, 95:goto
(1 4) 56 IF W > 60 THEN 58
(0 2)    PRINT "CRAFT DAMAGE YOU'RE STRANDED HERE UNTIL"
  Origs: 53:auto, 53:ifthen
  Dests: 57:auto, 58:ifthen
(0 2) 57 PRINT "A RESCUE PARTY ARRIVES, HOPE YOU HAVE ENOUGH OXYGEN!"
(0 2)    GOTO 95
  Origs: 56:auto
  Dests: 95:goto
(0 2) 58 PRINT "SORRY, BUT THERE WERE NO SURVIVORS...YOU BLEW IT!"
  Origs: 56:ifthen
  Dests: 59:auto
(0 5) 59 PRINT "IN FACT, YOU BLASTED A NEW LUNAR CRATER " W * 0.2777 "FT DEEP"
  Origs: 58:auto
  Dests: 60:auto
(0 2) 60 GOTO 95
  Origs: 59:auto
  Dests: 95:goto
G(61) (0 4) 61 L = L + S
G(61) (0 4)    T = T - S
G(61) (0 6)    M = M - S * K
G(61) (0 3)    A = I
G(61) (0 3)    V = J
G(61) (0 1)    RETURN
  Origs: 38:gosub, 73:gosub, 83:gosub
  Dests: 
(1 5) 71 IF S < 0.005 THEN 51
(0 5)    D = V + SQR(V * V + 2 * A * (G - Z * K / M))
(0 5)    S = 2 * A / D
  Origs: 35:ifthen, 73:goto, 83:ifthen
  Dests: 51:ifthen, 73:auto
(0 2) 73 GOSUB 91
(0 3)    GOSUB 61
(0 3)    GOTO 71
  Origs: 71:auto
  Dests: 61:gosub, 71:goto, 91:gosub
(0 10) 81 W = (1 - M * G / (Z * K)) / 2
(0 12)    S = M * V / (Z * K * (W + SQR(W * W + Y / Z))) + 0.05
(0 2)    GOSUB 91
  Origs: 35:ifthen, 83:ifthen
  Dests: 83:auto, 91:gosub
(1 5) 83 IF I <= 0 THEN 71
(0 3)    GOSUB 61
(1 5)    IF J > 0 THEN 31
(1 5)    IF Y > 0 THEN 81
(0 3)    GOTO 31
  Origs: 81:auto
  Dests: 31:goto, 31:ifthen, 61:gosub, 71:ifthen, 81:ifthen, 91:auto
G(91) (0 5) 91 Q = S * K / M
G(91) (0 27)    J = V + G * S + Z * (-Q - Q * Q / 2 - Q ^ 3 / 3 - Q ^ 4 / 4 - Q ^ 5 / 5)
   WARNING: Inconsistent GOSUB origins
  Origs: 35:gosub, 73:gosub, 81:gosub, 83:auto
  Dests: 94:auto
G(91) (0 33) 94 I = A - G * S * S / 2 - V * S + Z * S * (Q / 2 + Q ^ 2 / 6 + Q ^ 3 / 12 + Q ^ 4 / 20 + Q ^ 5 / 30)
G(91) (0 1)    RETURN
  Origs: 91:auto
  Dests: 
(0 2) 95 PRINT
(0 2)    PRINT
(0 2)    PRINT
(0 2)    PRINT "TRY AGAIN??"
(0 3)    GOTO 6
  Origs: 52:goto, 53:goto, 57:goto, 60:goto
  Dests: 6:goto
(0 1) 99 END
  Origs: 
  Dests: :stop

Unreachable code:

99: END

