1 ! BY JEFF DALTON, CLASS OF '74, NORTHFIELD MOUNT HERMON SCHOOL
2 ! THIS PROGRAM PLAYS THE GAME 'HEXAPAWN' BY A METHOD OUTLINED IN 'MATHEMATICAL GAMES' IN MARCH 1962 SCIENTIFIC AMERICAN.
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
3 ! THE PROGRAM LEARNS BY ELIMINATION OF BAD MOVES. ALL POSITIONS ENCOUNTERED BY THE PROGRAM AND THE ACCEPTABLE MOVES FROM THEM ARE STORED IN P$(X) 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
4 ! WHEN THE PROGRAM ENCOUNTERS AN UNFAMILIAR POSITION, THE POSITION AND ALL LEGAL MOVES FROM IT ARE ADDED TO THE LIST.
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
5 ! IF THE PROGRAM LOSES A GAME, IT ERASES THE MOVE THAT LED TO DEFEAT. IF IT HITS A POSITION FROM WHICH ALL MOVES HAVE BEEN DELETED (THEY ALL LED TO DEFEAT), IT ERASES THE MOVE THAT GOT IT HERE AND RESIGNS.
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
10 INPUT "INSTRUCTIONS"; C$: IF LEFT(C$, 1%)<> "Y" THEN 110
 Variable:C$ -> $
 Variable:C$ -> $
 IntegerValue:1
 FunctionLeft:LEFT($,%) -> $
 TextValue:"Y"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:110
20 &: &, "THIS PROGRAM PLAYS THE GAME OF HEXAPAWN.":& "HEXAPAWN IS PLAYED WITH CHESS PAWNS ON A 3 BY 3 BOARD. THE PAWNS ARE": & "MOVED AS IN CHESS - ONE SPACE FORWARD TO AN EMPTY SPACE OR ONE SPACE"
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 CarriageControl:NL
 CarriageControl:,
 TextValue:"THIS PROGRAM PLAYS THE GAME OF HEXAPAWN."
 CarriageControl:NL
 TextValue:"HEXAPAWN IS PLAYED WITH CHESS PAWNS ON A 3 BY 3 BOARD. THE PAWNS ARE"
 CarriageControl:NL
 TextValue:"MOVED AS IN CHESS - ONE SPACE FORWARD TO AN EMPTY SPACE OR ONE SPACE"
 CarriageControl:NL
30 &"FORWARD AND DIAGONALLY TO CAPTURE AN OPPOSING MAN. ":&:&CHR$(9%);"O THE BOARD. YOUR PAWNS ARE 'O', THE COMPUTER'S PAWNS ARE '*'":& "AND EMPTY SQUARES ARE '-'. TO ENTER A MOVE, TYPE THE NUMBER OF THE"
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"FORWARD AND DIAGONALLY TO CAPTURE AN OPPOSING MAN. "
 CarriageControl:NL
 CarriageControl:NL
 IntegerValue:9
 FunctionChr:CHR$(%) -> =$
 CarriageControl:;
 TextValue:"O THE BOARD. YOUR PAWNS ARE 'O', THE COMPUTER'S PAWNS ARE '*'"
 CarriageControl:NL
 TextValue:"AND EMPTY SQUARES ARE '-'. TO ENTER A MOVE, TYPE THE NUMBER OF THE"
 CarriageControl:NL
40 &"SQUARE YOU WILL MOVE FROM FOLLOWED BY THE NUMBER OF THE SQUARE":&"YOU WILL MOVE TO. (THE NUMBERS ARE SEPARATED BY A COMMA.)":&
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"SQUARE YOU WILL MOVE FROM FOLLOWED BY THE NUMBER OF THE SQUARE"
 CarriageControl:NL
 TextValue:"YOU WILL MOVE TO. (THE NUMBERS ARE SEPARATED BY A COMMA.)"
 CarriageControl:NL
 CarriageControl:NL
50 &"    THE PROGRAM STARTS A SERIES OF GAMES KNOWING ONLY WHEN THE":&"GAME IS WON (A DRAW IS IMPOSSIBLE) AND HOW TO MOVE. IT HAS NO":&"STRATEGY AT FIRST AND JUST MOVES RANDOMLY. HOWEVER, IT LEARNS"
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"    THE PROGRAM STARTS A SERIES OF GAMES KNOWING ONLY WHEN THE"
 CarriageControl:NL
 TextValue:"GAME IS WON (A DRAW IS IMPOSSIBLE) AND HOW TO MOVE. IT HAS NO"
 CarriageControl:NL
 TextValue:"STRATEGY AT FIRST AND JUST MOVES RANDOMLY. HOWEVER, IT LEARNS"
 CarriageControl:NL
60 &"FROM EACH GAME. THUS, DEFEATING IT BECOMES MORE AND MORE":&"DIFFICULT. ALSO, TO HELP OFFSET YOUR INITIAL ADVANTAGE, YOU WILL":&"NOT BE TOLD HOW TO WIN THE GAME BUT MUST LEARN THIS BY PLAYING":&
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"FROM EACH GAME. THUS, DEFEATING IT BECOMES MORE AND MORE"
 CarriageControl:NL
 TextValue:"DIFFICULT. ALSO, TO HELP OFFSET YOUR INITIAL ADVANTAGE, YOU WILL"
 CarriageControl:NL
 TextValue:"NOT BE TOLD HOW TO WIN THE GAME BUT MUST LEARN THIS BY PLAYING"
 CarriageControl:NL
 CarriageControl:NL
100 DEF FNC$(X$,X%,Y$)=LEFT(X$,X%,1%)+Y$+RIGHT(X$,X%+LEN(Y$))
 UserFunctionName:FNC$ -> $
 VariableName:X$ -> $
 VariableName:X% -> %
 VariableName:Y$ -> $
 Variable:X$ -> $
 Variable:X% -> %
 IntegerValue:1
 FunctionLeft:LEFT($,%,%) -> $
 Variable:Y$ -> $
 BinaryOperatorPlus:+($,$) -> $
 Variable:X$ -> $
 Variable:X% -> %
 Variable:Y$ -> $
 FunctionLen:LEN($) -> .
 BinaryOperatorPlus:+(%,.) -> .
 FunctionRight:RIGHT($,.) -> $
 BinaryOperatorPlus:+($,$) -> $
105 DEF FNN$(X%):X$=NUM$(X%):FNN$=MID(X$,2%*LEN(X$)-2%):FNEND
 WARNING: Line exceeds PRETTY width limit 72
 UserFunctionName:FNN$ -> $
 VariableName:X% -> %
 Variable:X$ -> $
 Variable:X% -> %
 FunctionStr:NUM$(%) -> $
 AssignmentOperator:= $ -> $
 UserFunction:FNN$ -> $
 Variable:X$ -> $
 IntegerValue:2
 Variable:X$ -> $
 FunctionLen:LEN($) -> .
 BinaryOperatorMultiply:*(%,.) -> .
 IntegerValue:2
 BinaryOperatorMinus:-(.,%) -> .
 FunctionMid:MID($,.) -> $
 AssignmentOperator:= $ -> $
 
110 DIM P$(50%):RANDOMIZE:Q%=0%:PRINT "SINCE I'M A GOOD SPORT, YOU'LL ALWAYS GO FIRST"
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 IntegerValue:50
 Declaration:P$() -> $()
 
 Variable:Q% -> %
 IntegerValue:0
 AssignmentOperator:= =% -> %
 TextValue:"SINCE I'M A GOOD SPORT, YOU'LL ALWAYS GO FIRST"
 CarriageControl:NL
120 P%=8%: P$="XXX--OOO":&:&"NUMBERING: ": &"123": &"456": &"789": &
 WARNING: Line exceeds PRETTY width limit 72
 Variable:P% -> %
 IntegerValue:8
 AssignmentOperator:= =% -> %
 Variable:P$ -> $
 TextValue:"XXX--OOO"
 AssignmentOperator:= =$ -> $
 CarriageControl:NL
 TextValue:"NUMBERING: "
 CarriageControl:NL
 TextValue:"123"
 CarriageControl:NL
 TextValue:"456"
 CarriageControl:NL
 TextValue:"789"
 CarriageControl:NL
 CarriageControl:NL
190 D%=-1%: Q$="O": GOSUB 2000: IF M$="" THEN PRINT "YOU CAN'T MOVE. I WIN.": GOTO 510
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:D% -> %
 IntegerValue:1
 UnaryOperatorMinus:-(%) -> =%
 AssignmentOperator:= =% -> %
 Variable:Q$ -> $
 TextValue:"O"
 AssignmentOperator:= =$ -> $
 LineNumber:2000
 Variable:M$ -> $
 TextValue:""
 BinaryOperatorEqual:=($,$) -> ?
 TextValue:"YOU CAN'T MOVE. I WIN."
 CarriageControl:NL
 LineNumber:510
200 &: &"BOARD:": &LEFT(P$, 3%): &MID(P$,4%,3%): &RIGHT(P$,7%): &
 WARNING: Line exceeds PRETTY width limit 72
 CarriageControl:NL
 TextValue:"BOARD:"
 CarriageControl:NL
 Variable:P$ -> $
 IntegerValue:3
 FunctionLeft:LEFT($,%) -> $
 CarriageControl:NL
 Variable:P$ -> $
 IntegerValue:4
 IntegerValue:3
 FunctionMid:MID($,%,%) -> $
 CarriageControl:NL
 Variable:P$ -> $
 IntegerValue:7
 FunctionRight:RIGHT($,%) -> $
 CarriageControl:NL
 CarriageControl:NL
210 INPUT "WHAT IS YOUR MOVE"; A%,B%: IF INSTR(1%,M$,FNN$(A%)+FNN$(B%))=0% THEN PRINT "ILLEGAL MOVE.": GOTO 210
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:A% -> %
 Variable:B% -> %
 IntegerValue:1
 Variable:M$ -> $
 Variable:A% -> %
 UserFunction:FNN$(%) -> $
 Variable:B% -> %
 UserFunction:FNN$(%) -> $
 BinaryOperatorPlus:+($,$) -> $
 FunctionInstr:INSTR(%,$,$) -> .
 IntegerValue:0
 BinaryOperatorEqual:=(.,%) -> ?
 TextValue:"ILLEGAL MOVE."
 CarriageControl:NL
 LineNumber:210
230 P$=FNC$(FNC$(P$,A%,"-"),B%,"O"): IF INSTR(1%,P$,"*")=0% OR INSTR(1%,P$,"O")=4% THEN PRINT "YOU WIN.": GOTO 500
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:P$ -> $
 Variable:P$ -> $
 Variable:A% -> %
 TextValue:"-"
 UserFunction:FNC$($,%,$) -> $
 Variable:B% -> %
 TextValue:"O"
 UserFunction:FNC$($,%,$) -> $
 AssignmentOperator:= $ -> $
 IntegerValue:1
 Variable:P$ -> $
 TextValue:"*"
 FunctionInstr:INSTR(%,$,$) -> .
 IntegerValue:0
 BinaryOperatorEqual:=(.,%) -> ?
 IntegerValue:1
 Variable:P$ -> $
 TextValue:"O"
 FunctionInstr:INSTR(%,$,$) -> .
 IntegerValue:4
 BinaryOperatorEqual:=(.,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 TextValue:"YOU WIN."
 CarriageControl:NL
 LineNumber:500
300 P%=P%+2% ! COMPUTER'S MOVE
 Variable:P% -> %
 Variable:P% -> %
 IntegerValue:2
 BinaryOperatorPlus:+(%,%) -> %
 AssignmentOperator:= % -> %
310 FOR C%=1% TO Q%: C$=P$(C%): IF VAL(LEFT(C$,1%))=P% AND MID(C$,2%,9%)=P$ THEN M$=RIGHT(C$,11%) : GOTO 400
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: FORNEXT length exceeds limit 40
 control: Variable:C% -> %
 start:   ["IntegerValue:1"]
 end:     ["Variable:Q% -> %"]
 Variable:C$ -> $
 Variable:C% -> %
 Variable:P$(%) -> $
 AssignmentOperator:= $ -> $
 Variable:C$ -> $
 IntegerValue:1
 FunctionLeft:LEFT($,%) -> $
 FunctionVal:VAL($) -> .
 Variable:P% -> %
 BinaryOperatorEqual:=(.,%) -> ?
 Variable:C$ -> $
 IntegerValue:2
 IntegerValue:9
 FunctionMid:MID($,%,%) -> $
 Variable:P$ -> $
 BinaryOperatorEqual:=($,$) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:M$ -> $
 Variable:C$ -> $
 IntegerValue:11
 FunctionRight:RIGHT($,%) -> $
 AssignmentOperator:= $ -> $
 LineNumber:400
320 NEXT C%: Q$="*": D%=1%: GOSUB 2000: C%=Q%: IF M$="" THEN PRINT "I CAN'T MOVE, YOU WIN.": GOTO 500
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:C% -> %
 Variable:Q$ -> $
 TextValue:"*"
 AssignmentOperator:= =$ -> $
 Variable:D% -> %
 IntegerValue:1
 AssignmentOperator:= =% -> %
 LineNumber:2000
 Variable:C% -> %
 Variable:Q% -> %
 AssignmentOperator:= % -> %
 Variable:M$ -> $
 TextValue:""
 BinaryOperatorEqual:=($,$) -> ?
 TextValue:"I CAN'T MOVE, YOU WIN."
 CarriageControl:NL
 LineNumber:500
400 IF M$="" THEN PRINT "I RESIGN.": GOTO 500
 Variable:M$ -> $
 TextValue:""
 BinaryOperatorEqual:=($,$) -> ?
 TextValue:"I RESIGN."
 CarriageControl:NL
 LineNumber:500
410 K$=LEFT(M$,2%): M$=RIGHT(M$,3%): IF RND>.33333333 AND M$<>"" THEN 410
 WARNING: Line exceeds PRETTY width limit 72
 Variable:K$ -> $
 Variable:M$ -> $
 IntegerValue:2
 FunctionLeft:LEFT($,%) -> $
 AssignmentOperator:= $ -> $
 Variable:M$ -> $
 Variable:M$ -> $
 IntegerValue:3
 FunctionRight:RIGHT($,%) -> $
 AssignmentOperator:= $ -> $
 FunctionRnd:RND -> .
 NumericValue:.33333333
 BinaryOperatorGreater:>(.,.) -> ?
 Variable:M$ -> $
 TextValue:""
 BinaryOperatorNotEqual:<>($,$) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 LineNumber:410
420 K%=C%: A%=VAL(LEFT(K$,1%)): B%=VAL(RIGHT(K$,2%)): P$=FNC$(FNC$(P$,A%,"-"),B%,"*")
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Target type (integer) does not match expression type (numeric).
 WARNING: Target type (integer) does not match expression type (numeric).
 Variable:K% -> %
 Variable:C% -> %
 AssignmentOperator:= % -> %
 Variable:A% -> %
 Variable:K$ -> $
 IntegerValue:1
 FunctionLeft:LEFT($,%) -> $
 FunctionVal:VAL($) -> .
 AssignmentOperator:= . -> %
 Variable:B% -> %
 Variable:K$ -> $
 IntegerValue:2
 FunctionRight:RIGHT($,%) -> $
 FunctionVal:VAL($) -> .
 AssignmentOperator:= . -> %
 Variable:P$ -> $
 Variable:P$ -> $
 Variable:A% -> %
 TextValue:"-"
 UserFunction:FNC$($,%,$) -> $
 Variable:B% -> %
 TextValue:"*"
 UserFunction:FNC$($,%,$) -> $
 AssignmentOperator:= $ -> $
430 IF INSTR(1%,P$,"O")=0% OR INSTR(7%,P$,"*") THEN PRINT "I WIN!": GOTO 510
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 IntegerValue:1
 Variable:P$ -> $
 TextValue:"O"
 FunctionInstr:INSTR(%,$,$) -> .
 IntegerValue:0
 BinaryOperatorEqual:=(.,%) -> ?
 IntegerValue:7
 Variable:P$ -> $
 TextValue:"*"
 FunctionInstr:INSTR(%,$,$) -> .
 BinaryOperatorOr:OR(?,.) -> ?
 TextValue:"I WIN!"
 CarriageControl:NL
 LineNumber:510
440 PRINT "I MOVE FROM" A% "TO" B%: GOTO 190
 TextValue:"I MOVE FROM"
 CarriageControl:
 Variable:A% -> %
 CarriageControl:
 TextValue:"TO"
 CarriageControl:
 Variable:B% -> %
 CarriageControl:NL
 LineNumber:190
500 W2%=W2%+1%: I%=INSTR(11%,P$(K%),K$) :P$(K%)=LEFT(P$(K%),I%-1%)+RIGHT(P$(K%),I%+2%) IF I%: GOTO 520
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 WARNING: Target type (integer) does not match expression type (numeric).
 Variable:W2% -> %
 Variable:W2% -> %
 IntegerValue:1
 BinaryOperatorPlus:+(%,%) -> %
 AssignmentOperator:= % -> %
 Variable:I% -> %
 IntegerValue:11
 Variable:K% -> %
 Variable:P$(%) -> $
 Variable:K$ -> $
 FunctionInstr:INSTR(%,$,$) -> .
 AssignmentOperator:= . -> %
 Variable:K% -> %
 Variable:P$(%) -> $
 Variable:K% -> %
 Variable:P$(%) -> $
 Variable:I% -> %
 IntegerValue:1
 BinaryOperatorMinus:-(%,%) -> %
 FunctionLeft:LEFT($,%) -> $
 Variable:K% -> %
 Variable:P$(%) -> $
 Variable:I% -> %
 IntegerValue:2
 BinaryOperatorPlus:+(%,%) -> %
 FunctionRight:RIGHT($,%) -> $
 BinaryOperatorPlus:+($,$) -> $
 AssignmentOperator:= $ -> $
 Variable:I% -> %
 LineNumber:520
510 W1%=W1%+1%
 Variable:W1% -> %
 Variable:W1% -> %
 IntegerValue:1
 BinaryOperatorPlus:+(%,%) -> %
 AssignmentOperator:= % -> %
520 &: &"BOARD:": &LEFT(P$,3%): &MID(P$,4%,3%): &RIGHT(P$,7%): &: & "I HAVE WON" W1% "AND YOU HAVE WON" W2% "OF" W1%+W2% "GAMES"
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 CarriageControl:NL
 TextValue:"BOARD:"
 CarriageControl:NL
 Variable:P$ -> $
 IntegerValue:3
 FunctionLeft:LEFT($,%) -> $
 CarriageControl:NL
 Variable:P$ -> $
 IntegerValue:4
 IntegerValue:3
 FunctionMid:MID($,%,%) -> $
 CarriageControl:NL
 Variable:P$ -> $
 IntegerValue:7
 FunctionRight:RIGHT($,%) -> $
 CarriageControl:NL
 CarriageControl:NL
 TextValue:"I HAVE WON"
 CarriageControl:
 Variable:W1% -> %
 CarriageControl:
 TextValue:"AND YOU HAVE WON"
 CarriageControl:
 Variable:W2% -> %
 CarriageControl:
 TextValue:"OF"
 CarriageControl:
 Variable:W1% -> %
 Variable:W2% -> %
 BinaryOperatorPlus:+(%,%) -> %
 CarriageControl:
 TextValue:"GAMES"
 CarriageControl:NL
530 INPUT "ANOTHER GAME"; C$: IF C$="NO" THEN 9999 ELSE 120
 Variable:C$ -> $
 Variable:C$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:9999
 LineNumber:120
900 ! DATA**= <- OF MOVE IN GAME><POSITION><LIST OF MOVES> IN <POSITION>, -=BLANK *=COMPUTER'S PAWN, O=PLAYER'S PAWN <LIST OF MOVES> IS <- MOVE FROM><- MOVE TO><LIST OF MOVES>
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
2000 M$=""
 Variable:M$ -> $
 TextValue:""
 AssignmentOperator:= =$ -> $
2010 FOR J%=1% TO 9%: IF MID(P$,J%,1%)<>Q$ THEN 2050
 control: Variable:J% -> %
 start:   ["IntegerValue:1"]
 end:     ["IntegerValue:9"]
 Variable:P$ -> $
 Variable:J% -> %
 IntegerValue:1
 FunctionMid:MID($,%,%) -> $
 Variable:Q$ -> $
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:2050
2015 T%=J%+D%*3%: IF T%<1% OR T%>9% THEN 2025
 Variable:T% -> %
 Variable:J% -> %
 Variable:D% -> %
 IntegerValue:3
 BinaryOperatorMultiply:*(%,%) -> %
 BinaryOperatorPlus:+(%,%) -> %
 AssignmentOperator:= % -> %
 Variable:T% -> %
 IntegerValue:1
 BinaryOperatorLess:<(%,%) -> ?
 Variable:T% -> %
 IntegerValue:9
 BinaryOperatorGreater:>(%,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:2025
2020 IF MID(P$,T%,1%)="-" THEN M$=M$+FNN$(J%)+FNN$(T%)
 Variable:P$ -> $
 Variable:T% -> %
 IntegerValue:1
 FunctionMid:MID($,%,%) -> $
 TextValue:"-"
 BinaryOperatorEqual:=($,$) -> ?
 Variable:M$ -> $
 Variable:M$ -> $
 Variable:J% -> %
 UserFunction:FNN$(%) -> $
 BinaryOperatorPlus:+($,$) -> $
 Variable:T% -> %
 UserFunction:FNN$(%) -> $
 BinaryOperatorPlus:+($,$) -> $
 AssignmentOperator:= $ -> $
2025 T%=J%+D%*2%: IF T%<1% OR T%>9% OR (D%=1% AND (J%=1% OR J%=4% OR J%=7%)) OR (D%=1% AND (J%=3% OR J%=6% OR J%-9%)) THEN 2035
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:T% -> %
 Variable:J% -> %
 Variable:D% -> %
 IntegerValue:2
 BinaryOperatorMultiply:*(%,%) -> %
 BinaryOperatorPlus:+(%,%) -> %
 AssignmentOperator:= % -> %
 Variable:T% -> %
 IntegerValue:1
 BinaryOperatorLess:<(%,%) -> ?
 Variable:T% -> %
 IntegerValue:9
 BinaryOperatorGreater:>(%,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:D% -> %
 IntegerValue:1
 BinaryOperatorEqual:=(%,%) -> ?
 Variable:J% -> %
 IntegerValue:1
 BinaryOperatorEqual:=(%,%) -> ?
 Variable:J% -> %
 IntegerValue:4
 BinaryOperatorEqual:=(%,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:J% -> %
 IntegerValue:7
 BinaryOperatorEqual:=(%,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:D% -> %
 IntegerValue:1
 BinaryOperatorEqual:=(%,%) -> ?
 Variable:J% -> %
 IntegerValue:3
 BinaryOperatorEqual:=(%,%) -> ?
 Variable:J% -> %
 IntegerValue:6
 BinaryOperatorEqual:=(%,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:J% -> %
 IntegerValue:9
 BinaryOperatorMinus:-(%,%) -> %
 BinaryOperatorOr:OR(?,%) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:2035
2030 IF INSTR(1%,Q$+"-",MID(P$,T%,1%))=0% THEN M$=M$+FNN$(J%)+FNN$(T%)
 WARNING: Line exceeds PRETTY width limit 72
 IntegerValue:1
 Variable:Q$ -> $
 TextValue:"-"
 BinaryOperatorPlus:+($,$) -> $
 Variable:P$ -> $
 Variable:T% -> %
 IntegerValue:1
 FunctionMid:MID($,%,%) -> $
 FunctionInstr:INSTR(%,$,$) -> .
 IntegerValue:0
 BinaryOperatorEqual:=(.,%) -> ?
 Variable:M$ -> $
 Variable:M$ -> $
 Variable:J% -> %
 UserFunction:FNN$(%) -> $
 BinaryOperatorPlus:+($,$) -> $
 Variable:T% -> %
 UserFunction:FNN$(%) -> $
 BinaryOperatorPlus:+($,$) -> $
 AssignmentOperator:= $ -> $
2035 T%=J%+D%*4%: IF T%<1% OR T%>9% OR J%=3% OR J%=7% THEN 2050
 WARNING: Line exceeds PRETTY width limit 72
 Variable:T% -> %
 Variable:J% -> %
 Variable:D% -> %
 IntegerValue:4
 BinaryOperatorMultiply:*(%,%) -> %
 BinaryOperatorPlus:+(%,%) -> %
 AssignmentOperator:= % -> %
 Variable:T% -> %
 IntegerValue:1
 BinaryOperatorLess:<(%,%) -> ?
 Variable:T% -> %
 IntegerValue:9
 BinaryOperatorGreater:>(%,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:J% -> %
 IntegerValue:3
 BinaryOperatorEqual:=(%,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 Variable:J% -> %
 IntegerValue:7
 BinaryOperatorEqual:=(%,%) -> ?
 BinaryOperatorOr:OR(?,?) -> ?
 LineNumber:2050
2040 IF INSTR(1%,Q$+"-",MID(P$,T%,1%))=0% THEN M$=M$+FNN$(J%)+FNN$(T%)
 WARNING: Line exceeds PRETTY width limit 72
 IntegerValue:1
 Variable:Q$ -> $
 TextValue:"-"
 BinaryOperatorPlus:+($,$) -> $
 Variable:P$ -> $
 Variable:T% -> %
 IntegerValue:1
 FunctionMid:MID($,%,%) -> $
 FunctionInstr:INSTR(%,$,$) -> .
 IntegerValue:0
 BinaryOperatorEqual:=(.,%) -> ?
 Variable:M$ -> $
 Variable:M$ -> $
 Variable:J% -> %
 UserFunction:FNN$(%) -> $
 BinaryOperatorPlus:+($,$) -> $
 Variable:T% -> %
 UserFunction:FNN$(%) -> $
 BinaryOperatorPlus:+($,$) -> $
 AssignmentOperator:= $ -> $
2050 NEXT J%: IF D%=1% AND M$<>"" THEN Q%=Q%+1%: P$(Q%)=FNN$(P%)+P$+M$
 WARNING: Line exceeds PRETTY width limit 72
 Variable:J% -> %
 Variable:D% -> %
 IntegerValue:1
 BinaryOperatorEqual:=(%,%) -> ?
 Variable:M$ -> $
 TextValue:""
 BinaryOperatorNotEqual:<>($,$) -> ?
 BinaryOperatorAnd:AND(?,?) -> ?
 Variable:Q% -> %
 Variable:Q% -> %
 IntegerValue:1
 BinaryOperatorPlus:+(%,%) -> %
 AssignmentOperator:= % -> %
 Variable:Q% -> %
 Variable:P$(%) -> $
 Variable:P% -> %
 UserFunction:FNN$(%) -> $
 Variable:P$ -> $
 BinaryOperatorPlus:+($,$) -> $
 Variable:M$ -> $
 BinaryOperatorPlus:+($,$) -> $
 AssignmentOperator:= $ -> $
2060 RETURN
 
9999 END
 WARNING: Terminating statement in FOR/NEXT
 

