5 REM *** CONVERTED TO RSTS/E BY DAVID AHL, DIGITAL
 Remark:*** CONVERTED TO RSTS/E BY DAVID AHL, DIGITAL
10 REM *** CREATED BY MICHAEL KASS   HERRICKS HS, NV
 Remark:*** CREATED BY MICHAEL KASS   HERRICKS HS, NV
20 PRINT "THE OBJECT OF THIS PUZZLE IS TO CHANGE THIS:"
 TextValue:"THE OBJECT OF THIS PUZZLE IS TO CHANGE THIS:"
 CarriageControl:NL
30 PRINT
 CarriageControl:NL
40 PRINT "X X X X X X X X X X"
 TextValue:"X X X X X X X X X X"
 CarriageControl:NL
50 PRINT
 CarriageControl:NL
60 PRINT "TO THIS:"
 TextValue:"TO THIS:"
 CarriageControl:NL
70 PRINT
 CarriageControl:NL
80 PRINT "O O O O O O O O O O"
 TextValue:"O O O O O O O O O O"
 CarriageControl:NL
90 PRINT
 CarriageControl:NL
100 &"BY TYPING IN THE NUMBER CORRESPONDING TO THE POSITION OF THE LETTER"
 TextValue:"BY TYPING IN THE NUMBER CORRESPONDING TO THE POSITION OF THE LETTER"
 CarriageControl:NL
120 &"ON SOME NUMBERS, ONE POSITION WILL CHANGE, ON OTHERS, TWO WILL CHANGE"
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"ON SOME NUMBERS, ONE POSITION WILL CHANGE, ON OTHERS, TWO WILL CHANGE"
 CarriageControl:NL
140 &"TO RESET THE LINE TO ALL X' S, TYPE A 0 (ZERO) AND TO START A NEW"
 TextValue:"TO RESET THE LINE TO ALL X' S, TYPE A 0 (ZERO) AND TO START A NEW"
 CarriageControl:NL
160 &"IN THE MIDDLE OF A GAME, TYPE 11 (ELEVEN)"
 TextValue:"IN THE MIDDLE OF A GAME, TYPE 11 (ELEVEN)"
 CarriageControl:NL
170 PRINT
 CarriageControl:NL
180 RANDOMIZE
 
190 LET Q=RND(Y)
 Variable:Q -> _
 Variable:Y -> _
 FunctionRnd:RND(_) -> _
 AssignmentOperator:= _ -> _
200 PRINT "HERE IS THE STARTING LINE OF X'S:"
 TextValue:"HERE IS THE STARTING LINE OF X'S:"
 CarriageControl:NL
210 PRINT
 CarriageControl:NL
220 LET C=0 
 Variable:C -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
230 PRINT "1 2 3 4 5 6 7 8 9 10"
 TextValue:"1 2 3 4 5 6 7 8 9 10"
 CarriageControl:NL
240 PRINT "X X X X X X X X X X"
 TextValue:"X X X X X X X X X X"
 CarriageControl:NL
250 PRINT
 CarriageControl:NL
260 DIM A$(20)
 NumericValue:20
 Declaration:A$() -> $()
270 FOR X=1 TO 10
 control: Variable:X -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
280 LET A$(X)="X"
 Variable:X -> _
 Variable:A$(_) -> $
 TextValue:"X"
 AssignmentOperator:= =$ -> $
290 NEXT X
 Variable:X -> _
300 GO TO 320
 LineNumber:320
310 PRINT "ILLEGAL ENTRY TRY AGAIN"
 TextValue:"ILLEGAL ENTRY TRY AGAIN"
 CarriageControl:NL
320 PRINT "INPUT THE NUMBER";
 TextValue:"INPUT THE NUMBER"
 CarriageControl:;
330 INPUT N
 Variable:N -> _
340 IF N<>INT (N) THEN 310
 Variable:N -> _
 Variable:N -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:310
350 IF N=22 THEN 180
 Variable:N -> _
 NumericValue:22
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:180
360 IF N>11 THEN 310
 Variable:N -> _
 NumericValue:11
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:310
370 IF N=0 THEN 230
 Variable:N -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:230
380 IF M=N THEN 510
 Variable:M -> _
 Variable:N -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:510
390 LET M=N 
 Variable:M -> _
 Variable:N -> _
 AssignmentOperator:= _ -> _
400 IF A$(N)="O" THEN 480
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"O"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:480
410 LET A$(N)="O"
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"O"
 AssignmentOperator:= =$ -> $
420 LET R=TAN(Q+N/Q-N)-SIN(Q/N)+336*SIN(.8*N)
 Variable:R -> _
 Variable:Q -> _
 Variable:N -> _
 Variable:Q -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:N -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionTan:TAN(_) -> _
 Variable:Q -> _
 Variable:N -> _
 BinaryOperatorDivide:/(_,_) -> _
 FunctionSin:SIN(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericValue:336
 NumericValue:.8
 Variable:N -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionSin:SIN(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
430 LET N=ABS(R-INT(R))
 Variable:N -> _
 Variable:R -> _
 Variable:R -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 AssignmentOperator:= _ -> _
440 LET N=INT(10*N)
 Variable:N -> _
 NumericValue:10
 Variable:N -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
450 IF A$(N)="O" THEN 480
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"O"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:480
460 LET A$(N) = "O"
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"O"
 AssignmentOperator:= =$ -> $
470 GO TO 610 
 LineNumber:610
480 LET A$(N) = "X"
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"X"
 AssignmentOperator:= =$ -> $
490 IF M=N THEN 420
 Variable:M -> _
 Variable:N -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:420
500 GO TO 610
 LineNumber:610
510 IF A$(N)="O" THEN 590
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"O"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:590
520 LET A$(N)="O"
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"O"
 AssignmentOperator:= =$ -> $
530 LET R=.592*COT(Q/N+Q)/SIN(N*2+Q)-COS(N)
 Variable:R -> _
 NumericValue:.592
 Variable:Q -> _
 Variable:N -> _
 BinaryOperatorDivide:/(_,_) -> _
 Variable:Q -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionCot:COT(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:N -> _
 NumericValue:2
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:Q -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionSin:SIN(_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 Variable:N -> _
 FunctionCos:COS(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
540 LET N=R-INT(R)
 Variable:N -> _
 Variable:R -> _
 Variable:R -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
550 LET N=INT(10*N)
 Variable:N -> _
 NumericValue:10
 Variable:N -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
560 IF A$(N)="O" THEN 590
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"O"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:590
570 LET A$(N)="O"
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"O"
 AssignmentOperator:= =$ -> $
580 GO TO 610
 LineNumber:610
590 LET A$(N)="X"
 Variable:N -> _
 Variable:A$(_) -> $
 TextValue:"X"
 AssignmentOperator:= =$ -> $
600 IF M=N THEN 520
 Variable:M -> _
 Variable:N -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:520
610 PRINT"1 2 3 4 5 6 7 8 9 10"
 TextValue:"1 2 3 4 5 6 7 8 9 10"
 CarriageControl:NL
620 PRINT A$(Z);" ";FOR Z=1 TO 10
 Variable:Z -> _
 Variable:A$(_) -> $
 CarriageControl:;
 TextValue:" "
 CarriageControl:;
 control: Variable:Z -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
630 LET C=C+1
 Variable:C -> _
 Variable:C -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
640 PRINT
 CarriageControl:NL
650 FOR Z=1 TO 10
 WARNING: FORNEXT length exceeds limit 40
 control: Variable:Z -> _
 start:   ["NumericValue:1"]
 end:     ["NumericValue:10"]
660 IF A$(Z)<>"O" THEN 320
 Variable:Z -> _
 Variable:A$(_) -> $
 TextValue:"O"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:320
670 NEXT Z
 Variable:Z -> _
680 IF C>12 THEN 710
 Variable:C -> _
 NumericValue:12
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:710
690 PRINT"VERY GOOD. YOU GUESSED IT IN ONLY "C"GUESSES!!!!"
 TextValue:"VERY GOOD. YOU GUESSED IT IN ONLY "
 CarriageControl:
 Variable:C -> _
 CarriageControl:
 TextValue:"GUESSES!!!!"
 CarriageControl:NL
700 GO TO 720
 LineNumber:720
710 PRINT "TRY HARDER NEXT TIME, IT TOOK YOU "C"GUESSES"
 TextValue:"TRY HARDER NEXT TIME, IT TOOK YOU "
 CarriageControl:
 Variable:C -> _
 CarriageControl:
 TextValue:"GUESSES"
 CarriageControl:NL
720 PRINT "DO YOU WANT TO DO ANOTHER PUZZLE";
 TextValue:"DO YOU WANT TO DO ANOTHER PUZZLE"
 CarriageControl:;
730 INPUT X$
 Variable:X$ -> $
740 IF X$="NO" THEN 780
 Variable:X$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:780
760 PRINT
 CarriageControl:NL
770 GO TO 180
 LineNumber:180
780 END
 

