Statistics:

Number of lines: 75
Number of valid statements: 73
Number of comments: 2
Number of executable statements: 73

Complexity:

Comment density: 0.027
Comprehension effort: 227
McCabe complexity: 20
Halstead complexity:
 length: 280
 volume: 1250.454
 difficulty: 26.953
 effort: 33703.650
 language: 1.721
 intelligence: 46.394
 time: 31.207

(0 1) 5 REM *** CONVERTED TO RSTS/E BY DAVID AHL, DIGITAL
  Origs: 
  Dests: 
(0 1) 10 REM *** CREATED BY MICHAEL KASS   HERRICKS HS, NV
  Origs: 
  Dests: 
(0 2) 20 PRINT "THE OBJECT OF THIS PUZZLE IS TO CHANGE THIS:"
  Origs: :start
  Dests: 30:auto
(0 2) 30 PRINT
  Origs: 20:auto
  Dests: 40:auto
(0 2) 40 PRINT "X X X X X X X X X X"
  Origs: 30:auto
  Dests: 50:auto
(0 2) 50 PRINT
  Origs: 40:auto
  Dests: 60:auto
(0 2) 60 PRINT "TO THIS:"
  Origs: 50:auto
  Dests: 70:auto
(0 2) 70 PRINT
  Origs: 60:auto
  Dests: 80:auto
(0 2) 80 PRINT "O O O O O O O O O O"
  Origs: 70:auto
  Dests: 90:auto
(0 2) 90 PRINT
  Origs: 80:auto
  Dests: 100:auto
(0 2) 100 & "BY TYPING IN THE NUMBER CORRESPONDING TO THE POSITION OF THE LETTER"
  Origs: 90:auto
  Dests: 120:auto
(0 2) 120 & "ON SOME NUMBERS, ONE POSITION WILL CHANGE, ON OTHERS, TWO WILL CHANGE"
  Origs: 100:auto
  Dests: 140:auto
(0 2) 140 & "TO RESET THE LINE TO ALL X' S, TYPE A 0 (ZERO) AND TO START A NEW"
  Origs: 120:auto
  Dests: 160:auto
(0 2) 160 & "IN THE MIDDLE OF A GAME, TYPE 11 (ELEVEN)"
  Origs: 140:auto
  Dests: 170:auto
(0 2) 170 PRINT
  Origs: 160:auto
  Dests: 180:auto
F(Z) (0 1) 180 RANDOMIZE
  Origs: 170:auto, 350:ifthen, 770:goto
  Dests: 190:auto
F(Z) (0 4) 190 LET Q = RND(Y)
  Origs: 180:auto
  Dests: 200:auto
F(Z) (0 2) 200 PRINT "HERE IS THE STARTING LINE OF X'S:"
  Origs: 190:auto
  Dests: 210:auto
F(Z) (0 2) 210 PRINT
  Origs: 200:auto
  Dests: 220:auto
F(Z) (0 3) 220 LET C = 0
  Origs: 210:auto
  Dests: 230:auto
F(Z) (0 2) 230 PRINT "1 2 3 4 5 6 7 8 9 10"
  Origs: 220:auto, 370:ifthen
  Dests: 240:auto
F(Z) (0 2) 240 PRINT "X X X X X X X X X X"
  Origs: 230:auto
  Dests: 250:auto
F(Z) (0 2) 250 PRINT
  Origs: 240:auto
  Dests: 260:auto
F(Z) (0 2) 260 DIM A$(20)
  Origs: 250:auto
  Dests: 270:auto
F(X,Z) (1 3) 270 FOR X = 1 TO 10
  Origs: 260:auto
  Dests: 280:fornext, 290:fornext
F(X,Z) (0 3) 280 LET A$(X) = "X"
  Origs: 270:fornext
  Dests: 290:auto
F(X,Z) (0 1) 290 NEXT X
  Origs: 270:fornext, 280:auto
  Dests: 300:auto
F(Z) (0 2) 300 GOTO 320
  Origs: 290:auto
  Dests: 320:goto
F(Z) (0 2) 310 PRINT "ILLEGAL ENTRY TRY AGAIN"
  Origs: 340:ifthen, 360:ifthen
  Dests: 320:auto
F(Z) (0 2) 320 PRINT "INPUT THE NUMBER";
  Origs: 300:goto, 310:auto, 660:ifthen
  Dests: 330:auto
F(Z) (1 2) 330 INPUT N
  Origs: 320:auto
  Dests: 340:auto
F(Z) (1 6) 340 IF N <> INT(N) THEN 310
  Origs: 330:auto
  Dests: 310:ifthen, 350:auto
F(Z) (1 5) 350 IF N = 22 THEN 180
  Origs: 340:auto
  Dests: 180:ifthen, 360:auto
F(Z) (1 5) 360 IF N > 11 THEN 310
  Origs: 350:auto
  Dests: 310:ifthen, 370:auto
F(Z) (1 5) 370 IF N = 0 THEN 230
  Origs: 360:auto
  Dests: 230:ifthen, 380:auto
F(Z) (1 4) 380 IF M = N THEN 510
  Origs: 370:auto
  Dests: 390:auto, 510:ifthen
F(Z) (0 3) 390 LET M = N
  Origs: 380:auto
  Dests: 400:auto
F(Z) (1 4) 400 IF A$(N) = "O" THEN 480
  Origs: 390:auto
  Dests: 410:auto, 480:ifthen
F(Z) (0 3) 410 LET A$(N) = "O"
  Origs: 400:auto
  Dests: 420:auto
F(Z) (0 10) 420 LET R = TAN(Q + N / Q - N) - SIN(Q / N) + 336 * SIN(0.8 * N)
  Origs: 410:auto, 490:ifthen
  Dests: 430:auto
F(Z) (0 4) 430 LET N = ABS(R - INT(R))
  Origs: 420:auto
  Dests: 440:auto
F(Z) (0 4) 440 LET N = INT(10 * N)
  Origs: 430:auto
  Dests: 450:auto
F(Z) (1 4) 450 IF A$(N) = "O" THEN 480
  Origs: 440:auto
  Dests: 460:auto, 480:ifthen
F(Z) (0 3) 460 LET A$(N) = "O"
  Origs: 450:auto
  Dests: 470:auto
F(Z) (0 2) 470 GOTO 610
  Origs: 460:auto
  Dests: 610:goto
F(Z) (0 3) 480 LET A$(N) = "X"
  Origs: 400:ifthen, 450:ifthen
  Dests: 490:auto
F(Z) (1 5) 490 IF M = N THEN 420
  Origs: 480:auto
  Dests: 420:ifthen, 500:auto
F(Z) (0 2) 500 GOTO 610
  Origs: 490:auto
  Dests: 610:goto
F(Z) (1 4) 510 IF A$(N) = "O" THEN 590
  Origs: 380:ifthen
  Dests: 520:auto, 590:ifthen
F(Z) (0 3) 520 LET A$(N) = "O"
  Origs: 510:auto, 600:ifthen
  Dests: 530:auto
F(Z) (0 9) 530 LET R = 0.592 * COT(Q / N + Q) / SIN(N * 2 + Q) - COS(N)
  Origs: 520:auto
  Dests: 540:auto
F(Z) (0 5) 540 LET N = R - INT(R)
  Origs: 530:auto
  Dests: 550:auto
F(Z) (0 4) 550 LET N = INT(10 * N)
  Origs: 540:auto
  Dests: 560:auto
F(Z) (1 4) 560 IF A$(N) = "O" THEN 590
  Origs: 550:auto
  Dests: 570:auto, 590:ifthen
F(Z) (0 3) 570 LET A$(N) = "O"
  Origs: 560:auto
  Dests: 580:auto
F(Z) (0 2) 580 GOTO 610
  Origs: 570:auto
  Dests: 610:goto
F(Z) (0 3) 590 LET A$(N) = "X"
  Origs: 510:ifthen, 560:ifthen
  Dests: 600:auto
F(Z) (1 5) 600 IF M = N THEN 520
  Origs: 590:auto
  Dests: 520:ifthen, 610:auto
F(Z) (0 2) 610 PRINT "1 2 3 4 5 6 7 8 9 10"
  Origs: 470:goto, 500:goto, 580:goto, 600:auto
  Dests: 620:auto
F(Z) (0 3) 620 PRINT A$(Z); " ";
(1 1)       FOR Z = 1 TO 10
(0 1)       NEXT Z
  Origs: 610:auto
  Dests: 630:auto
F(Z) (0 4) 630 LET C = C + 1
  Origs: 620:auto
  Dests: 640:auto
F(Z) (0 2) 640 PRINT
  Origs: 630:auto
  Dests: 650:auto
F(Z) (1 3) 650 FOR Z = 1 TO 10
  Origs: 640:auto
  Dests: 660:fornext, 670:fornext
F(Z) (1 5) 660 IF A$(Z) <> "O" THEN 320
  Origs: 650:fornext
  Dests: 320:ifthen, 670:auto
F(Z) (0 1) 670 NEXT Z
  Origs: 650:fornext, 660:auto
  Dests: 680:auto
(1 4) 680 IF C > 12 THEN 710
  Origs: 670:auto
  Dests: 690:auto, 710:ifthen
(0 4) 690 PRINT "VERY GOOD. YOU GUESSED IT IN ONLY " C "GUESSES!!!!"
  Origs: 680:auto
  Dests: 700:auto
(0 2) 700 GOTO 720
  Origs: 690:auto
  Dests: 720:goto
(0 4) 710 PRINT "TRY HARDER NEXT TIME, IT TOOK YOU " C "GUESSES"
  Origs: 680:ifthen
  Dests: 720:auto
(0 2) 720 PRINT "DO YOU WANT TO DO ANOTHER PUZZLE";
  Origs: 700:goto, 710:auto
  Dests: 730:auto
(1 2) 730 INPUT X$
  Origs: 720:auto
  Dests: 740:auto
(1 4) 740 IF X$ = "NO" THEN 780
  Origs: 730:auto
  Dests: 760:auto, 780:ifthen
(0 2) 760 PRINT
  Origs: 740:auto
  Dests: 770:auto
(0 3) 770 GOTO 180
  Origs: 760:auto
  Dests: 180:goto
(0 1) 780 END
  Origs: 740:ifthen
  Dests: :stop

Unreachable code:

All executable lines are reachable.

