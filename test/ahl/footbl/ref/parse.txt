10 PRINT "THIS IS A DEMONSTRATION OF PDP-11 BASIC"
 TextValue:"THIS IS A DEMONSTRATION OF PDP-11 BASIC"
 CarriageControl:NL
20 PRINT "IF YOU NEED INSTRUCTIONS FOR PLAYING FOOTBALL, TYPE A 1"
 TextValue:"IF YOU NEED INSTRUCTIONS FOR PLAYING FOOTBALL, TYPE A 1"
 CarriageControl:NL
30 INPUT I
 Variable:I -> .
40 IF I<>1 THEN 340
 Variable:I -> .
 NumericValue:1
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:340
50 PRINT
 CarriageControl:NL
60 PRINT
 CarriageControl:NL
70 PRINT "WHEN IT ASKS YOU A QUESTION TO BE ANSWERED YES OR"
 TextValue:"WHEN IT ASKS YOU A QUESTION TO BE ANSWERED YES OR"
 CarriageControl:NL
80 PRINT "NO, TYPE IN FOR NO OR 1 FOR YES,"
 TextValue:"NO, TYPE IN FOR NO OR 1 FOR YES,"
 CarriageControl:NL
90 PRINT
 CarriageControl:NL
100 PRINT "ON OFFENSE YOU HAVE THE FOLLOWING PERMITTED PLAYS"
 TextValue:"ON OFFENSE YOU HAVE THE FOLLOWING PERMITTED PLAYS"
 CarriageControl:NL
110 PRINT "PLAY","CODE"
 TextValue:"PLAY"
 CarriageControl:,
 TextValue:"CODE"
 CarriageControl:NL
120 PRINT "RUN", "10" 
 TextValue:"RUN"
 CarriageControl:,
 TextValue:"10"
 CarriageControl:NL
130 PRINT "PASS", "11"
 TextValue:"PASS"
 CarriageControl:,
 TextValue:"11"
 CarriageControl:NL
140 PRINT "SWEEP", "12"
 TextValue:"SWEEP"
 CarriageControl:,
 TextValue:"12"
 CarriageControl:NL
150 PRINT "SCREEN PASS", "13"
 TextValue:"SCREEN PASS"
 CarriageControl:,
 TextValue:"13"
 CarriageControl:NL
160 PRINT "LONG PASS","14"
 TextValue:"LONG PASS"
 CarriageControl:,
 TextValue:"14"
 CarriageControl:NL
170 PRINT "DRAW PLAY", "15"
 TextValue:"DRAW PLAY"
 CarriageControl:,
 TextValue:"15"
 CarriageControl:NL
180 PRINT "PUNT", "16"
 TextValue:"PUNT"
 CarriageControl:,
 TextValue:"16"
 CarriageControl:NL
190 PRINT "FIELDGOAL","l7"
 TextValue:"FIELDGOAL"
 CarriageControl:,
 TextValue:"l7"
 CarriageControl:NL
200 PRINT
 CarriageControl:NL
210 PRINT "ON DEFENSE, YOU MAY TRY ONE OF THE FOLLOWING:"
 TextValue:"ON DEFENSE, YOU MAY TRY ONE OF THE FOLLOWING:"
 CarriageControl:NL
220 PRINT "DEFENSE", "CODE"
 TextValue:"DEFENSE"
 CarriageControl:,
 TextValue:"CODE"
 CarriageControl:NL
230 PRINT "NORMAL", "4", "GOOD AGAINST SWEEP AND SCREEN"
 TextValue:"NORMAL"
 CarriageControl:,
 TextValue:"4"
 CarriageControl:,
 TextValue:"GOOD AGAINST SWEEP AND SCREEN"
 CarriageControl:NL
240 PRINT "HOLD", "5", "GOOD AGAINST RUN, PASS AND DRAW"
 TextValue:"HOLD"
 CarriageControl:,
 TextValue:"5"
 CarriageControl:,
 TextValue:"GOOD AGAINST RUN, PASS AND DRAW"
 CarriageControl:NL
250 PRINT "BlITZ","6","GOOD AGAINST PASS OR LONG PASS"
 TextValue:"BlITZ"
 CarriageControl:,
 TextValue:"6"
 CarriageControl:,
 TextValue:"GOOD AGAINST PASS OR LONG PASS"
 CarriageControl:NL
260 PRINT "INTERCEPT", "7", "INCREASES THE ODDS FOR AN INTERCEPTION"
 TextValue:"INTERCEPT"
 CarriageControl:,
 TextValue:"7"
 CarriageControl:,
 TextValue:"INCREASES THE ODDS FOR AN INTERCEPTION"
 CarriageControl:NL
270 PRINT "BLOCK", "8", "GIVES YOU A CHANCE TO BLOCK A KICK,"
 TextValue:"BLOCK"
 CarriageControl:,
 TextValue:"8"
 CarriageControl:,
 TextValue:"GIVES YOU A CHANCE TO BLOCK A KICK,"
 CarriageControl:NL
280 PRINT " ", " ", "BUT DECREASES THE DISTANCE RUNBACK"
 TextValue:" "
 CarriageControl:,
 TextValue:" "
 CarriageControl:,
 TextValue:"BUT DECREASES THE DISTANCE RUNBACK"
 CarriageControl:NL
290 PRINT
 CarriageControl:NL
300 PRINT "TO CALL A PARTICULR PLAY JUST TYPE ITS CODE NUMBER"
 TextValue:"TO CALL A PARTICULR PLAY JUST TYPE ITS CODE NUMBER"
 CarriageControl:NL
310 PRINT "ALSO, AT ANY TIME DURING PLAY YOU MAY CALL TIME OUT"
 TextValue:"ALSO, AT ANY TIME DURING PLAY YOU MAY CALL TIME OUT"
 CarriageControl:NL
320 PRINT "BY TYPING A 12', HOWEVER YOU ARE PERMITTED ONLY THREE"
 TextValue:"BY TYPING A 12', HOWEVER YOU ARE PERMITTED ONLY THREE"
 CarriageControl:NL
330 PRINT "TIMEOUTS PER HALF,"
 TextValue:"TIMEOUTS PER HALF,"
 CarriageControl:NL
340 PRINT
 CarriageControl:NL
350 PRINT
 CarriageControl:NL
360 DEF FNT(X)=SIN(X)/COS(X)
 UserFunctionName:FNT -> .
 VariableName:X -> .
 Variable:X -> .
 FunctionSin:SIN(.) -> .
 Variable:X -> .
 FunctionCos:COS(.) -> .
 BinaryOperatorDivide:/(.,.) -> .
370 DIM R(17)
 NumericValue:17
 Declaration:R() -> .()
380 FOR I=0 TO 17
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:17"]
390 READ R(I)
 Variable:I -> .
 Variable:R(.) -> .
400 NEXT I
 Variable:I -> .
410 DATA 9,13,10,0,9,10,12,11,12,0,1,5,3,4,6,2,8,7
 NumericValue:9
 NumericValue:13
 NumericValue:10
 NumericValue:0
 NumericValue:9
 NumericValue:10
 NumericValue:12
 NumericValue:11
 NumericValue:12
 NumericValue:0
 NumericValue:1
 NumericValue:5
 NumericValue:3
 NumericValue:4
 NumericValue:6
 NumericValue:2
 NumericValue:8
 NumericValue:7
420 RANDOMIZE
 
430 LET F=0
 Variable:F -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
440 LET Z3=0
 Variable:Z3 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
450 LET O=0
 Variable:O -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
460 LET L=0
 Variable:L -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
470 DIM Z(5,3),P(2),D(2,5)
 NumericValue:5
 NumericValue:3
 Declaration:Z(,) -> .(,)
 NumericValue:2
 Declaration:P() -> .()
 NumericValue:2
 NumericValue:5
 Declaration:D(,) -> .(,)
480 FOR A=0 TO 5
 control: Variable:A -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:5"]
490 FOR B=0 TO 2
 control: Variable:B -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:2"]
500 READ Z(A,B),D(B,A)
 Variable:A -> .
 Variable:B -> .
 Variable:Z(.,.) -> .
 Variable:B -> .
 Variable:A -> .
 Variable:D(.,.) -> .
505 LET P(B)=0
 Variable:B -> .
 Variable:P(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
510 NEXT B
 Variable:B -> .
520 READ Z(A,3)
 Variable:A -> .
 NumericValue:3
 Variable:Z(.,.) -> .
530 NEXT A
 Variable:A -> .
540 PRINT "DO YOU WANT TO RECEIVE";
 TextValue:"DO YOU WANT TO RECEIVE"
 CarriageControl:;
550 LET X=1
 Variable:X -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
560 GOSUB 3610
 LineNumber:3610
570 LET S=2-SGN(13-Q)
 Variable:S -> .
 NumericValue:2
 NumericValue:13
 Variable:Q -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
580 LET K=S
 Variable:K -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
590 LET T1=120
 Variable:T1 -> .
 NumericValue:120
 AssignmentOperator:= =. -> .
600 LET U2=3
 Variable:U2 -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
610 LET U=3
 Variable:U -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
620 LET C=900
 Variable:C -> .
 NumericValue:900
 AssignmentOperator:= =. -> .
630 GOSUB 2250
 LineNumber:2250
640 LET F1=50
 Variable:F1 -> .
 NumericValue:50
 AssignmentOperator:= =. -> .
650 LET B=INT(F1+O*20*RND(0)+(1-O)*29*(2*RND(0)^7-RND(0)^(3-Z2)))
 WARNING: Line exceeds PRETTY width limit 72
 Variable:B -> .
 Variable:F1 -> .
 Variable:O -> .
 NumericValue:20
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:1
 Variable:O -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:29
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:2
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:7
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:3
 Variable:Z2 -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
660 LET O=0
 Variable:O -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
670 LET Z9=8
 Variable:Z9 -> .
 NumericValue:8
 AssignmentOperator:= =. -> .
680 GOSUB 1490
 LineNumber:1490
690 LET L=0
 Variable:L -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
700 IF B<99 THEN 2340
 Variable:B -> .
 NumericValue:99
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2340
710 PRINT "A TOUCHBACK"
 TextValue:"A TOUCHBACK"
 CarriageControl:NL
720 LET B=20
 Variable:B -> .
 NumericValue:20
 AssignmentOperator:= =. -> .
730 LET L=0
 Variable:L -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
740 IF S=2 THEN 770
 Variable:S -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:770
750 PRINT "MY ";
 TextValue:"MY "
 CarriageControl:;
760 GOTO 780
 LineNumber:780
770 PRINT "YOUR ";
 TextValue:"YOUR "
 CarriageControl:;
780 GOSUB 3290
 LineNumber:3290
790 GOSUB 2980
 LineNumber:2980
800 LET D=1
 Variable:D -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
810 LET F2=.03
 Variable:F2 -> .
 NumericValue:.03
 AssignmentOperator:= =. -> .
820 LET O=0
 Variable:O -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
830 IF C<=0 THEN 2770
 Variable:C -> .
 NumericValue:0
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:2770
840 GOSUB 2530
 LineNumber:2530
850 LET Z2=1
 Variable:Z2 -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
860 LET Z3=.3
 Variable:Z3 -> .
 NumericValue:.3
 AssignmentOperator:= =. -> .
870 IF C<=F*T1 THEN 2920
 Variable:C -> .
 Variable:F -> .
 Variable:T1 -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:2920
880 IF C<=0 THEN 2770
 Variable:C -> .
 NumericValue:0
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:2770
890 IF L=0 THEN 910
 Variable:L -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:910
900 PRINT "TIME TO GO--";
 TextValue:"TIME TO GO--"
 CarriageControl:;
910 PRINT INT(C/60);"MIN.";C-60*INT(C/60);" SEC.  ";
 Variable:C -> .
 NumericValue:60
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 CarriageControl:;
 TextValue:"MIN."
 CarriageControl:;
 Variable:C -> .
 NumericValue:60
 Variable:C -> .
 NumericValue:60
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:;
 TextValue:" SEC.  "
 CarriageControl:;
920 PRINT "YOUR PLAY";
 TextValue:"YOUR PLAY"
 CarriageControl:;
930 GOSUB 3610
 LineNumber:3610
940 IF S=1 THEN 980
 Variable:S -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:980
950 IF Q>8 THEN 920
 WARNING: Branch to line before GOSUB start
 Variable:Q -> .
 NumericValue:8
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:920
960 LET M=Q
 Variable:M -> .
 Variable:Q -> .
 AssignmentOperator:= . -> .
970 GOTO 1000
 LineNumber:1000
980 LET Y=Q-8
 Variable:Y -> .
 Variable:Q -> .
 NumericValue:8
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
990 IF ABS(Q-10.5)^2>3 THEN 920
 WARNING: Branch to line before GOSUB start
 Variable:Q -> .
 NumericValue:10.5
 BinaryOperatorMinus:-(.,.) -> .
 FunctionAbs:ABS(.) -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 NumericValue:3
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:920
1000 LET C=INT(C-L*(5+23*RND(X)))
 Variable:C -> .
 Variable:C -> .
 Variable:L -> .
 NumericValue:5
 NumericValue:23
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
1010 LET L=1
 Variable:L -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1020 IF M=7 THEN 1760
 Variable:M -> .
 NumericValue:7
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1760
1030 IF M=8 THEN 1920
 Variable:M -> .
 NumericValue:8
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1920
1040 LET Y1=Y-1
 Variable:Y1 -> .
 Variable:Y -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1050 IF RND(X)>Z(M-1,Y1) THEN 1240
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 Variable:M -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:Y1 -> .
 Variable:Z(.,.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1240
1060 LET A=2
 Variable:A -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
1070 GOSUB 3020
 LineNumber:3020
1080 IF M<4 THEN 1110
 Variable:M -> .
 NumericValue:4
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1110
1090 PRINT "PASS COMPLETE..";
 TextValue:"PASS COMPLETE.."
 CarriageControl:;
1100 LET L=SGN(INT(4*RND(0)))
 Variable:L -> .
 NumericValue:4
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 FunctionSgn:SGN(.) -> .
 AssignmentOperator:= . -> .
1110 IF RND(X)<F2 THEN 2510
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 Variable:F2 -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2510
1120 IF G>0 THEN 1210
 Variable:G -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1210
1130 IF G=0 THEN 1170
 Variable:G -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1170
1140 IF G+B<1 THEN 2170
 Variable:G -> .
 Variable:B -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2170
1150 PRINT "LOSS OF";-G;
 TextValue:"LOSS OF"
 CarriageControl:;
 Variable:G -> .
 UnaryOperatorMinus:-(.) -> .
 CarriageControl:;
1160 GOTO 1610
 LineNumber:1610
1170 PRINT "NO GAIN"
 TextValue:"NO GAIN"
 CarriageControl:NL
1180 LET Z9=2
 Variable:Z9 -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
1190 GOSUB 1490 
 LineNumber:1490
1200 GOTO 1670
 LineNumber:1670
1210 IF B+G>99 THEN 1650
 Variable:B -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:99
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1650
1220 PRINT "GAIN OF";G;
 TextValue:"GAIN OF"
 CarriageControl:;
 Variable:G -> .
 CarriageControl:;
1230 GOTO 1610 
 LineNumber:1610
1240 IF M>3 THEN 1280
 Variable:M -> .
 NumericValue:3
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1280
1250 LET A=1
 Variable:A -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1260 GOSUB 3020
 LineNumber:3020
1270 GOTO 1120
 WARNING: Branch to line before GOSUB start
 LineNumber:1120
1280 IF RND(X)<.06*(2-SGN(Y-3)) THEN 1360
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 NumericValue:.06
 NumericValue:2
 Variable:Y -> .
 NumericValue:3
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1360
1290 IF RND(0)<.05*INT(Y/3.5)/5 THEN 1510
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:.05
 Variable:Y -> .
 NumericValue:3.5
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:5
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1510
1300 LET Z9=6
 Variable:Z9 -> .
 NumericValue:6
 AssignmentOperator:= =. -> .
1310 GOSUB 1490
 LineNumber:1490
1320 PRINT "PASS INCOMPLETE"
 TextValue:"PASS INCOMPLETE"
 CarriageControl:NL
1330 LET L=0
 Variable:L -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1340 LET G=0
 Variable:G -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1350 GOTO 3120
 LineNumber:3120
1360 PRINT "PASS **INTERCEPTED**"
 TextValue:"PASS **INTERCEPTED**"
 CarriageControl:NL
1370 LET A=1
 Variable:A -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1380 GOSUB 3020
 LineNumber:3020
1390 IF B<40 THEN 1410
 Variable:B -> .
 NumericValue:40
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1410
1400 LET G=20*(1+SGN(G))
 Variable:G -> .
 NumericValue:20
 NumericValue:1
 Variable:G -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
1410 LET B=100-B-G
 Variable:B -> .
 NumericValue:100
 Variable:B -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:G -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1420 LET S=3-S
 Variable:S -> .
 NumericValue:3
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1430 LET Z9=9
 Variable:Z9 -> .
 NumericValue:9
 AssignmentOperator:= =. -> .
1440 GOSUB 1490
 LineNumber:1490
1450 IF B<1 THEN 710
 WARNING: Branch to line before GOSUB start
 Variable:B -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:710
1460 IF B>99 THEN 1650
 Variable:B -> .
 NumericValue:99
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1650
1470 PRINT "AT ";
 TextValue:"AT "
 CarriageControl:;
1480 GOTO 2360
 LineNumber:2360
1490 LET C=C-INT(4+Z9/2*(1+RND(0)))
 Variable:C -> .
 Variable:C -> .
 NumericValue:4
 Variable:Z9 -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:1
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1500 RETURN
 
1510 LET G=-(5+INT(10*RND(X)))
 Variable:G -> .
 NumericValue:5
 NumericValue:10
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 UnaryOperatorMinus:-(.) -> .
 AssignmentOperator:= . -> .
1520 PRINT "THE QUARTERBACK "
 TextValue:"THE QUARTERBACK "
 CarriageControl:NL
1530 IF RND(X)>.5 THEN 1560
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 NumericValue:.5
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1560
1540 PRINT "IS THROWN FOR A ";
 TextValue:"IS THROWN FOR A "
 CarriageControl:;
1550 GOTO 1110
 WARNING: Branch to line before GOSUB start
 LineNumber:1110
1560 LET G=-(2*G*8)
 Variable:G -> .
 NumericValue:2
 Variable:G -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:8
 BinaryOperatorMultiply:*(.,.) -> .
 UnaryOperatorMinus:-(.) -> .
 AssignmentOperator:= . -> .
1570 LET M=B
 Variable:M -> .
 Variable:B -> .
 AssignmentOperator:= . -> .
1580 LET A=1
 Variable:A -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1590 PRINT "SCRAMBLES FOR A ";
 TextValue:"SCRAMBLES FOR A "
 CarriageControl:;
1600 GOTO 1110
 WARNING: Branch to line before GOSUB start
 LineNumber:1110
1610 LET B=B+G
 Variable:B -> .
 Variable:B -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1620 PRINT "TO ";
 TextValue:"TO "
 CarriageControl:;
1630 GOSUB 3300
 LineNumber:3300
1640 IF B<99 THEN 1670
 Variable:B -> .
 NumericValue:99
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1670
1650 GOSUB 1990
 LineNumber:1990
1660 GOTO 630
 WARNING: Branch to line before GOSUB start
 LineNumber:630
1670 IF B1>B THEN 3120
 Variable:B1 -> .
 Variable:B -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3120
1680 IF B1<B THEN 1730
 Variable:B1 -> .
 Variable:B -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1730
1690 IF RND(0)>.5 THEN 1730
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:.5
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1730
1700 PRINT "**MEASUREMENT**"
 TextValue:"**MEASUREMENT**"
 CarriageControl:NL
1710 GOSUB 3520
 LineNumber:3520
1720 IF RND(X)<.5 THEN 3120
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 NumericValue:.5
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3120
1730 GOSUB 2980
 LineNumber:2980
1740 LET D=0
 Variable:D -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1750 GOTO 3120
 LineNumber:3120
1760 IF RND(X)<.06 THEN 1890
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 NumericValue:.06
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1890
1770 LET B=B+30*INT(15*(1*RND(0)^3))
 Variable:B -> .
 Variable:B -> .
 NumericValue:30
 NumericValue:15
 NumericValue:1
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:3
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1780 LET Z9=2
 Variable:Z9 -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
1790 GOSUB 1490
 LineNumber:1490
1800 IF B<=99 THEN 1550
 WARNING: Branch to line before GOSUB start
 Variable:B -> .
 NumericValue:99
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:1550
1810 LET P1=3
 Variable:P1 -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
1820 GOSUB 2030
 LineNumber:2030
1830 IF P1=0 THEN 710
 WARNING: Branch to line before GOSUB start
 Variable:P1 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:710
1840 GOTO 630
 WARNING: Branch to line before GOSUB start
 LineNumber:630
1850 PRINT "THE KICK IS ";
 TextValue:"THE KICK IS "
 CarriageControl:;
1860 LET Z2=0
 Variable:Z2 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1870 LET S=3-S
 Variable:S -> .
 NumericValue:3
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1880 GOTO 2340
 LineNumber:2340
1890 PRINT "**BLOCKED** RECOVERED..";
 TextValue:"**BLOCKED** RECOVERED.."
 CarriageControl:;
1900 LET G=INT(14*RND(X))
 Variable:G -> .
 NumericValue:14
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
1910 GOTO 1410
 WARNING: Branch to line before GOSUB start
 LineNumber:1410
1920 PRINT "THE PUNT IS ";
 TextValue:"THE PUNT IS "
 CarriageControl:;
1930 IF RND(X)<.06 THEN 1890
 WARNING: Branch to line before GOSUB start
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 NumericValue:.06
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1890
1940 LET F1=B
 Variable:F1 -> .
 Variable:B -> .
 AssignmentOperator:= . -> .
1950 LET Z2=1
 Variable:Z2 -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
1960 LET S=3-S
 Variable:S -> .
 NumericValue:3
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1970 LET Z3=.65
 Variable:Z3 -> .
 NumericValue:.65
 AssignmentOperator:= =. -> .
1980 GOTO 650
 WARNING: Branch to line before GOSUB start
 LineNumber:650
1990 PRINT "**TOUCHDOWN**"
 TextValue:"**TOUCHDOWN**"
 CarriageControl:NL
2000 LET P1=1 
 Variable:P1 -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
2010 LET P(S)=P(S)+6
 Variable:S -> .
 Variable:P(.) -> .
 Variable:S -> .
 Variable:P(.) -> .
 NumericValue:6
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2020 LET B=130
 Variable:B -> .
 NumericValue:130
 AssignmentOperator:= =. -> .
2030 PRINT "THE KICK IS ";
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 TextValue:"THE KICK IS "
 CarriageControl:;
2040 IF RND(X)<(B/132)^4 THEN 2070
 WARNING: Multiple GOSUB entry points
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 Variable:B -> .
 NumericValue:132
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:4
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2070
2050 LET P1=0
 WARNING: Multiple GOSUB entry points
 Variable:P1 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2060 PRINT "NO ";
 WARNING: Multiple GOSUB entry points
 TextValue:"NO "
 CarriageControl:;
2070 PRINT "GOOD"
 WARNING: Multiple GOSUB entry points
 TextValue:"GOOD"
 CarriageControl:NL
2080 LET P(S)=P(S)+P1
 WARNING: Multiple GOSUB entry points
 Variable:S -> .
 Variable:P(.) -> .
 Variable:S -> .
 Variable:P(.) -> .
 Variable:P1 -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2090 GOSUB 2120
 WARNING: Multiple GOSUB entry points
 LineNumber:2120
2100 LET S=3-S
 WARNING: Multiple GOSUB entry points
 Variable:S -> .
 NumericValue:3
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2110 RETURN
 WARNING: Multiple GOSUB entry points
 
2120 PRINT "SCORE! ME";P(1);" YOU";P(2)
 WARNING: GOSUB length exceeds limit 40
 TextValue:"SCORE! ME"
 CarriageControl:;
 NumericValue:1
 Variable:P(.) -> .
 CarriageControl:;
 TextValue:" YOU"
 CarriageControl:;
 NumericValue:2
 Variable:P(.) -> .
 CarriageControl:NL
2130 LET L=0
 Variable:L -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2140 IF X<5 THEN 2160
 Variable:X -> .
 NumericValue:5
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2160
2150 IF P(1)<>P(2) THEN 2770
 NumericValue:1
 Variable:P(.) -> .
 NumericValue:2
 Variable:P(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2770
2160 RETURN
 
2170 PRINT "**SAFETY**"
 TextValue:"**SAFETY**"
 CarriageControl:NL
2180 LET P(3-S)=P(3-S)+2
 NumericValue:3
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:P(.) -> .
 NumericValue:3
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:P(.) -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2190 LET F1=30
 Variable:F1 -> .
 NumericValue:30
 AssignmentOperator:= =. -> .
2200 LET S=3-S
 Variable:S -> .
 NumericValue:3
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2210 GOSUB 2120
 LineNumber:2120
2220 GOSUB 3440
 LineNumber:3440
2230 PRINT "FROM THE 20"
 TextValue:"FROM THE 20"
 CarriageControl:NL
2240 GOTO 650
 WARNING: Branch to line before GOSUB start
 LineNumber:650
2250 GOSUB 3440
 LineNumber:3440
2260 IF S=2 THEN 2330
 Variable:S -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2330
2270 PRINT "ON-SIDE";
 TextValue:"ON-SIDE"
 CarriageControl:;
2280 GOSUB 3610
 LineNumber:3610
2290 IF Q<>13 THEN 2330
 Variable:Q -> .
 NumericValue:13
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2330
2300 LET F2=.15
 Variable:F2 -> .
 NumericValue:.15
 AssignmentOperator:= =. -> .
2310 LET Z2=1
 Variable:Z2 -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
2320 LET O=1
 Variable:O -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
2330 RETURN
 
2340 LET B=100-B
 Variable:B -> .
 NumericValue:100
 Variable:B -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2350 PRINT "RECEIVED AT ";
 TextValue:"RECEIVED AT "
 CarriageControl:;
2360 GOSUB 3300
 LineNumber:3300
2370 IF Z2*RND(X)>Z3 THEN 2490
 Variable:Z2 -> .
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z3 -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:2490
2380 IF RND(X)<F2 THEN 2500
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 Variable:F2 -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2500
2390 LET G=5*INT(100*RND(0))
 Variable:G -> .
 NumericValue:5
 NumericValue:100
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
2400 IF RND(0)<.15 THEN 2430
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:.15
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2430
2410 LET G=INT(24*(1-RND(X)^2))
 Variable:G -> .
 NumericValue:24
 NumericValue:1
 Variable:X -> .
 FunctionRnd:RND(.) -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2420 IF G=0 THEN 2490
 Variable:G -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2490
2430 LET B=B+G
 Variable:B -> .
 Variable:B -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2440 PRINT " AND RUN BACK...";
 TextValue:" AND RUN BACK..."
 CarriageControl:;
2450 LET L=1
 Variable:L -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
2460 IF B>99 THEN 1650
 WARNING: Branch to line before GOSUB start
 Variable:B -> .
 NumericValue:99
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1650
2470 PRINT " TO ";
 TextValue:" TO "
 CarriageControl:;
2480 GOSUB 3300
 LineNumber:3300
2490 IF RND(0)>F2 THEN 3260
 NumericValue:0
 FunctionRnd:RND(.) -> .
 Variable:F2 -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3260
2500 LET G=0
 Variable:G -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2510 PRINT "**FUMBLE**";
 TextValue:"**FUMBLE**"
 CarriageControl:;
2520 GOTO 1410
 WARNING: Branch to line before GOSUB start
 LineNumber:1410
2530 IF S=1 THEN 2560
 Variable:S -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2560
2540 LET Y=INT(1+3.5*RND(0))
 Variable:Y -> .
 NumericValue:1
 NumericValue:3.5
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2550 RETURN
 
2560 LET M=INT(55*RND(0)/10.5)+1
 Variable:M -> .
 NumericValue:55
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:10.5
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2570 IF (B1-B)/(5-D)<3 THEN 2590
 Variable:B1 -> .
 Variable:B -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:5
 Variable:D -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:3
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2590
2580 LET M=INT(6-4*RND(0)^2)
 Variable:M -> .
 NumericValue:6
 NumericValue:4
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2590 IF L*F*60>=C THEN 2670
 Variable:L -> .
 Variable:F -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:60
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:C -> .
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:2670
2600 IF D<4 THEN 2550
 Variable:D -> .
 NumericValue:4
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2550
2610 PRINT "I'LL ";
 TextValue:"I'LL "
 CarriageControl:;
2620 IF B<55 THEN 2720
 Variable:B -> .
 NumericValue:55
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2720
2630 IF 0<4*RND(0)-B1+B THEN 2750
 NumericValue:0
 NumericValue:4
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B1 -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:B -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2750
2640 PRINT "TRY FOR A FIELD GOAL"
 TextValue:"TRY FOR A FIELD GOAL"
 CarriageControl:NL
2650 LET M=7
 Variable:M -> .
 NumericValue:7
 AssignmentOperator:= =. -> .
2660 RETURN
 
2670 IF P(2)*U2<=P(1)*U2 THEN 2600
 NumericValue:2
 Variable:P(.) -> .
 Variable:U2 -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 Variable:P(.) -> .
 Variable:U2 -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:2600
2680 PRINT "TIME OUT"
 TextValue:"TIME OUT"
 CarriageControl:NL
2690 LET U2=U2-1
 Variable:U2 -> .
 Variable:U2 -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2700 GOSUB 3520
 LineNumber:3520
2710 GOTO 2600
 LineNumber:2600
2720 PRINT "PUNT"
 TextValue:"PUNT"
 CarriageControl:NL
2730 LET M=8
 Variable:M -> .
 NumericValue:8
 AssignmentOperator:= =. -> .
2740 RETURN
 
2750 PRINT "GO FOR IT"
 TextValue:"GO FOR IT"
 CarriageControl:NL
2760 RETURN
 
2770 IF X<4 THEN 2830
 Variable:X -> .
 NumericValue:4
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2830
2780 IF P(1)=P(2) THEN 2830
 NumericValue:1
 Variable:P(.) -> .
 NumericValue:2
 Variable:P(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2830
2790 PRINT "THE GAME IS OVER"
 TextValue:"THE GAME IS OVER"
 CarriageControl:NL
2800 PRINT "FINAL ";
 TextValue:"FINAL "
 CarriageControl:;
2810 GOSUB 2120
 LineNumber:2120
2820 STOP
 WARNING: Terminating statement in GOSUB
 
2830 PRINT "END OF PERIOD";X
 TextValue:"END OF PERIOD"
 CarriageControl:;
 Variable:X -> .
 CarriageControl:NL
2840 GOSUB 2120
 LineNumber:2120
2850 LET F=1-F
 Variable:F -> .
 NumericValue:1
 Variable:F -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2860 GOSUB 3520
 LineNumber:3520
2870 LET C=900
 Variable:C -> .
 NumericValue:900
 AssignmentOperator:= =. -> .
2880 LET X=X+1
 Variable:X -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2890 IF F<>0 THEN 810
 WARNING: Branch to line before GOSUB start
 Variable:F -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:810
2900 LET S=3-K
 Variable:S -> .
 NumericValue:3
 Variable:K -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2910 GOTO 580
 WARNING: Branch to line before GOSUB start
 LineNumber:580
2920 IF T1=0 THEN 2770
 Variable:T1 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2770
2930 PRINT "2 MINUTE WARNING"
 TextValue:"2 MINUTE WARNING"
 CarriageControl:NL
2940 GOSUB 3520
 LineNumber:3520
2950 LET T1=0
 Variable:T1 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2960 LET C=120
 Variable:C -> .
 NumericValue:120
 AssignmentOperator:= =. -> .
2970 GOTO 880
 WARNING: Branch to line before GOSUB start
 LineNumber:880
2980 LET B1=B+10
 Variable:B1 -> .
 Variable:B -> .
 NumericValue:10
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2990 IF B1<=100 THEN 3010
 Variable:B1 -> .
 NumericValue:100
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:3010
3000 LET B1=100
 Variable:B1 -> .
 NumericValue:100
 AssignmentOperator:= =. -> .
3010 RETURN
 
3020 LET Q=1.3*(A*RND(0)-1)-.06
 Variable:Q -> .
 NumericValue:1.3
 Variable:A -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:.06
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3030 LET A=1
 Variable:A -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
3040 IF Q>=0 THEN 3070
 Variable:Q -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:3070
3050 LET A=0
 Variable:A -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3060 LET Q=-Q
 Variable:Q -> .
 Variable:Q -> .
 UnaryOperatorMinus:-(.) -> .
 AssignmentOperator:= . -> .
3070 LET M=M-1
 Variable:M -> .
 Variable:M -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3080 LET G=D(A,M1)+FNT(Q)*(D(2,M)-D(A,M))/3.5
 Variable:G -> .
 Variable:A -> .
 Variable:M1 -> .
 Variable:D(.,.) -> .
 Variable:Q -> .
 UserFunction:FNT(.) -> .
 NumericValue:2
 Variable:M -> .
 Variable:D(.,.) -> .
 Variable:A -> .
 Variable:M -> .
 Variable:D(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:3.5
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3090 LET G=G+INT(RND(0)+.02)*A+100*RND(0)
 Variable:G -> .
 Variable:G -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 NumericValue:.02
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 Variable:A -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:100
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3100 LET G=INT(G)
 Variable:G -> .
 Variable:G -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
3110 RETURN
 
3120 LET D=D+1
 Variable:D -> .
 Variable:D -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3130 IF D=5 THEN 3240
 Variable:D -> .
 NumericValue:5
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3240
3140 IF D<> 1 THEN 3160
 Variable:D -> .
 NumericValue:1
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3160
3150 PRINT "1ST";
 TextValue:"1ST"
 CarriageControl:;
3160 IF D<>2 THEN 3180
 Variable:D -> .
 NumericValue:2
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3180
3170 PRINT "2ND";
 TextValue:"2ND"
 CarriageControl:;
3180 IF D<>3 THEN 3200
 Variable:D -> .
 NumericValue:3
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3200
3190 PRINT "3RD";
 TextValue:"3RD"
 CarriageControl:;
3200 IF D<4 THEN 3220
 Variable:D -> .
 NumericValue:4
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3220
3210 PRINT "4TH";
 TextValue:"4TH"
 CarriageControl:;
3220 PRINT " AND";B1-B;"    ";
 TextValue:" AND"
 CarriageControl:;
 Variable:B1 -> .
 Variable:B -> .
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:;
 TextValue:"    "
 CarriageControl:;
3230 GOTO 810
 WARNING: Branch to line before GOSUB start
 LineNumber:810
3240 LET S=3-S
 Variable:S -> .
 NumericValue:3
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3250 LET B=100-B
 Variable:B -> .
 NumericValue:100
 Variable:B -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3260 IF S=2 THEN 770
 WARNING: Branch to line before GOSUB start
 Variable:S -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:770
3270 PRINT "MY ";
 TextValue:"MY "
 CarriageControl:;
3280 GOTO 780
 WARNING: Branch to line before GOSUB start
 LineNumber:780
3290 PRINT "BALL ON ";
 TextValue:"BALL ON "
 CarriageControl:;
3300 IF B=50 THEN 3400
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:B -> .
 NumericValue:50
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3400
3310 LET V=50-ABS(B-50)
 WARNING: Multiple GOSUB entry points
 Variable:V -> .
 NumericValue:50
 Variable:B -> .
 NumericValue:50
 BinaryOperatorMinus:-(.,.) -> .
 FunctionAbs:ABS(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3320 LET C=C-INT(7+3*RND(0))
 WARNING: Multiple GOSUB entry points
 Variable:C -> .
 Variable:C -> .
 NumericValue:7
 NumericValue:3
 NumericValue:0
 FunctionRnd:RND(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3330 IF S=1 THEN 3420
 WARNING: Multiple GOSUB entry points
 Variable:S -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3420
3340 IF B<50 THEN 3370
 WARNING: Multiple GOSUB entry points
 Variable:B -> .
 NumericValue:50
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3370
3350 PRINT "MY ";
 WARNING: Multiple GOSUB entry points
 TextValue:"MY "
 CarriageControl:;
3360 GOTO 3380
 WARNING: Multiple GOSUB entry points
 LineNumber:3380
3370 PRINT "YOUR ";
 WARNING: Multiple GOSUB entry points
 TextValue:"YOUR "
 CarriageControl:;
3380 PRINT V
 WARNING: Multiple GOSUB entry points
 Variable:V -> .
 CarriageControl:NL
3390 RETURN
 WARNING: Multiple GOSUB entry points
 
3400 PRINT "THE 50"
 WARNING: Multiple GOSUB entry points
 TextValue:"THE 50"
 CarriageControl:NL
3410 RETURN
 WARNING: Multiple GOSUB entry points
 
3420 IF B<50 THEN 3350
 WARNING: Multiple GOSUB entry points
 Variable:B -> .
 NumericValue:50
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3350
3430 GOTO 3370
 WARNING: Multiple GOSUB entry points
 LineNumber:3370
3440 IF S=2 THEN 3470
 Variable:S -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3470
3450 PRINT "YOU";
 TextValue:"YOU"
 CarriageControl:;
3460 GOTO 3480
 LineNumber:3480
3470 PRINT "I";
 TextValue:"I"
 CarriageControl:;
3480 PRINT " KICK OFF."
 TextValue:" KICK OFF."
 CarriageControl:NL
3490 LET F2=.06
 Variable:F2 -> .
 NumericValue:.06
 AssignmentOperator:= =. -> .
3500 LET Z2=0
 Variable:Z2 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3510 RETURN
 
3520 LET L=0
 Variable:L -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3530 PRINT "TIMEOUT CALLED..."
 TextValue:"TIMEOUT CALLED..."
 CarriageControl:NL
3540 PRINT
 CarriageControl:NL
3550 RETURN
 
3560 IF U=0 THEN 3600
 Variable:U -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3600
3570 LET U=U+1
 Variable:U -> .
 Variable:U -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3580 GOSUB 3520
 LineNumber:3520
3590 GOTO 3610
 LineNumber:3610
3600 PRINT "..WRONG, TRY AGAIN"
 TextValue:"..WRONG, TRY AGAIN"
 CarriageControl:NL
3610 INPUT A
 WARNING: Inconsistent GOSUB origins
 Variable:A -> .
3620 IF ABS(INT(A))>17 THEN 3600
 WARNING: Branch to line before GOSUB start
 Variable:A -> .
 FunctionInt:INT(.) -> .
 FunctionAbs:ABS(.) -> .
 NumericValue:17
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3600
3630 LET Q=R(INT(ABS(A)))
 Variable:Q -> .
 Variable:A -> .
 FunctionAbs:ABS(.) -> .
 FunctionInt:INT(.) -> .
 Variable:R(.) -> .
 AssignmentOperator:= . -> .
3640 IF Q=0 THEN 3600
 WARNING: Branch to line before GOSUB start
 Variable:Q -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3600
3650 IF Q=100 THEN 3600
 WARNING: Branch to line before GOSUB start
 Variable:Q -> .
 NumericValue:100
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3600
3660 RETURN
 
3670 DATA .5,-2,.25,4,.5,13,.55
 NumericValue:.5
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:.25
 NumericValue:4
 NumericValue:.5
 NumericValue:13
 NumericValue:.55
3680 DATA .4,-2,.3,7,.65,15,.75
 NumericValue:.4
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:.3
 NumericValue:7
 NumericValue:.65
 NumericValue:15
 NumericValue:.75
3690 DATA .4,-2,.3,6,.6,15,.35
 NumericValue:.4
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:.3
 NumericValue:6
 NumericValue:.6
 NumericValue:15
 NumericValue:.35
3700 DATA .65,-2,.65,6,.6,17,.9
 NumericValue:.65
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:.65
 NumericValue:6
 NumericValue:.6
 NumericValue:17
 NumericValue:.9
3710 DATA .4,2,.7,10,.4,27,.2
 NumericValue:.4
 NumericValue:2
 NumericValue:.7
 NumericValue:10
 NumericValue:.4
 NumericValue:27
 NumericValue:.2
3720 DATA .1,19,.4,35,.2,100,.1
 NumericValue:.1
 NumericValue:19
 NumericValue:.4
 NumericValue:35
 NumericValue:.2
 NumericValue:100
 NumericValue:.1
3730 END
 

