10 PRINT "THIS IS A DEMONSTRATION OF PDP-11 BASIC"
 TextConstant:"THIS IS A DEMONSTRATION OF PDP-11 BASIC"
 CarriageControl:NL
20 PRINT "IF YOU NEED INSTRUCTIONS FOR PLAYING FOOTBALL, TYPE A 1"
 TextConstant:"IF YOU NEED INSTRUCTIONS FOR PLAYING FOOTBALL, TYPE A 1"
 CarriageControl:NL
30 INPUT I
 Variable:I -> _
40 IF I<>1 THEN 340
 Variable:I -> _
 NumericConstant:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:340
50 PRINT
 CarriageControl:NL
60 PRINT
 CarriageControl:NL
70 PRINT "WHEN IT ASKS YOU A QUESTION TO BE ANSWERED YES OR"
 TextConstant:"WHEN IT ASKS YOU A QUESTION TO BE ANSWERED YES OR"
 CarriageControl:NL
80 PRINT "NO, TYPE IN FOR NO OR 1 FOR YES,"
 TextConstant:"NO, TYPE IN FOR NO OR 1 FOR YES,"
 CarriageControl:NL
90 PRINT
 CarriageControl:NL
100 PRINT "ON OFFENSE YOU HAVE THE FOLLOWING PERMITTED PLAYS"
 TextConstant:"ON OFFENSE YOU HAVE THE FOLLOWING PERMITTED PLAYS"
 CarriageControl:NL
110 PRINT "PLAY","CODE"
 TextConstant:"PLAY"
 CarriageControl:,
 TextConstant:"CODE"
 CarriageControl:NL
120 PRINT "RUN", "10" 
 TextConstant:"RUN"
 CarriageControl:,
 TextConstant:"10"
 CarriageControl:NL
130 PRINT "PASS", "11"
 TextConstant:"PASS"
 CarriageControl:,
 TextConstant:"11"
 CarriageControl:NL
140 PRINT "SWEEP", "12"
 TextConstant:"SWEEP"
 CarriageControl:,
 TextConstant:"12"
 CarriageControl:NL
150 PRINT "SCREEN PASS", "13"
 TextConstant:"SCREEN PASS"
 CarriageControl:,
 TextConstant:"13"
 CarriageControl:NL
160 PRINT "LONG PASS","14"
 TextConstant:"LONG PASS"
 CarriageControl:,
 TextConstant:"14"
 CarriageControl:NL
170 PRINT "DRAW PLAY", "15"
 TextConstant:"DRAW PLAY"
 CarriageControl:,
 TextConstant:"15"
 CarriageControl:NL
180 PRINT "PUNT", "16"
 TextConstant:"PUNT"
 CarriageControl:,
 TextConstant:"16"
 CarriageControl:NL
190 PRINT "FIELDGOAL","l7"
 TextConstant:"FIELDGOAL"
 CarriageControl:,
 TextConstant:"l7"
 CarriageControl:NL
200 PRINT
 CarriageControl:NL
210 PRINT "ON DEFENSE, YOU MAY TRY ONE OF THE FOLLOWING:"
 TextConstant:"ON DEFENSE, YOU MAY TRY ONE OF THE FOLLOWING:"
 CarriageControl:NL
220 PRINT "DEFENSE", "CODE"
 TextConstant:"DEFENSE"
 CarriageControl:,
 TextConstant:"CODE"
 CarriageControl:NL
230 PRINT "NORMAL", "4", "GOOD AGAINST SWEEP AND SCREEN"
 TextConstant:"NORMAL"
 CarriageControl:,
 TextConstant:"4"
 CarriageControl:,
 TextConstant:"GOOD AGAINST SWEEP AND SCREEN"
 CarriageControl:NL
240 PRINT "HOLD", "5", "GOOD AGAINST RUN, PASS AND DRAW"
 TextConstant:"HOLD"
 CarriageControl:,
 TextConstant:"5"
 CarriageControl:,
 TextConstant:"GOOD AGAINST RUN, PASS AND DRAW"
 CarriageControl:NL
250 PRINT "BlITZ","6","GOOD AGAINST PASS OR LONG PASS"
 TextConstant:"BlITZ"
 CarriageControl:,
 TextConstant:"6"
 CarriageControl:,
 TextConstant:"GOOD AGAINST PASS OR LONG PASS"
 CarriageControl:NL
260 PRINT "INTERCEPT", "7", "INCREASES THE ODDS FOR AN INTERCEPTION"
 TextConstant:"INTERCEPT"
 CarriageControl:,
 TextConstant:"7"
 CarriageControl:,
 TextConstant:"INCREASES THE ODDS FOR AN INTERCEPTION"
 CarriageControl:NL
270 PRINT "BLOCK", "8", "GIVES YOU A CHANCE TO BLOCK A KICK,"
 TextConstant:"BLOCK"
 CarriageControl:,
 TextConstant:"8"
 CarriageControl:,
 TextConstant:"GIVES YOU A CHANCE TO BLOCK A KICK,"
 CarriageControl:NL
280 PRINT " ", " ", "BUT DECREASES THE DISTANCE RUNBACK"
 TextConstant:" "
 CarriageControl:,
 TextConstant:" "
 CarriageControl:,
 TextConstant:"BUT DECREASES THE DISTANCE RUNBACK"
 CarriageControl:NL
290 PRINT
 CarriageControl:NL
300 PRINT "TO CALL A PARTICULR PLAY JUST TYPE ITS CODE NUMBER"
 TextConstant:"TO CALL A PARTICULR PLAY JUST TYPE ITS CODE NUMBER"
 CarriageControl:NL
310 PRINT "ALSO, AT ANY TIME DURING PLAY YOU MAY CALL TIME OUT"
 TextConstant:"ALSO, AT ANY TIME DURING PLAY YOU MAY CALL TIME OUT"
 CarriageControl:NL
320 PRINT "BY TYPING A 12', HOWEVER YOU ARE PERMITTED ONLY THREE"
 TextConstant:"BY TYPING A 12', HOWEVER YOU ARE PERMITTED ONLY THREE"
 CarriageControl:NL
330 PRINT "TIMEOUTS PER HALF,"
 TextConstant:"TIMEOUTS PER HALF,"
 CarriageControl:NL
340 PRINT
 CarriageControl:NL
350 PRINT
 CarriageControl:NL
360 DEF FNT(X)=SIN(X)/COS(X)
 UserFunctionName:FNT -> _
 VariableName:X -> _
 Variable:X -> _
 FunctionSin:SIN(_) -> _
 Variable:X -> _
 FunctionCos:COS(_) -> _
 BinaryOperatorDivide:/(_,_) -> _
370 DIM R(17)
 NumericConstant:17
 Declaration:R() -> _()
380 FOR I=0 TO 17
 control: Variable:I -> _
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:17"]
390 READ R(I)
 Variable:I -> _
 Variable:R(_) -> _
400 NEXT I
 Variable:I -> _
410 DATA 9,13,10,0,9,10,12,11,12,0,1,5,3,4,6,2,8,7
 NumericConstant:9
 NumericConstant:13
 NumericConstant:10
 NumericConstant:0
 NumericConstant:9
 NumericConstant:10
 NumericConstant:12
 NumericConstant:11
 NumericConstant:12
 NumericConstant:0
 NumericConstant:1
 NumericConstant:5
 NumericConstant:3
 NumericConstant:4
 NumericConstant:6
 NumericConstant:2
 NumericConstant:8
 NumericConstant:7
420 RANDOMIZE
 
430 LET F=0
 Variable:F -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
440 LET Z3=0
 Variable:Z3 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
450 LET O=0
 Variable:O -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
460 LET L=0
 Variable:L -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
470 DIM Z(5,3),P(2),D(2,5)
 NumericConstant:5
 NumericConstant:3
 Declaration:Z(,) -> _(,)
 NumericConstant:2
 Declaration:P() -> _()
 NumericConstant:2
 NumericConstant:5
 Declaration:D(,) -> _(,)
480 FOR A=0 TO 5
 control: Variable:A -> _
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:5"]
490 FOR B=0 TO 2
 control: Variable:B -> _
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:2"]
500 READ Z(A,B),D(B,A)
 Variable:A -> _
 Variable:B -> _
 Variable:Z(_,_) -> _
 Variable:B -> _
 Variable:A -> _
 Variable:D(_,_) -> _
505 LET P(B)=0
 Variable:B -> _
 Variable:P(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
510 NEXT B
 Variable:B -> _
520 READ Z(A,3)
 Variable:A -> _
 NumericConstant:3
 Variable:Z(_,_) -> _
530 NEXT A
 Variable:A -> _
540 PRINT "DO YOU WANT TO RECEIVE";
 TextConstant:"DO YOU WANT TO RECEIVE"
 CarriageControl:;
550 LET X=1
 Variable:X -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
560 GOSUB 3610
 LineNumber:3610
570 LET S=2-SGN(13-Q)
 Variable:S -> _
 NumericConstant:2
 NumericConstant:13
 Variable:Q -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionSgn:SGN(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
580 LET K=S
 WARNING: Statement before GOSUB entry point
 Variable:K -> _
 Variable:S -> _
 AssignmentOperator:= _ -> _
590 LET T1=120
 Variable:T1 -> _
 NumericConstant:120
 AssignmentOperator:= =_ -> _
600 LET U2=3
 Variable:U2 -> _
 NumericConstant:3
 AssignmentOperator:= =_ -> _
610 LET U=3
 Variable:U -> _
 NumericConstant:3
 AssignmentOperator:= =_ -> _
620 LET C=900
 Variable:C -> _
 NumericConstant:900
 AssignmentOperator:= =_ -> _
630 GOSUB 2250
 WARNING: Statement before GOSUB entry point
 LineNumber:2250
640 LET F1=50
 Variable:F1 -> _
 NumericConstant:50
 AssignmentOperator:= =_ -> _
 WARNING: Line exceeds PRETTY width limit 72
650 LET B=INT(F1+O*20*RND(0)+(1-O)*29*(2*RND(0)^7-RND(0)^(3-Z2)))
 Variable:B -> _
 Variable:F1 -> _
 Variable:O -> _
 NumericConstant:20
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:1
 Variable:O -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericConstant:29
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:2
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 NumericConstant:7
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 NumericConstant:3
 Variable:Z2 -> _
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
660 LET O=0
 Variable:O -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
670 LET Z9=8
 Variable:Z9 -> _
 NumericConstant:8
 AssignmentOperator:= =_ -> _
680 GOSUB 1490
 LineNumber:1490
690 LET L=0
 Variable:L -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
700 IF B<99 THEN 2340
 Variable:B -> _
 NumericConstant:99
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2340
710 PRINT "A TOUCHBACK"
 WARNING: Statement before GOSUB entry point
 TextConstant:"A TOUCHBACK"
 CarriageControl:NL
720 LET B=20
 Variable:B -> _
 NumericConstant:20
 AssignmentOperator:= =_ -> _
730 LET L=0
 Variable:L -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
740 IF S=2 THEN 770
 Variable:S -> _
 NumericConstant:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:770
750 PRINT "MY ";
 TextConstant:"MY "
 CarriageControl:;
760 GOTO 780
 LineNumber:780
770 PRINT "YOUR ";
 TextConstant:"YOUR "
 CarriageControl:;
780 GOSUB 3290
 LineNumber:3290
790 GOSUB 2980
 LineNumber:2980
800 LET D=1
 Variable:D -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
810 LET F2=.03
 WARNING: Statement before GOSUB entry point
 Variable:F2 -> _
 NumericConstant:.03
 AssignmentOperator:= =_ -> _
820 LET O=0
 Variable:O -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
830 IF C<=0 THEN 2770
 Variable:C -> _
 NumericConstant:0
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:2770
840 GOSUB 2530
 LineNumber:2530
850 LET Z2=1
 Variable:Z2 -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
860 LET Z3=.3
 Variable:Z3 -> _
 NumericConstant:.3
 AssignmentOperator:= =_ -> _
870 IF C<=F*T1 THEN 2920
 Variable:C -> _
 Variable:F -> _
 Variable:T1 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:2920
880 IF C<=0 THEN 2770
 WARNING: Statement before GOSUB entry point
 Variable:C -> _
 NumericConstant:0
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:2770
890 IF L=0 THEN 910
 Variable:L -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:910
900 PRINT "TIME TO GO--";
 TextConstant:"TIME TO GO--"
 CarriageControl:;
910 PRINT INT(C/60);"MIN.";C-60*INT(C/60);" SEC.  ";
 Variable:C -> _
 NumericConstant:60
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 CarriageControl:;
 TextConstant:"MIN."
 CarriageControl:;
 Variable:C -> _
 NumericConstant:60
 Variable:C -> _
 NumericConstant:60
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 CarriageControl:;
 TextConstant:" SEC.  "
 CarriageControl:;
920 PRINT "YOUR PLAY";
 TextConstant:"YOUR PLAY"
 CarriageControl:;
930 GOSUB 3610
 LineNumber:3610
940 IF S=1 THEN 980
 Variable:S -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:980
950 IF Q>8 THEN 920
 Variable:Q -> _
 NumericConstant:8
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:920
960 LET M=Q
 Variable:M -> _
 Variable:Q -> _
 AssignmentOperator:= _ -> _
970 GOTO 1000
 LineNumber:1000
980 LET Y=Q-8
 Variable:Y -> _
 Variable:Q -> _
 NumericConstant:8
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
990 IF ABS(Q-10.5)^2>3 THEN 920
 Variable:Q -> _
 NumericConstant:10.5
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 NumericConstant:2
 BinaryOperatorPower:^(_,_) -> _
 NumericConstant:3
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:920
1000 LET C=INT(C-L*(5+23*RND(X)))
 Variable:C -> _
 Variable:C -> _
 Variable:L -> _
 NumericConstant:5
 NumericConstant:23
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
1010 LET L=1
 Variable:L -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
1020 IF M=7 THEN 1760
 Variable:M -> _
 NumericConstant:7
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1760
1030 IF M=8 THEN 1920
 Variable:M -> _
 NumericConstant:8
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1920
1040 LET Y1=Y-1
 Variable:Y1 -> _
 Variable:Y -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1050 IF RND(X)>Z(M-1,Y1) THEN 1240
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 Variable:M -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:Y1 -> _
 Variable:Z(_,_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1240
1060 LET A=2
 Variable:A -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
1070 GOSUB 3020
 LineNumber:3020
1080 IF M<4 THEN 1110
 Variable:M -> _
 NumericConstant:4
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1110
1090 PRINT "PASS COMPLETE..";
 TextConstant:"PASS COMPLETE.."
 CarriageControl:;
1100 LET L=SGN(INT(4*RND(0)))
 Variable:L -> _
 NumericConstant:4
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 FunctionSgn:SGN(_) -> _
 AssignmentOperator:= _ -> _
1110 IF RND(X)<F2 THEN 2510
 WARNING: Statement before GOSUB entry point
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 Variable:F2 -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2510
1120 IF G>0 THEN 1210
 Variable:G -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1210
1130 IF G=0 THEN 1170
 Variable:G -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1170
1140 IF G+B<1 THEN 2170
 Variable:G -> _
 Variable:B -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:1
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2170
1150 PRINT "LOSS OF";-G;
 TextConstant:"LOSS OF"
 CarriageControl:;
 Variable:G -> _
 UnaryOperatorMinus:-(_) -> _
 CarriageControl:;
1160 GOTO 1610
 LineNumber:1610
1170 PRINT "NO GAIN"
 TextConstant:"NO GAIN"
 CarriageControl:NL
1180 LET Z9=2
 Variable:Z9 -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
1190 GOSUB 1490 
 LineNumber:1490
1200 GOTO 1670
 LineNumber:1670
1210 IF B+G>99 THEN 1650
 Variable:B -> _
 Variable:G -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:99
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1650
1220 PRINT "GAIN OF";G;
 TextConstant:"GAIN OF"
 CarriageControl:;
 Variable:G -> _
 CarriageControl:;
1230 GOTO 1610 
 LineNumber:1610
1240 IF M>3 THEN 1280
 Variable:M -> _
 NumericConstant:3
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1280
1250 LET A=1
 Variable:A -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
1260 GOSUB 3020
 LineNumber:3020
1270 GOTO 1120
 LineNumber:1120
1280 IF RND(X)<.06*(2-SGN(Y-3)) THEN 1360
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 NumericConstant:.06
 NumericConstant:2
 Variable:Y -> _
 NumericConstant:3
 BinaryOperatorMinus:-(_,_) -> _
 FunctionSgn:SGN(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1360
1290 IF RND(0)<.05*INT(Y/3.5)/5 THEN 1510
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 NumericConstant:.05
 Variable:Y -> _
 NumericConstant:3.5
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:5
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1510
1300 LET Z9=6
 Variable:Z9 -> _
 NumericConstant:6
 AssignmentOperator:= =_ -> _
1310 GOSUB 1490
 LineNumber:1490
1320 PRINT "PASS INCOMPLETE"
 TextConstant:"PASS INCOMPLETE"
 CarriageControl:NL
1330 LET L=0
 Variable:L -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1340 LET G=0
 Variable:G -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1350 GOTO 3120
 LineNumber:3120
1360 PRINT "PASS **INTERCEPTED**"
 TextConstant:"PASS **INTERCEPTED**"
 CarriageControl:NL
1370 LET A=1
 Variable:A -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
1380 GOSUB 3020
 LineNumber:3020
1390 IF B<40 THEN 1410
 Variable:B -> _
 NumericConstant:40
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1410
1400 LET G=20*(1+SGN(G))
 Variable:G -> _
 NumericConstant:20
 NumericConstant:1
 Variable:G -> _
 FunctionSgn:SGN(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
1410 LET B=100-B-G
 WARNING: Statement before GOSUB entry point
 Variable:B -> _
 NumericConstant:100
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:G -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1420 LET S=3-S
 Variable:S -> _
 NumericConstant:3
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1430 LET Z9=9
 Variable:Z9 -> _
 NumericConstant:9
 AssignmentOperator:= =_ -> _
1440 GOSUB 1490
 LineNumber:1490
1450 IF B<1 THEN 710
 Variable:B -> _
 NumericConstant:1
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:710
1460 IF B>99 THEN 1650
 Variable:B -> _
 NumericConstant:99
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1650
1470 PRINT "AT ";
 TextConstant:"AT "
 CarriageControl:;
1480 GOTO 2360
 LineNumber:2360
1490 LET C=C-INT(4+Z9/2*(1+RND(0)))
 Variable:C -> _
 Variable:C -> _
 NumericConstant:4
 Variable:Z9 -> _
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> _
 NumericConstant:1
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1500 RETURN
 
1510 LET G=-(5+INT(10*RND(X)))
 Variable:G -> _
 NumericConstant:5
 NumericConstant:10
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 UnaryOperatorMinus:-(_) -> _
 AssignmentOperator:= _ -> _
1520 PRINT "THE QUARTERBACK "
 TextConstant:"THE QUARTERBACK "
 CarriageControl:NL
1530 IF RND(X)>.5 THEN 1560
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 NumericConstant:.5
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1560
1540 PRINT "IS THROWN FOR A ";
 TextConstant:"IS THROWN FOR A "
 CarriageControl:;
1550 GOTO 1110
 WARNING: Statement before GOSUB entry point
 LineNumber:1110
1560 LET G=-(2*G*8)
 Variable:G -> _
 NumericConstant:2
 Variable:G -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:8
 BinaryOperatorMultiply:*(_,_) -> _
 UnaryOperatorMinus:-(_) -> _
 AssignmentOperator:= _ -> _
1570 LET M=B
 Variable:M -> _
 Variable:B -> _
 AssignmentOperator:= _ -> _
1580 LET A=1
 Variable:A -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
1590 PRINT "SCRAMBLES FOR A ";
 TextConstant:"SCRAMBLES FOR A "
 CarriageControl:;
1600 GOTO 1110
 LineNumber:1110
1610 LET B=B+G
 Variable:B -> _
 Variable:B -> _
 Variable:G -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1620 PRINT "TO ";
 TextConstant:"TO "
 CarriageControl:;
1630 GOSUB 3300
 LineNumber:3300
1640 IF B<99 THEN 1670
 Variable:B -> _
 NumericConstant:99
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1670
1650 GOSUB 1990
 LineNumber:1990
1660 GOTO 630
 LineNumber:630
1670 IF B1>B THEN 3120
 Variable:B1 -> _
 Variable:B -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:3120
1680 IF B1<B THEN 1730
 Variable:B1 -> _
 Variable:B -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1730
1690 IF RND(0)>.5 THEN 1730
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 NumericConstant:.5
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1730
1700 PRINT "**MEASUREMENT**"
 TextConstant:"**MEASUREMENT**"
 CarriageControl:NL
1710 GOSUB 3520
 LineNumber:3520
1720 IF RND(X)<.5 THEN 3120
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 NumericConstant:.5
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:3120
1730 GOSUB 2980
 LineNumber:2980
1740 LET D=0
 Variable:D -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1750 GOTO 3120
 LineNumber:3120
1760 IF RND(X)<.06 THEN 1890
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 NumericConstant:.06
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1890
1770 LET B=B+30*INT(15*(1*RND(0)^3))
 Variable:B -> _
 Variable:B -> _
 NumericConstant:30
 NumericConstant:15
 NumericConstant:1
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 NumericConstant:3
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1780 LET Z9=2
 Variable:Z9 -> _
 NumericConstant:2
 AssignmentOperator:= =_ -> _
1790 GOSUB 1490
 LineNumber:1490
1800 IF B<=99 THEN 1550
 Variable:B -> _
 NumericConstant:99
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:1550
1810 LET P1=3
 Variable:P1 -> _
 NumericConstant:3
 AssignmentOperator:= =_ -> _
1820 GOSUB 2030
 LineNumber:2030
1830 IF P1=0 THEN 710
 Variable:P1 -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:710
1840 GOTO 630
 LineNumber:630
1850 PRINT "THE KICK IS ";
 TextConstant:"THE KICK IS "
 CarriageControl:;
1860 LET Z2=0
 Variable:Z2 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1870 LET S=3-S
 Variable:S -> _
 NumericConstant:3
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1880 GOTO 2340
 LineNumber:2340
1890 PRINT "**BLOCKED** RECOVERED..";
 TextConstant:"**BLOCKED** RECOVERED.."
 CarriageControl:;
1900 LET G=INT(14*RND(X))
 Variable:G -> _
 NumericConstant:14
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
1910 GOTO 1410
 LineNumber:1410
1920 PRINT "THE PUNT IS ";
 TextConstant:"THE PUNT IS "
 CarriageControl:;
1930 IF RND(X)<.06 THEN 1890
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 NumericConstant:.06
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:1890
1940 LET F1=B
 Variable:F1 -> _
 Variable:B -> _
 AssignmentOperator:= _ -> _
1950 LET Z2=1
 Variable:Z2 -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
1960 LET S=3-S
 Variable:S -> _
 NumericConstant:3
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
1970 LET Z3=.65
 Variable:Z3 -> _
 NumericConstant:.65
 AssignmentOperator:= =_ -> _
1980 GOTO 650
 LineNumber:650
1990 PRINT "**TOUCHDOWN**"
 TextConstant:"**TOUCHDOWN**"
 CarriageControl:NL
2000 LET P1=1 
 Variable:P1 -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
2010 LET P(S)=P(S)+6
 Variable:S -> _
 Variable:P(_) -> _
 Variable:S -> _
 Variable:P(_) -> _
 NumericConstant:6
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
2020 LET B=130
 Variable:B -> _
 NumericConstant:130
 AssignmentOperator:= =_ -> _
2030 PRINT "THE KICK IS ";
 WARNING: Inconsistent GOSUB target (1990, 2030)
 TextConstant:"THE KICK IS "
 CarriageControl:;
2040 IF RND(X)<(B/132)^4 THEN 2070
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 Variable:B -> _
 NumericConstant:132
 BinaryOperatorDivide:/(_,_) -> _
 NumericConstant:4
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2070
2050 LET P1=0
 Variable:P1 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
2060 PRINT "NO ";
 TextConstant:"NO "
 CarriageControl:;
2070 PRINT "GOOD"
 TextConstant:"GOOD"
 CarriageControl:NL
2080 LET P(S)=P(S)+P1
 Variable:S -> _
 Variable:P(_) -> _
 Variable:S -> _
 Variable:P(_) -> _
 Variable:P1 -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
2090 GOSUB 2120
 LineNumber:2120
2100 LET S=3-S
 Variable:S -> _
 NumericConstant:3
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
2110 RETURN
 
2120 PRINT "SCORE! ME";P(1);" YOU";P(2)
 TextConstant:"SCORE! ME"
 CarriageControl:;
 NumericConstant:1
 Variable:P(_) -> _
 CarriageControl:;
 TextConstant:" YOU"
 CarriageControl:;
 NumericConstant:2
 Variable:P(_) -> _
 CarriageControl:NL
2130 LET L=0
 Variable:L -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
2140 IF X<5 THEN 2160
 Variable:X -> _
 NumericConstant:5
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2160
2150 IF P(1)<>P(2) THEN 2770
 NumericConstant:1
 Variable:P(_) -> _
 NumericConstant:2
 Variable:P(_) -> _
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:2770
2160 RETURN
 
2170 PRINT "**SAFETY**"
 TextConstant:"**SAFETY**"
 CarriageControl:NL
2180 LET P(3-S)=P(3-S)+2
 NumericConstant:3
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:P(_) -> _
 NumericConstant:3
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:P(_) -> _
 NumericConstant:2
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
2190 LET F1=30
 Variable:F1 -> _
 NumericConstant:30
 AssignmentOperator:= =_ -> _
2200 LET S=3-S
 Variable:S -> _
 NumericConstant:3
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
2210 GOSUB 2120
 LineNumber:2120
2220 GOSUB 3440
 LineNumber:3440
2230 PRINT "FROM THE 20"
 TextConstant:"FROM THE 20"
 CarriageControl:NL
2240 GOTO 650
 LineNumber:650
2250 GOSUB 3440
 LineNumber:3440
2260 IF S=2 THEN 2330
 Variable:S -> _
 NumericConstant:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:2330
2270 PRINT "ON-SIDE";
 TextConstant:"ON-SIDE"
 CarriageControl:;
2280 GOSUB 3610
 LineNumber:3610
2290 IF Q<>13 THEN 2330
 Variable:Q -> _
 NumericConstant:13
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:2330
2300 LET F2=.15
 Variable:F2 -> _
 NumericConstant:.15
 AssignmentOperator:= =_ -> _
2310 LET Z2=1
 Variable:Z2 -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
2320 LET O=1
 Variable:O -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
2330 RETURN
 
2340 LET B=100-B
 Variable:B -> _
 NumericConstant:100
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
2350 PRINT "RECEIVED AT ";
 TextConstant:"RECEIVED AT "
 CarriageControl:;
2360 GOSUB 3300
 LineNumber:3300
2370 IF Z2*RND(X)>Z3 THEN 2490
 Variable:Z2 -> _
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:Z3 -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:2490
2380 IF RND(X)<F2 THEN 2500
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 Variable:F2 -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2500
2390 LET G=5*INT(100*RND(0))
 Variable:G -> _
 NumericConstant:5
 NumericConstant:100
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 AssignmentOperator:= _ -> _
2400 IF RND(0)<.15 THEN 2430
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 NumericConstant:.15
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2430
2410 LET G=INT(24*(1-RND(X)^2))
 Variable:G -> _
 NumericConstant:24
 NumericConstant:1
 Variable:X -> _
 FunctionRnd:RND(_) -> _
 NumericConstant:2
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
2420 IF G=0 THEN 2490
 Variable:G -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:2490
2430 LET B=B+G
 Variable:B -> _
 Variable:B -> _
 Variable:G -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
2440 PRINT " AND RUN BACK...";
 TextConstant:" AND RUN BACK..."
 CarriageControl:;
2450 LET L=1
 Variable:L -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
2460 IF B>99 THEN 1650
 Variable:B -> _
 NumericConstant:99
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:1650
2470 PRINT " TO ";
 TextConstant:" TO "
 CarriageControl:;
2480 GOSUB 3300
 LineNumber:3300
2490 IF RND(0)>F2 THEN 3260
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 Variable:F2 -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:3260
2500 LET G=0
 Variable:G -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
2510 PRINT "**FUMBLE**";
 TextConstant:"**FUMBLE**"
 CarriageControl:;
2520 GOTO 1410
 LineNumber:1410
2530 IF S=1 THEN 2560
 Variable:S -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:2560
2540 LET Y=INT(1+3.5*RND(0))
 Variable:Y -> _
 NumericConstant:1
 NumericConstant:3.5
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
2550 RETURN
 
2560 LET M=INT(55*RND(0)/10.5)+1
 Variable:M -> _
 NumericConstant:55
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:10.5
 BinaryOperatorDivide:/(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
2570 IF (B1-B)/(5-D)<3 THEN 2590
 Variable:B1 -> _
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericConstant:5
 Variable:D -> _
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 NumericConstant:3
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2590
2580 LET M=INT(6-4*RND(0)^2)
 Variable:M -> _
 NumericConstant:6
 NumericConstant:4
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 NumericConstant:2
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
2590 IF L*F*60>=C THEN 2670
 Variable:L -> _
 Variable:F -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:60
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:C -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:2670
2600 IF D<4 THEN 2550
 Variable:D -> _
 NumericConstant:4
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2550
2610 PRINT "I'LL ";
 TextConstant:"I'LL "
 CarriageControl:;
2620 IF B55 THEN 2720
 ERROR: Too many operands
 LineNumber:2720
2630 IF 0<4*RND(0)-B1+B THEN 2750
 NumericConstant:0
 NumericConstant:4
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:B1 -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:B -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2750
2640 PRINT "TRY FOR A FIELD GOAL"
 TextConstant:"TRY FOR A FIELD GOAL"
 CarriageControl:NL
2650 LET M=7
 Variable:M -> _
 NumericConstant:7
 AssignmentOperator:= =_ -> _
2660 RETURN
 
2670 IF P(2)*U2<=P(1)*U2 THEN 2600
 NumericConstant:2
 Variable:P(_) -> _
 Variable:U2 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:1
 Variable:P(_) -> _
 Variable:U2 -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:2600
2680 PRINT "TIME OUT"
 TextConstant:"TIME OUT"
 CarriageControl:NL
2690 LET U2=U2-1
 Variable:U2 -> _
 Variable:U2 -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
2700 GOSUB 3520
 LineNumber:3520
2710 GOTO 2600
 LineNumber:2600
2720 PRINT "PUNT"
 TextConstant:"PUNT"
 CarriageControl:NL
2730 LET M=8
 Variable:M -> _
 NumericConstant:8
 AssignmentOperator:= =_ -> _
2740 RETURN
 
2750 PRINT "GO FOR IT"
 TextConstant:"GO FOR IT"
 CarriageControl:NL
2760 RETURN
 
2770 IF X<4 THEN 2830
 Variable:X -> _
 NumericConstant:4
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:2830
2780 IF P(1)=P(2) THEN 2830
 NumericConstant:1
 Variable:P(_) -> _
 NumericConstant:2
 Variable:P(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:2830
2790 PRINT "THE GAME IS OVER"
 TextConstant:"THE GAME IS OVER"
 CarriageControl:NL
2800 PRINT "FINAL ";
 TextConstant:"FINAL "
 CarriageControl:;
2810 GOSUB 2120
 LineNumber:2120
2820 STOP
 WARNING: Terminating statement in GOSUB
 
2830 PRINT "END OF PERIOD";X
 TextConstant:"END OF PERIOD"
 CarriageControl:;
 Variable:X -> _
 CarriageControl:NL
2840 GOSUB 2120
 LineNumber:2120
2850 LET F=1-F
 Variable:F -> _
 NumericConstant:1
 Variable:F -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
2860 GOSUB 3520
 LineNumber:3520
2870 LET C=900
 Variable:C -> _
 NumericConstant:900
 AssignmentOperator:= =_ -> _
2880 LET X=X+1
 Variable:X -> _
 Variable:X -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
2890 IF F<>0 THEN 810
 Variable:F -> _
 NumericConstant:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:810
2900 LET S=3-K
 Variable:S -> _
 NumericConstant:3
 Variable:K -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
2910 GOTO 580
 LineNumber:580
2920 IF T1=0 THEN 2770
 Variable:T1 -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:2770
2930 PRINT "2 MINUTE WARNING"
 TextConstant:"2 MINUTE WARNING"
 CarriageControl:NL
2940 GOSUB 3520
 LineNumber:3520
2950 LET T1=0
 Variable:T1 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
2960 LET C=120
 Variable:C -> _
 NumericConstant:120
 AssignmentOperator:= =_ -> _
2970 GOTO 880
 LineNumber:880
2980 LET B1=B+10
 Variable:B1 -> _
 Variable:B -> _
 NumericConstant:10
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
2990 IF B1<=100 THEN 3010
 Variable:B1 -> _
 NumericConstant:100
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:3010
3000 LET B1=100
 Variable:B1 -> _
 NumericConstant:100
 AssignmentOperator:= =_ -> _
3010 RETURN
 
3020 LET Q=1.3*(A*RND(0)-1)-.06
 Variable:Q -> _
 NumericConstant:1.3
 Variable:A -> _
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:.06
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
3030 LET A=1
 Variable:A -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
3040 IF Q>=0 THEN 3070
 Variable:Q -> _
 NumericConstant:0
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:3070
3050 LET A=0
 Variable:A -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
3060 LET Q=-Q
 Variable:Q -> _
 Variable:Q -> _
 UnaryOperatorMinus:-(_) -> _
 AssignmentOperator:= _ -> _
3070 LET M=M-1
 Variable:M -> _
 Variable:M -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
3080 LET G=D(A,M1)+FNT(Q)*(D(2,M)-D(A,M))/3.5
 Variable:G -> _
 Variable:A -> _
 Variable:M1 -> _
 Variable:D(_,_) -> _
 Variable:Q -> _
 UserFunction:FNT(_) -> _
 NumericConstant:2
 Variable:M -> _
 Variable:D(_,_) -> _
 Variable:A -> _
 Variable:M -> _
 Variable:D(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:3.5
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
3090 LET G=G+INT(RND(0)+.02)*A+100*RND(0)
 Variable:G -> _
 Variable:G -> _
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 NumericConstant:.02
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 Variable:A -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:100
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
3100 LET G=INT(G)
 Variable:G -> _
 Variable:G -> _
 FunctionInt:INT(_) -> _
 AssignmentOperator:= _ -> _
3110 RETURN
 
3120 LET D=D+1
 Variable:D -> _
 Variable:D -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
3130 IF D=5 THEN 3240
 Variable:D -> _
 NumericConstant:5
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:3240
3140 IF D<> 1 THEN 3160
 Variable:D -> _
 NumericConstant:1
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:3160
3150 PRINT "1ST";
 TextConstant:"1ST"
 CarriageControl:;
3160 IF D<>2 THEN 3180
 Variable:D -> _
 NumericConstant:2
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:3180
3170 PRINT "2ND";
 TextConstant:"2ND"
 CarriageControl:;
3180 IF D<>3 THEN 3200
 Variable:D -> _
 NumericConstant:3
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:3200
3190 PRINT "3RD";
 TextConstant:"3RD"
 CarriageControl:;
3200 IF D<4 THEN 3220
 Variable:D -> _
 NumericConstant:4
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:3220
3210 PRINT "4TH";
 TextConstant:"4TH"
 CarriageControl:;
3220 PRINT " AND";B1-B;"    ";
 TextConstant:" AND"
 CarriageControl:;
 Variable:B1 -> _
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 CarriageControl:;
 TextConstant:"    "
 CarriageControl:;
3230 GOTO 810
 LineNumber:810
3240 LET S=3-S
 Variable:S -> _
 NumericConstant:3
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
3250 LET B=100-B
 Variable:B -> _
 NumericConstant:100
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
3260 IF S=2 THEN 770
 Variable:S -> _
 NumericConstant:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:770
3270 PRINT "MY ";
 TextConstant:"MY "
 CarriageControl:;
3280 GOTO 780
 LineNumber:780
3290 PRINT "BALL ON ";
 TextConstant:"BALL ON "
 CarriageControl:;
3300 IF B=50 THEN 3400
 WARNING: Inconsistent GOSUB target (3290, 3300)
 WARNING: Inconsistent GOSUB target (3290, 3300)
 WARNING: Inconsistent GOSUB target (3290, 3300)
 Variable:B -> _
 NumericConstant:50
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:3400
3310 LET V=50-ABS(B-50)
 Variable:V -> _
 NumericConstant:50
 Variable:B -> _
 NumericConstant:50
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
3320 LET C=C-INT(7+3*RND(0))
 Variable:C -> _
 Variable:C -> _
 NumericConstant:7
 NumericConstant:3
 NumericConstant:0
 FunctionRnd:RND(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
3330 IF S=1 THEN 3420
 Variable:S -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:3420
3340 IF B<50 THEN 3370
 Variable:B -> _
 NumericConstant:50
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:3370
3350 PRINT "MY ";
 TextConstant:"MY "
 CarriageControl:;
3360 GOTO 3380
 LineNumber:3380
3370 PRINT "YOUR ";
 TextConstant:"YOUR "
 CarriageControl:;
3380 PRINT V
 Variable:V -> _
 CarriageControl:NL
3390 RETURN
 
3400 PRINT "THE 50"
 TextConstant:"THE 50"
 CarriageControl:NL
3410 RETURN
 
3420 IF B<50 THEN 3350
 Variable:B -> _
 NumericConstant:50
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:3350
3430 GOTO 3370
 LineNumber:3370
3440 IF S=2 THEN 3470
 Variable:S -> _
 NumericConstant:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:3470
3450 PRINT "YOU";
 TextConstant:"YOU"
 CarriageControl:;
3460 GOTO 3480
 LineNumber:3480
3470 PRINT "I";
 TextConstant:"I"
 CarriageControl:;
3480 PRINT " KICK OFF."
 TextConstant:" KICK OFF."
 CarriageControl:NL
3490 LET F2=.06
 Variable:F2 -> _
 NumericConstant:.06
 AssignmentOperator:= =_ -> _
3500 LET Z2=0
 Variable:Z2 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
3510 RETURN
 
3520 LET L=0
 Variable:L -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
3530 PRINT "TIMEOUT CALLED..."
 TextConstant:"TIMEOUT CALLED..."
 CarriageControl:NL
3540 PRINT
 CarriageControl:NL
3550 RETURN
 
3560 IF U=0 THEN 3600
 Variable:U -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:3600
3570 LET U=U+1
 Variable:U -> _
 Variable:U -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
3580 GOSUB 3520
 LineNumber:3520
3590 GOTO 3610
 LineNumber:3610
3600 PRINT "..WRONG, TRY AGAIN"
 WARNING: Statement before GOSUB entry point
 TextConstant:"..WRONG, TRY AGAIN"
 CarriageControl:NL
3610 INPUT A
 Variable:A -> _
3620 IF ABS(INT(A))>17 THEN 3600
 Variable:A -> _
 FunctionInt:INT(_) -> _
 FunctionAbs:ABS(_) -> _
 NumericConstant:17
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:3600
3630 LET Q=R(INT(ABS(A)))
 Variable:Q -> _
 Variable:A -> _
 FunctionAbs:ABS(_) -> _
 FunctionInt:INT(_) -> _
 Variable:R(_) -> _
 AssignmentOperator:= _ -> _
3640 IF Q=0 THEN 3600
 Variable:Q -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:3600
3650 IF Q=100 THEN 3600
 Variable:Q -> _
 NumericConstant:100
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:3600
3660 RETURN
 
3670 DATA .5,-2,.25,4,.5,13,.55
 NumericConstant:.5
 NumericConstant:2
 UnaryOperatorMinus:-(_) -> =_
 NumericConstant:.25
 NumericConstant:4
 NumericConstant:.5
 NumericConstant:13
 NumericConstant:.55
3680 DATA .4,-2,.3,7,.65,15,.75
 NumericConstant:.4
 NumericConstant:2
 UnaryOperatorMinus:-(_) -> =_
 NumericConstant:.3
 NumericConstant:7
 NumericConstant:.65
 NumericConstant:15
 NumericConstant:.75
3690 DATA .4,-2,.3,6,.6,15,.35
 NumericConstant:.4
 NumericConstant:2
 UnaryOperatorMinus:-(_) -> =_
 NumericConstant:.3
 NumericConstant:6
 NumericConstant:.6
 NumericConstant:15
 NumericConstant:.35
3700 DATA .65,-2,.65,6,.6,17,.9
 NumericConstant:.65
 NumericConstant:2
 UnaryOperatorMinus:-(_) -> =_
 NumericConstant:.65
 NumericConstant:6
 NumericConstant:.6
 NumericConstant:17
 NumericConstant:.9
3710 DATA .4,2,.7,10,.4,27,.2
 NumericConstant:.4
 NumericConstant:2
 NumericConstant:.7
 NumericConstant:10
 NumericConstant:.4
 NumericConstant:27
 NumericConstant:.2
3720 DATA .1,19,.4,35,.2,100,.1
 NumericConstant:.1
 NumericConstant:19
 NumericConstant:.4
 NumericConstant:35
 NumericConstant:.2
 NumericConstant:100
 NumericConstant:.1
3730 END
 

