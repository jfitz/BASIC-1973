Statistics:

Number of lines: 374
Number of valid statements: 374
Number of comments: 0
Number of executable statements: 366

Complexity:

Comment density: 0.000
Comprehension effort: 1203
McCabe complexity: 84
Halstead complexity:
 length: 1638
 volume: 9513.737
 difficulty: 42.624
 effort: 405511.282
 language: 5.237
 intelligence: 223.203
 time: 375.473

10 (0 2) PRINT "THIS IS A DEMONSTRATION OF PDP-11 BASIC"
  Origs: :start
  Dests: 20:auto
20 (0 2) PRINT "IF YOU NEED INSTRUCTIONS FOR PLAYING FOOTBALL, TYPE A 1"
  Origs: 10:auto
  Dests: 30:auto
30 (1 2) INPUT I
  Origs: 20:auto
  Dests: 40:auto
40 (1 4) IF I <> 1 THEN 340
  Origs: 30:auto
  Dests: 50:auto, 340:ifthen
50 (0 2) PRINT
  Origs: 40:auto
  Dests: 60:auto
60 (0 2) PRINT
  Origs: 50:auto
  Dests: 70:auto
70 (0 2) PRINT "WHEN IT ASKS YOU A QUESTION TO BE ANSWERED YES OR"
  Origs: 60:auto
  Dests: 80:auto
80 (0 2) PRINT "NO, TYPE IN FOR NO OR 1 FOR YES,"
  Origs: 70:auto
  Dests: 90:auto
90 (0 2) PRINT
  Origs: 80:auto
  Dests: 100:auto
100 (0 2) PRINT "ON OFFENSE YOU HAVE THE FOLLOWING PERMITTED PLAYS"
  Origs: 90:auto
  Dests: 110:auto
110 (0 3) PRINT "PLAY", "CODE"
  Origs: 100:auto
  Dests: 120:auto
120 (0 3) PRINT "RUN", "10"
  Origs: 110:auto
  Dests: 130:auto
130 (0 3) PRINT "PASS", "11"
  Origs: 120:auto
  Dests: 140:auto
140 (0 3) PRINT "SWEEP", "12"
  Origs: 130:auto
  Dests: 150:auto
150 (0 3) PRINT "SCREEN PASS", "13"
  Origs: 140:auto
  Dests: 160:auto
160 (0 3) PRINT "LONG PASS", "14"
  Origs: 150:auto
  Dests: 170:auto
170 (0 3) PRINT "DRAW PLAY", "15"
  Origs: 160:auto
  Dests: 180:auto
180 (0 3) PRINT "PUNT", "16"
  Origs: 170:auto
  Dests: 190:auto
190 (0 3) PRINT "FIELDGOAL", "l7"
  Origs: 180:auto
  Dests: 200:auto
200 (0 2) PRINT
  Origs: 190:auto
  Dests: 210:auto
210 (0 2) PRINT "ON DEFENSE, YOU MAY TRY ONE OF THE FOLLOWING:"
  Origs: 200:auto
  Dests: 220:auto
220 (0 3) PRINT "DEFENSE", "CODE"
  Origs: 210:auto
  Dests: 230:auto
230 (0 4) PRINT "NORMAL", "4", "GOOD AGAINST SWEEP AND SCREEN"
  Origs: 220:auto
  Dests: 240:auto
240 (0 4) PRINT "HOLD", "5", "GOOD AGAINST RUN, PASS AND DRAW"
  Origs: 230:auto
  Dests: 250:auto
250 (0 4) PRINT "BlITZ", "6", "GOOD AGAINST PASS OR LONG PASS"
  Origs: 240:auto
  Dests: 260:auto
260 (0 4) PRINT "INTERCEPT", "7", "INCREASES THE ODDS FOR AN INTERCEPTION"
  Origs: 250:auto
  Dests: 270:auto
270 (0 4) PRINT "BLOCK", "8", "GIVES YOU A CHANCE TO BLOCK A KICK,"
  Origs: 260:auto
  Dests: 280:auto
280 (0 4) PRINT " ", " ", "BUT DECREASES THE DISTANCE RUNBACK"
  Origs: 270:auto
  Dests: 290:auto
290 (0 2) PRINT
  Origs: 280:auto
  Dests: 300:auto
300 (0 2) PRINT "TO CALL A PARTICULR PLAY JUST TYPE ITS CODE NUMBER"
  Origs: 290:auto
  Dests: 310:auto
310 (0 2) PRINT "ALSO, AT ANY TIME DURING PLAY YOU MAY CALL TIME OUT"
  Origs: 300:auto
  Dests: 320:auto
320 (0 2) PRINT "BY TYPING A 12', HOWEVER YOU ARE PERMITTED ONLY THREE"
  Origs: 310:auto
  Dests: 330:auto
330 (0 2) PRINT "TIMEOUTS PER HALF,"
  Origs: 320:auto
  Dests: 340:auto
340 (0 2) PRINT
  Origs: 40:ifthen, 330:auto
  Dests: 350:auto
350 (0 2) PRINT
  Origs: 340:auto
  Dests: 370:auto
360 FNT(.) (0 5) DEF FNT(X) = SIN(X) / COS(X)
  Origs: 3080:function
  Dests: 
370 (0 2) DIM R(17)
  Origs: 350:auto
  Dests: 380:auto
380 F(I:380) (1 3) FOR I = 0 TO 17
  Origs: 370:auto
  Dests: 390:fornext, 400:fornext
390 F(I:380) (1 2) READ R(I)
  Origs: 380:fornext
  Dests: 400:auto
400 F(I:380) (0 1) NEXT I
  Origs: 380:fornext, 390:auto
  Dests: 420:auto
410 (0 2) DATA 9, 13, 10, 0, 9, 10, 12, 11, 12, 0, 1, 5, 3, 4, 6, 2, 8, 7
  Origs: 
  Dests: 
420 (0 1) RANDOMIZE
  Origs: 400:auto
  Dests: 430:auto
430 (0 3) LET F = 0
  Origs: 420:auto
  Dests: 440:auto
440 (0 3) LET Z3 = 0
  Origs: 430:auto
  Dests: 450:auto
450 (0 3) LET O = 0
  Origs: 440:auto
  Dests: 460:auto
460 (0 3) LET L = 0
  Origs: 450:auto
  Dests: 470:auto
470 (0 4) DIM Z(5, 3), P(2), D(2, 5)
  Origs: 460:auto
  Dests: 480:auto
480 F(A:480) (1 3) FOR A = 0 TO 5
  Origs: 470:auto
  Dests: 490:fornext, 530:fornext
490 F(A:480,B:490) (1 3) FOR B = 0 TO 2
  Origs: 480:fornext
  Dests: 500:fornext, 510:fornext
500 F(A:480,B:490) (2 3) READ Z(A, B), D(B, A)
  Origs: 490:fornext
  Dests: 505:auto
505 F(A:480,B:490) (0 3) LET P(B) = 0
  Origs: 500:auto
  Dests: 510:auto
510 F(A:480,B:490) (0 1) NEXT B
  Origs: 490:fornext, 505:auto
  Dests: 520:auto
520 F(A:480) (1 2) READ Z(A, 3)
  Origs: 510:auto
  Dests: 530:auto
530 F(A:480) (0 1) NEXT A
  Origs: 480:fornext, 520:auto
  Dests: 540:auto
540 (0 2) PRINT "DO YOU WANT TO RECEIVE";
  Origs: 530:auto
  Dests: 550:auto
550 (0 3) LET X = 1
  Origs: 540:auto
  Dests: 560:auto
560 (0 2) GOSUB 3610
  Origs: 550:auto
  Dests: 570:auto, 3610:gosub
570 (0 5) LET S = 2 - SGN(13 - Q)
  Origs: 560:auto
  Dests: 580:auto
580 G(2120) (0 3) LET K = S
  Origs: 570:auto, 2910:goto
  Dests: 590:auto
590 G(2120) (0 3) LET T1 = 120
  Origs: 580:auto
  Dests: 600:auto
600 G(2120) (0 3) LET U2 = 3
  Origs: 590:auto
  Dests: 610:auto
610 G(2120) (0 3) LET U = 3
  Origs: 600:auto
  Dests: 620:auto
620 G(2120) (0 3) LET C = 900
  Origs: 610:auto
  Dests: 630:auto
630 G(2120) (0 2) GOSUB 2250
  Origs: 620:auto, 1660:goto, 1840:goto
  Dests: 640:auto, 2250:gosub
640 G(2120) (0 3) LET F1 = 50
  Origs: 630:auto
  Dests: 650:auto
650 G(2120) (0 4) LET B = INT(F1 + O * 20 * RND(0) + (1 - O) * 29 * (2 * RND(0) ^ 7 - RND(0) ^ (3 - Z2)))
  Origs: 640:auto, 1980:goto, 2240:goto
  Dests: 660:auto
660 G(2120) (0 3) LET O = 0
  Origs: 650:auto
  Dests: 670:auto
670 G(2120) (0 3) LET Z9 = 8
  Origs: 660:auto
  Dests: 680:auto
680 G(2120) (0 2) GOSUB 1490
  Origs: 670:auto
  Dests: 690:auto, 1490:gosub
690 G(2120) (0 3) LET L = 0
  Origs: 680:auto
  Dests: 700:auto
700 G(2120) (1 4) IF B < 99 THEN 2340
  Origs: 690:auto
  Dests: 710:auto, 2340:ifthen
710 G(2120) (0 2) PRINT "A TOUCHBACK"
  Origs: 700:auto, 1450:ifthen, 1830:ifthen
  Dests: 720:auto
720 G(2120) (0 3) LET B = 20
  Origs: 710:auto
  Dests: 730:auto
730 G(2120) (0 3) LET L = 0
  Origs: 720:auto
  Dests: 740:auto
740 G(2120) (1 4) IF S = 2 THEN 770
  Origs: 730:auto
  Dests: 750:auto, 770:ifthen
750 G(2120) (0 2) PRINT "MY ";
  Origs: 740:auto
  Dests: 760:auto
760 G(2120) (0 2) GOTO 780
  Origs: 750:auto
  Dests: 780:goto
770 G(2120) (0 2) PRINT "YOUR ";
  Origs: 740:ifthen, 3260:ifthen
  Dests: 780:auto
780 G(2120) (0 2) GOSUB 3290
  Origs: 760:goto, 770:auto, 3280:goto
  Dests: 790:auto, 3290:gosub
790 G(2120) (0 2) GOSUB 2980
  Origs: 780:auto
  Dests: 800:auto, 2980:gosub
800 G(2120) (0 3) LET D = 1
  Origs: 790:auto
  Dests: 810:auto
810 G(2120) (0 3) LET F2 = 0.03
  Origs: 800:auto, 2890:ifthen, 3230:goto
  Dests: 820:auto
820 G(2120) (0 3) LET O = 0
  Origs: 810:auto
  Dests: 830:auto
830 G(2120) (1 4) IF C <= 0 THEN 2770
  Origs: 820:auto
  Dests: 840:auto, 2770:ifthen
840 G(2120) (0 2) GOSUB 2530
  Origs: 830:auto
  Dests: 850:auto, 2530:gosub
850 G(2120) (0 3) LET Z2 = 1
  Origs: 840:auto
  Dests: 860:auto
860 G(2120) (0 3) LET Z3 = 0.3
  Origs: 850:auto
  Dests: 870:auto
870 G(2120) (1 6) IF C <= F * T1 THEN 2920
  Origs: 860:auto
  Dests: 880:auto, 2920:ifthen
880 G(2120) (1 4) IF C <= 0 THEN 2770
  Origs: 870:auto, 2970:goto
  Dests: 890:auto, 2770:ifthen
890 G(2120) (1 4) IF L = 0 THEN 910
  Origs: 880:auto
  Dests: 900:auto, 910:ifthen
900 G(2120) (0 2) PRINT "TIME TO GO--";
  Origs: 890:auto
  Dests: 910:auto
910 G(2120) (0 10) PRINT INT(C / 60); "MIN."; C - 60 * INT(C / 60); " SEC.  ";
  Origs: 890:ifthen, 900:auto
  Dests: 920:auto
920 G(2120) (0 2) PRINT "YOUR PLAY";
  Origs: 910:auto, 950:ifthen, 990:ifthen
  Dests: 930:auto
930 G(2120) (0 2) GOSUB 3610
  Origs: 920:auto
  Dests: 940:auto, 3610:gosub
940 G(2120) (1 4) IF S = 1 THEN 980
  Origs: 930:auto
  Dests: 950:auto, 980:ifthen
950 G(2120) (1 5) IF Q > 8 THEN 920
    WARNING: Branch to line before GOSUB start
  Origs: 940:auto
  Dests: 920:ifthen, 960:auto
960 G(2120) (0 3) LET M = Q
  Origs: 950:auto
  Dests: 970:auto
970 G(2120) (0 2) GOTO 1000
  Origs: 960:auto
  Dests: 1000:goto
980 G(2120) (0 4) LET Y = Q - 8
  Origs: 940:ifthen
  Dests: 990:auto
990 G(2120) (1 7) IF ABS(Q - 10.5) ^ 2 > 3 THEN 920
    WARNING: Branch to line before GOSUB start
  Origs: 980:auto
  Dests: 920:ifthen, 1000:auto
1000 G(2120) (0 4) LET C = INT(C - L * (5 + 23 * RND(X)))
  Origs: 970:goto, 990:auto
  Dests: 1010:auto
1010 G(2120) (0 3) LET L = 1
  Origs: 1000:auto
  Dests: 1020:auto
1020 G(2120) (1 4) IF M = 7 THEN 1760
  Origs: 1010:auto
  Dests: 1030:auto, 1760:ifthen
1030 G(2120) (1 4) IF M = 8 THEN 1920
  Origs: 1020:auto
  Dests: 1040:auto, 1920:ifthen
1040 G(2120) (0 4) LET Y1 = Y - 1
  Origs: 1030:auto
  Dests: 1050:auto
1050 G(2120) (1 5) IF RND(X) > Z(M - 1, Y1) THEN 1240
  Origs: 1040:auto
  Dests: 1060:auto, 1240:ifthen
1060 G(2120) (0 3) LET A = 2
  Origs: 1050:auto
  Dests: 1070:auto
1070 G(2120) (0 2) GOSUB 3020
  Origs: 1060:auto
  Dests: 1080:auto, 3020:gosub
1080 G(2120) (1 4) IF M < 4 THEN 1110
  Origs: 1070:auto
  Dests: 1090:auto, 1110:ifthen
1090 G(2120) (0 2) PRINT "PASS COMPLETE..";
  Origs: 1080:auto
  Dests: 1100:auto
1100 G(2120) (0 4) LET L = SGN(INT(4 * RND(0)))
  Origs: 1090:auto
  Dests: 1110:auto
1110 G(2120) (1 5) IF RND(X) < F2 THEN 2510
  Origs: 1080:ifthen, 1100:auto, 1550:goto, 1600:goto
  Dests: 1120:auto, 2510:ifthen
1120 G(2120) (1 4) IF G > 0 THEN 1210
  Origs: 1110:auto, 1270:goto
  Dests: 1130:auto, 1210:ifthen
1130 G(2120) (1 4) IF G = 0 THEN 1170
  Origs: 1120:auto
  Dests: 1140:auto, 1170:ifthen
1140 G(2120) (1 5) IF G + B < 1 THEN 2170
  Origs: 1130:auto
  Dests: 1150:auto, 2170:ifthen
1150 G(2120) (0 4) PRINT "LOSS OF"; -G;
  Origs: 1140:auto
  Dests: 1160:auto
1160 G(2120) (0 2) GOTO 1610
  Origs: 1150:auto
  Dests: 1610:goto
1170 G(2120) (0 2) PRINT "NO GAIN"
  Origs: 1130:ifthen
  Dests: 1180:auto
1180 G(2120) (0 3) LET Z9 = 2
  Origs: 1170:auto
  Dests: 1190:auto
1190 G(2120) (0 2) GOSUB 1490
  Origs: 1180:auto
  Dests: 1200:auto, 1490:gosub
1200 G(2120) (0 2) GOTO 1670
  Origs: 1190:auto
  Dests: 1670:goto
1210 G(2120) (1 5) IF B + G > 99 THEN 1650
  Origs: 1120:ifthen
  Dests: 1220:auto, 1650:ifthen
1220 G(2120) (0 3) PRINT "GAIN OF"; G;
  Origs: 1210:auto
  Dests: 1230:auto
1230 G(2120) (0 2) GOTO 1610
  Origs: 1220:auto
  Dests: 1610:goto
1240 G(2120) (1 4) IF M > 3 THEN 1280
  Origs: 1050:ifthen
  Dests: 1250:auto, 1280:ifthen
1250 G(2120) (0 3) LET A = 1
  Origs: 1240:auto
  Dests: 1260:auto
1260 G(2120) (0 2) GOSUB 3020
  Origs: 1250:auto
  Dests: 1270:auto, 3020:gosub
1270 G(2120) (0 3) GOTO 1120
     WARNING: Branch to line before GOSUB start
  Origs: 1260:auto
  Dests: 1120:goto
1280 G(2120) (1 10) IF RND(X) < 0.06 * (2 - SGN(Y - 3)) THEN 1360
  Origs: 1240:ifthen
  Dests: 1290:auto, 1360:ifthen
1290 G(2120) (1 9) IF RND(0) < 0.05 * INT(Y / 3.5) / 5 THEN 1510
  Origs: 1280:auto
  Dests: 1300:auto, 1510:ifthen
1300 G(2120) (0 3) LET Z9 = 6
  Origs: 1290:auto
  Dests: 1310:auto
1310 G(2120) (0 2) GOSUB 1490
  Origs: 1300:auto
  Dests: 1320:auto, 1490:gosub
1320 G(2120) (0 2) PRINT "PASS INCOMPLETE"
  Origs: 1310:auto
  Dests: 1330:auto
1330 G(2120) (0 3) LET L = 0
  Origs: 1320:auto
  Dests: 1340:auto
1340 G(2120) (0 3) LET G = 0
  Origs: 1330:auto
  Dests: 1350:auto
1350 G(2120) (0 2) GOTO 3120
  Origs: 1340:auto
  Dests: 3120:goto
1360 G(2120) (0 2) PRINT "PASS **INTERCEPTED**"
  Origs: 1280:ifthen
  Dests: 1370:auto
1370 G(2120) (0 3) LET A = 1
  Origs: 1360:auto
  Dests: 1380:auto
1380 G(2120) (0 2) GOSUB 3020
  Origs: 1370:auto
  Dests: 1390:auto, 3020:gosub
1390 G(2120) (1 4) IF B < 40 THEN 1410
  Origs: 1380:auto
  Dests: 1400:auto, 1410:ifthen
1400 G(2120) (0 7) LET G = 20 * (1 + SGN(G))
  Origs: 1390:auto
  Dests: 1410:auto
1410 G(2120) (0 5) LET B = 100 - B - G
  Origs: 1390:ifthen, 1400:auto, 1910:goto, 2520:goto
  Dests: 1420:auto
1420 G(2120) (0 4) LET S = 3 - S
  Origs: 1410:auto
  Dests: 1430:auto
1430 G(2120) (0 3) LET Z9 = 9
  Origs: 1420:auto
  Dests: 1440:auto
1440 G(2120) (0 2) GOSUB 1490
  Origs: 1430:auto
  Dests: 1450:auto, 1490:gosub
1450 G(2120) (1 5) IF B < 1 THEN 710
     WARNING: Branch to line before GOSUB start
  Origs: 1440:auto
  Dests: 710:ifthen, 1460:auto
1460 G(2120) (1 4) IF B > 99 THEN 1650
  Origs: 1450:auto
  Dests: 1470:auto, 1650:ifthen
1470 G(2120) (0 2) PRINT "AT ";
  Origs: 1460:auto
  Dests: 1480:auto
1480 G(2120) (0 2) GOTO 2360
  Origs: 1470:auto
  Dests: 2360:goto
1490 G(1490) (0 5) LET C = C - INT(4 + Z9 / 2 * (1 + RND(0)))
  Origs: 680:gosub, 1190:gosub, 1310:gosub, 1440:gosub, 1790:gosub
  Dests: 1500:auto
1500 G(1490) (0 1) RETURN
  Origs: 1490:auto
  Dests: 
1510 G(2120) (0 7) LET G = -(5 + INT(10 * RND(X)))
  Origs: 1290:ifthen
  Dests: 1520:auto
1520 G(2120) (0 2) PRINT "THE QUARTERBACK "
  Origs: 1510:auto
  Dests: 1530:auto
1530 G(2120) (1 5) IF RND(X) > 0.5 THEN 1560
  Origs: 1520:auto
  Dests: 1540:auto, 1560:ifthen
1540 G(2120) (0 2) PRINT "IS THROWN FOR A ";
  Origs: 1530:auto
  Dests: 1550:auto
1550 G(2120) (0 3) GOTO 1110
     WARNING: Branch to line before GOSUB start
  Origs: 1540:auto, 1800:ifthen
  Dests: 1110:goto
1560 G(2120) (0 7) LET G = -(2 * G * 8)
  Origs: 1530:ifthen
  Dests: 1570:auto
1570 G(2120) (0 3) LET M = B
  Origs: 1560:auto
  Dests: 1580:auto
1580 G(2120) (0 3) LET A = 1
  Origs: 1570:auto
  Dests: 1590:auto
1590 G(2120) (0 2) PRINT "SCRAMBLES FOR A ";
  Origs: 1580:auto
  Dests: 1600:auto
1600 G(2120) (0 3) GOTO 1110
     WARNING: Branch to line before GOSUB start
  Origs: 1590:auto
  Dests: 1110:goto
1610 G(2120) (0 4) LET B = B + G
  Origs: 1160:goto, 1230:goto
  Dests: 1620:auto
1620 G(2120) (0 2) PRINT "TO ";
  Origs: 1610:auto
  Dests: 1630:auto
1630 G(2120) (0 2) GOSUB 3300
  Origs: 1620:auto
  Dests: 1640:auto, 3300:gosub
1640 G(2120) (1 4) IF B < 99 THEN 1670
  Origs: 1630:auto
  Dests: 1650:auto, 1670:ifthen
1650 G(2120) (0 2) GOSUB 1990
  Origs: 1210:ifthen, 1460:ifthen, 1640:auto, 2460:ifthen
  Dests: 1660:auto, 1990:gosub
1660 G(2120) (0 3) GOTO 630
     WARNING: Branch to line before GOSUB start
  Origs: 1650:auto
  Dests: 630:goto
1670 G(2120) (1 4) IF B1 > B THEN 3120
  Origs: 1200:goto, 1640:ifthen
  Dests: 1680:auto, 3120:ifthen
1680 G(2120) (1 4) IF B1 < B THEN 1730
  Origs: 1670:auto
  Dests: 1690:auto, 1730:ifthen
1690 G(2120) (1 5) IF RND(0) > 0.5 THEN 1730
  Origs: 1680:auto
  Dests: 1700:auto, 1730:ifthen
1700 G(2120) (0 2) PRINT "**MEASUREMENT**"
  Origs: 1690:auto
  Dests: 1710:auto
1710 G(2120) (0 2) GOSUB 3520
  Origs: 1700:auto
  Dests: 1720:auto, 3520:gosub
1720 G(2120) (1 5) IF RND(X) < 0.5 THEN 3120
  Origs: 1710:auto
  Dests: 1730:auto, 3120:ifthen
1730 G(2120) (0 2) GOSUB 2980
  Origs: 1680:ifthen, 1690:ifthen, 1720:auto
  Dests: 1740:auto, 2980:gosub
1740 G(2120) (0 3) LET D = 0
  Origs: 1730:auto
  Dests: 1750:auto
1750 G(2120) (0 2) GOTO 3120
  Origs: 1740:auto
  Dests: 3120:goto
1760 G(2120) (1 5) IF RND(X) < 0.06 THEN 1890
  Origs: 1020:ifthen
  Dests: 1770:auto, 1890:ifthen
1770 G(2120) (0 7) LET B = B + 30 * INT(15 * (1 * RND(0) ^ 3))
  Origs: 1760:auto
  Dests: 1780:auto
1780 G(2120) (0 3) LET Z9 = 2
  Origs: 1770:auto
  Dests: 1790:auto
1790 G(2120) (0 3) GOSUB 1490
  Origs: 1780:auto
  Dests: 1490:gosub, 1800:auto
1800 G(2120) (1 5) IF B <= 99 THEN 1550
     WARNING: Branch to line before GOSUB start
  Origs: 1790:auto
  Dests: 1550:ifthen, 1810:auto
1810 G(2120) (0 3) LET P1 = 3
  Origs: 1800:auto
  Dests: 1820:auto
1820 G(2120) (0 2) GOSUB 2030
  Origs: 1810:auto
  Dests: 1830:auto, 2030:gosub
1830 G(2120) (1 5) IF P1 = 0 THEN 710
     WARNING: Branch to line before GOSUB start
  Origs: 1820:auto
  Dests: 710:ifthen, 1840:auto
1840 G(2120) (0 3) GOTO 630
     WARNING: Branch to line before GOSUB start
  Origs: 1830:auto
  Dests: 630:goto
1850 (0 2) PRINT "THE KICK IS ";
  Origs: 
  Dests: 1860:auto
1860 (0 3) LET Z2 = 0
  Origs: 1850:auto
  Dests: 1870:auto
1870 (0 4) LET S = 3 - S
  Origs: 1860:auto
  Dests: 1880:auto
1880 (0 2) GOTO 2340
  Origs: 1870:auto
  Dests: 2340:goto
1890 G(2120) (0 2) PRINT "**BLOCKED** RECOVERED..";
  Origs: 1760:ifthen, 1930:ifthen
  Dests: 1900:auto
1900 G(2120) (0 4) LET G = INT(14 * RND(X))
  Origs: 1890:auto
  Dests: 1910:auto
1910 G(2120) (0 3) GOTO 1410
     WARNING: Branch to line before GOSUB start
  Origs: 1900:auto
  Dests: 1410:goto
1920 G(2120) (0 2) PRINT "THE PUNT IS ";
  Origs: 1030:ifthen
  Dests: 1930:auto
1930 G(2120) (1 6) IF RND(X) < 0.06 THEN 1890
     WARNING: Branch to line before GOSUB start
  Origs: 1920:auto
  Dests: 1890:ifthen, 1940:auto
1940 G(2120) (0 3) LET F1 = B
  Origs: 1930:auto
  Dests: 1950:auto
1950 G(2120) (0 3) LET Z2 = 1
  Origs: 1940:auto
  Dests: 1960:auto
1960 G(2120) (0 4) LET S = 3 - S
  Origs: 1950:auto
  Dests: 1970:auto
1970 G(2120) (0 3) LET Z3 = 0.65
  Origs: 1960:auto
  Dests: 1980:auto
1980 G(2120) (0 3) GOTO 650
     WARNING: Branch to line before GOSUB start
  Origs: 1970:auto
  Dests: 650:goto
1990 G(1990) (0 2) PRINT "**TOUCHDOWN**"
  Origs: 1650:gosub
  Dests: 2000:auto
2000 G(1990) (0 3) LET P1 = 1
  Origs: 1990:auto
  Dests: 2010:auto
2010 G(1990) (0 4) LET P(S) = P(S) + 6
  Origs: 2000:auto
  Dests: 2020:auto
2020 G(1990) (0 3) LET B = 130
  Origs: 2010:auto
  Dests: 2030:auto
2030 G(1990,2030) (0 2) PRINT "THE KICK IS ";
     WARNING: Inconsistent GOSUB origins
     WARNING: Multiple GOSUB entry points
  Origs: 1820:gosub, 2020:auto
  Dests: 2040:auto
2040 G(1990,2030) (1 8) IF RND(X) < (B / 132) ^ 4 THEN 2070
     WARNING: Multiple GOSUB entry points
  Origs: 2030:auto
  Dests: 2050:auto, 2070:ifthen
2050 G(1990,2030) (0 3) LET P1 = 0
     WARNING: Multiple GOSUB entry points
  Origs: 2040:auto
  Dests: 2060:auto
2060 G(1990,2030) (0 2) PRINT "NO ";
     WARNING: Multiple GOSUB entry points
  Origs: 2050:auto
  Dests: 2070:auto
2070 G(1990,2030) (0 2) PRINT "GOOD"
     WARNING: Multiple GOSUB entry points
  Origs: 2040:ifthen, 2060:auto
  Dests: 2080:auto
2080 G(1990,2030) (0 4) LET P(S) = P(S) + P1
     WARNING: Multiple GOSUB entry points
  Origs: 2070:auto
  Dests: 2090:auto
2090 G(1990,2030) (0 2) GOSUB 2120
     WARNING: Multiple GOSUB entry points
  Origs: 2080:auto
  Dests: 2100:auto, 2120:gosub
2100 G(1990,2030) (0 4) LET S = 3 - S
     WARNING: Multiple GOSUB entry points
  Origs: 2090:auto
  Dests: 2110:auto
2110 G(1990,2030) (0 1) RETURN
     WARNING: Multiple GOSUB entry points
  Origs: 2100:auto
  Dests: 
2120 G(2120) (0 5) PRINT "SCORE! ME"; P(1); " YOU"; P(2)
     WARNING: GOSUB length exceeds limit 40
  Origs: 2090:gosub, 2210:gosub, 2810:gosub, 2840:gosub
  Dests: 2130:auto
2130 G(2120) (0 3) LET L = 0
  Origs: 2120:auto
  Dests: 2140:auto
2140 G(2120) (1 4) IF X < 5 THEN 2160
  Origs: 2130:auto
  Dests: 2150:auto, 2160:ifthen
2150 G(2120) (1 4) IF P(1) <> P(2) THEN 2770
  Origs: 2140:auto
  Dests: 2160:auto, 2770:ifthen
2160 G(2120) (0 1) RETURN
  Origs: 2140:ifthen, 2150:auto
  Dests: 
2170 G(2120) (0 2) PRINT "**SAFETY**"
  Origs: 1140:ifthen
  Dests: 2180:auto
2180 G(2120) (0 4) LET P(3 - S) = P(3 - S) + 2
  Origs: 2170:auto
  Dests: 2190:auto
2190 G(2120) (0 3) LET F1 = 30
  Origs: 2180:auto
  Dests: 2200:auto
2200 G(2120) (0 4) LET S = 3 - S
  Origs: 2190:auto
  Dests: 2210:auto
2210 G(2120) (0 3) GOSUB 2120
  Origs: 2200:auto
  Dests: 2120:gosub, 2220:auto
2220 G(2120) (0 2) GOSUB 3440
  Origs: 2210:auto
  Dests: 2230:auto, 3440:gosub
2230 G(2120) (0 2) PRINT "FROM THE 20"
  Origs: 2220:auto
  Dests: 2240:auto
2240 G(2120) (0 3) GOTO 650
     WARNING: Branch to line before GOSUB start
  Origs: 2230:auto
  Dests: 650:goto
2250 G(2250) (0 2) GOSUB 3440
  Origs: 630:gosub
  Dests: 2260:auto, 3440:gosub
2260 G(2250) (1 4) IF S = 2 THEN 2330
  Origs: 2250:auto
  Dests: 2270:auto, 2330:ifthen
2270 G(2250) (0 2) PRINT "ON-SIDE";
  Origs: 2260:auto
  Dests: 2280:auto
2280 G(2250) (0 2) GOSUB 3610
  Origs: 2270:auto
  Dests: 2290:auto, 3610:gosub
2290 G(2250) (1 4) IF Q <> 13 THEN 2330
  Origs: 2280:auto
  Dests: 2300:auto, 2330:ifthen
2300 G(2250) (0 3) LET F2 = 0.15
  Origs: 2290:auto
  Dests: 2310:auto
2310 G(2250) (0 3) LET Z2 = 1
  Origs: 2300:auto
  Dests: 2320:auto
2320 G(2250) (0 3) LET O = 1
  Origs: 2310:auto
  Dests: 2330:auto
2330 G(2250) (0 1) RETURN
  Origs: 2260:ifthen, 2290:ifthen, 2320:auto
  Dests: 
2340 G(2120) (0 4) LET B = 100 - B
  Origs: 700:ifthen, 1880:goto
  Dests: 2350:auto
2350 G(2120) (0 2) PRINT "RECEIVED AT ";
  Origs: 2340:auto
  Dests: 2360:auto
2360 G(2120) (0 2) GOSUB 3300
  Origs: 1480:goto, 2350:auto
  Dests: 2370:auto, 3300:gosub
2370 G(2120) (1 6) IF Z2 * RND(X) > Z3 THEN 2490
  Origs: 2360:auto
  Dests: 2380:auto, 2490:ifthen
2380 G(2120) (1 5) IF RND(X) < F2 THEN 2500
  Origs: 2370:auto
  Dests: 2390:auto, 2500:ifthen
2390 G(2120) (0 5) LET G = 5 * INT(100 * RND(0))
  Origs: 2380:auto
  Dests: 2400:auto
2400 G(2120) (1 5) IF RND(0) < 0.15 THEN 2430
  Origs: 2390:auto
  Dests: 2410:auto, 2430:ifthen
2410 G(2120) (0 4) LET G = INT(24 * (1 - RND(X) ^ 2))
  Origs: 2400:auto
  Dests: 2420:auto
2420 G(2120) (1 4) IF G = 0 THEN 2490
  Origs: 2410:auto
  Dests: 2430:auto, 2490:ifthen
2430 G(2120) (0 4) LET B = B + G
  Origs: 2400:ifthen, 2420:auto
  Dests: 2440:auto
2440 G(2120) (0 2) PRINT " AND RUN BACK...";
  Origs: 2430:auto
  Dests: 2450:auto
2450 G(2120) (0 3) LET L = 1
  Origs: 2440:auto
  Dests: 2460:auto
2460 G(2120) (1 5) IF B > 99 THEN 1650
     WARNING: Branch to line before GOSUB start
  Origs: 2450:auto
  Dests: 1650:ifthen, 2470:auto
2470 G(2120) (0 2) PRINT " TO ";
  Origs: 2460:auto
  Dests: 2480:auto
2480 G(2120) (0 2) GOSUB 3300
  Origs: 2470:auto
  Dests: 2490:auto, 3300:gosub
2490 G(2120) (1 5) IF RND(0) > F2 THEN 3260
  Origs: 2370:ifthen, 2420:ifthen, 2480:auto
  Dests: 2500:auto, 3260:ifthen
2500 G(2120) (0 3) LET G = 0
  Origs: 2380:ifthen, 2490:auto
  Dests: 2510:auto
2510 G(2120) (0 2) PRINT "**FUMBLE**";
  Origs: 1110:ifthen, 2500:auto
  Dests: 2520:auto
2520 G(2120) (0 3) GOTO 1410
     WARNING: Branch to line before GOSUB start
  Origs: 2510:auto
  Dests: 1410:goto
2530 G(2530) (1 4) IF S = 1 THEN 2560
  Origs: 840:gosub
  Dests: 2540:auto, 2560:ifthen
2540 G(2530) (0 4) LET Y = INT(1 + 3.5 * RND(0))
  Origs: 2530:auto
  Dests: 2550:auto
2550 G(2530) (0 1) RETURN
  Origs: 2540:auto, 2600:ifthen
  Dests: 
2560 G(2530) (0 5) LET M = INT(55 * RND(0) / 10.5) + 1
  Origs: 2530:ifthen
  Dests: 2570:auto
2570 G(2530) (1 8) IF (B1 - B) / (5 - D) < 3 THEN 2590
  Origs: 2560:auto
  Dests: 2580:auto, 2590:ifthen
2580 G(2530) (0 4) LET M = INT(6 - 4 * RND(0) ^ 2)
  Origs: 2570:auto
  Dests: 2590:auto
2590 G(2530) (1 6) IF L * F * 60 >= C THEN 2670
  Origs: 2570:ifthen, 2580:auto
  Dests: 2600:auto, 2670:ifthen
2600 G(2530) (1 5) IF D < 4 THEN 2550
  Origs: 2590:auto, 2670:ifthen, 2710:goto
  Dests: 2550:ifthen, 2610:auto
2610 G(2530) (0 2) PRINT "I'LL ";
  Origs: 2600:auto
  Dests: 2620:auto
2620 G(2530) (1 2) IF B5 5 THEN 2720
     ERROR: Too many operands
  Origs: 2610:auto
  Dests: 2630:auto, 2720:ifthen
2630 G(2530) (1 9) IF 0 < 4 * RND(0) - B1 + B THEN 2750
  Origs: 2620:auto
  Dests: 2640:auto, 2750:ifthen
2640 G(2530) (0 2) PRINT "TRY FOR A FIELD GOAL"
  Origs: 2630:auto
  Dests: 2650:auto
2650 G(2530) (0 3) LET M = 7
  Origs: 2640:auto
  Dests: 2660:auto
2660 G(2530) (0 1) RETURN
  Origs: 2650:auto
  Dests: 
2670 G(2530) (1 8) IF P(2) * U2 <= P(1) * U2 THEN 2600
  Origs: 2590:ifthen
  Dests: 2600:ifthen, 2680:auto
2680 G(2530) (0 2) PRINT "TIME OUT"
  Origs: 2670:auto
  Dests: 2690:auto
2690 G(2530) (0 4) LET U2 = U2 - 1
  Origs: 2680:auto
  Dests: 2700:auto
2700 G(2530) (0 2) GOSUB 3520
  Origs: 2690:auto
  Dests: 2710:auto, 3520:gosub
2710 G(2530) (0 3) GOTO 2600
  Origs: 2700:auto
  Dests: 2600:goto
2720 G(2530) (0 2) PRINT "PUNT"
  Origs: 2620:ifthen
  Dests: 2730:auto
2730 G(2530) (0 3) LET M = 8
  Origs: 2720:auto
  Dests: 2740:auto
2740 G(2530) (0 1) RETURN
  Origs: 2730:auto
  Dests: 
2750 G(2530) (0 2) PRINT "GO FOR IT"
  Origs: 2630:ifthen
  Dests: 2760:auto
2760 G(2530) (0 1) RETURN
  Origs: 2750:auto
  Dests: 
2770 G(2120) (1 4) IF X < 4 THEN 2830
  Origs: 830:ifthen, 880:ifthen, 2150:ifthen, 2920:ifthen
  Dests: 2780:auto, 2830:ifthen
2780 G(2120) (1 4) IF P(1) = P(2) THEN 2830
  Origs: 2770:auto
  Dests: 2790:auto, 2830:ifthen
2790 G(2120) (0 2) PRINT "THE GAME IS OVER"
  Origs: 2780:auto
  Dests: 2800:auto
2800 G(2120) (0 2) PRINT "FINAL ";
  Origs: 2790:auto
  Dests: 2810:auto
2810 G(2120) (0 3) GOSUB 2120
  Origs: 2800:auto
  Dests: 2120:gosub, 2820:auto
2820 G(2120) (0 1) STOP
     WARNING: Terminating statement in GOSUB
  Origs: 2810:auto
  Dests: :stop
2830 G(2120) (0 3) PRINT "END OF PERIOD"; X
  Origs: 2770:ifthen, 2780:ifthen
  Dests: 2840:auto
2840 G(2120) (0 3) GOSUB 2120
  Origs: 2830:auto
  Dests: 2120:gosub, 2850:auto
2850 G(2120) (0 4) LET F = 1 - F
  Origs: 2840:auto
  Dests: 2860:auto
2860 G(2120) (0 2) GOSUB 3520
  Origs: 2850:auto
  Dests: 2870:auto, 3520:gosub
2870 G(2120) (0 3) LET C = 900
  Origs: 2860:auto
  Dests: 2880:auto
2880 G(2120) (0 4) LET X = X + 1
  Origs: 2870:auto
  Dests: 2890:auto
2890 G(2120) (1 5) IF F <> 0 THEN 810
     WARNING: Branch to line before GOSUB start
  Origs: 2880:auto
  Dests: 810:ifthen, 2900:auto
2900 G(2120) (0 4) LET S = 3 - K
  Origs: 2890:auto
  Dests: 2910:auto
2910 G(2120) (0 3) GOTO 580
     WARNING: Branch to line before GOSUB start
  Origs: 2900:auto
  Dests: 580:goto
2920 G(2120) (1 5) IF T1 = 0 THEN 2770
  Origs: 870:ifthen
  Dests: 2770:ifthen, 2930:auto
2930 G(2120) (0 2) PRINT "2 MINUTE WARNING"
  Origs: 2920:auto
  Dests: 2940:auto
2940 G(2120) (0 2) GOSUB 3520
  Origs: 2930:auto
  Dests: 2950:auto, 3520:gosub
2950 G(2120) (0 3) LET T1 = 0
  Origs: 2940:auto
  Dests: 2960:auto
2960 G(2120) (0 3) LET C = 120
  Origs: 2950:auto
  Dests: 2970:auto
2970 G(2120) (0 3) GOTO 880
     WARNING: Branch to line before GOSUB start
  Origs: 2960:auto
  Dests: 880:goto
2980 G(2980) (0 4) LET B1 = B + 10
  Origs: 790:gosub, 1730:gosub
  Dests: 2990:auto
2990 G(2980) (1 4) IF B1 <= 100 THEN 3010
  Origs: 2980:auto
  Dests: 3000:auto, 3010:ifthen
3000 G(2980) (0 3) LET B1 = 100
  Origs: 2990:auto
  Dests: 3010:auto
3010 G(2980) (0 1) RETURN
  Origs: 2990:ifthen, 3000:auto
  Dests: 
3020 G(3020) (0 9) LET Q = 1.3 * (A * RND(0) - 1) - 0.06
  Origs: 1070:gosub, 1260:gosub, 1380:gosub
  Dests: 3030:auto
3030 G(3020) (0 3) LET A = 1
  Origs: 3020:auto
  Dests: 3040:auto
3040 G(3020) (1 4) IF Q >= 0 THEN 3070
  Origs: 3030:auto
  Dests: 3050:auto, 3070:ifthen
3050 G(3020) (0 3) LET A = 0
  Origs: 3040:auto
  Dests: 3060:auto
3060 G(3020) (0 4) LET Q = -Q
  Origs: 3050:auto
  Dests: 3070:auto
3070 G(3020) (0 4) LET M = M - 1
  Origs: 3040:ifthen, 3060:auto
  Dests: 3080:auto
3080 G(3020) (0 11) LET G = D(A, M1) + FNT(Q) * (D(2, M) - D(A, M)) / 3.5
  Origs: 3070:auto
  Dests: 360:function, 3090:auto
3090 G(3020) (0 11) LET G = G + INT(RND(0) + 0.02) * A + 100 * RND(0)
  Origs: 3080:auto
  Dests: 3100:auto
3100 G(3020) (0 4) LET G = INT(G)
  Origs: 3090:auto
  Dests: 3110:auto
3110 G(3020) (0 1) RETURN
  Origs: 3100:auto
  Dests: 
3120 G(2120) (0 4) LET D = D + 1
  Origs: 1350:goto, 1670:ifthen, 1720:ifthen, 1750:goto
  Dests: 3130:auto
3130 G(2120) (1 4) IF D = 5 THEN 3240
  Origs: 3120:auto
  Dests: 3140:auto, 3240:ifthen
3140 G(2120) (1 4) IF D <> 1 THEN 3160
  Origs: 3130:auto
  Dests: 3150:auto, 3160:ifthen
3150 G(2120) (0 2) PRINT "1ST";
  Origs: 3140:auto
  Dests: 3160:auto
3160 G(2120) (1 4) IF D <> 2 THEN 3180
  Origs: 3140:ifthen, 3150:auto
  Dests: 3170:auto, 3180:ifthen
3170 G(2120) (0 2) PRINT "2ND";
  Origs: 3160:auto
  Dests: 3180:auto
3180 G(2120) (1 4) IF D <> 3 THEN 3200
  Origs: 3160:ifthen, 3170:auto
  Dests: 3190:auto, 3200:ifthen
3190 G(2120) (0 2) PRINT "3RD";
  Origs: 3180:auto
  Dests: 3200:auto
3200 G(2120) (1 4) IF D < 4 THEN 3220
  Origs: 3180:ifthen, 3190:auto
  Dests: 3210:auto, 3220:ifthen
3210 G(2120) (0 2) PRINT "4TH";
  Origs: 3200:auto
  Dests: 3220:auto
3220 G(2120) (0 5) PRINT " AND"; B1 - B; "    ";
  Origs: 3200:ifthen, 3210:auto
  Dests: 3230:auto
3230 G(2120) (0 3) GOTO 810
     WARNING: Branch to line before GOSUB start
  Origs: 3220:auto
  Dests: 810:goto
3240 G(2120) (0 4) LET S = 3 - S
  Origs: 3130:ifthen
  Dests: 3250:auto
3250 G(2120) (0 4) LET B = 100 - B
  Origs: 3240:auto
  Dests: 3260:auto
3260 G(2120) (1 5) IF S = 2 THEN 770
     WARNING: Branch to line before GOSUB start
  Origs: 2490:ifthen, 3250:auto
  Dests: 770:ifthen, 3270:auto
3270 G(2120) (0 2) PRINT "MY ";
  Origs: 3260:auto
  Dests: 3280:auto
3280 G(2120) (0 3) GOTO 780
     WARNING: Branch to line before GOSUB start
  Origs: 3270:auto
  Dests: 780:goto
3290 G(3290) (0 2) PRINT "BALL ON ";
  Origs: 780:gosub
  Dests: 3300:auto
3300 G(3290,3300) (1 4) IF B = 50 THEN 3400
     WARNING: Inconsistent GOSUB origins
     WARNING: Multiple GOSUB entry points
  Origs: 1630:gosub, 2360:gosub, 2480:gosub, 3290:auto
  Dests: 3310:auto, 3400:ifthen
3310 G(3290,3300) (0 5) LET V = 50 - ABS(B - 50)
     WARNING: Multiple GOSUB entry points
  Origs: 3300:auto
  Dests: 3320:auto
3320 G(3290,3300) (0 5) LET C = C - INT(7 + 3 * RND(0))
     WARNING: Multiple GOSUB entry points
  Origs: 3310:auto
  Dests: 3330:auto
3330 G(3290,3300) (1 4) IF S = 1 THEN 3420
     WARNING: Multiple GOSUB entry points
  Origs: 3320:auto
  Dests: 3340:auto, 3420:ifthen
3340 G(3290,3300) (1 4) IF B < 50 THEN 3370
     WARNING: Multiple GOSUB entry points
  Origs: 3330:auto
  Dests: 3350:auto, 3370:ifthen
3350 G(3290,3300) (0 2) PRINT "MY ";
     WARNING: Multiple GOSUB entry points
  Origs: 3340:auto, 3420:ifthen
  Dests: 3360:auto
3360 G(3290,3300) (0 2) GOTO 3380
     WARNING: Multiple GOSUB entry points
  Origs: 3350:auto
  Dests: 3380:goto
3370 G(3290,3300) (0 2) PRINT "YOUR ";
     WARNING: Multiple GOSUB entry points
  Origs: 3340:ifthen, 3430:goto
  Dests: 3380:auto
3380 G(3290,3300) (0 2) PRINT V
     WARNING: Multiple GOSUB entry points
  Origs: 3360:goto, 3370:auto
  Dests: 3390:auto
3390 G(3290,3300) (0 1) RETURN
     WARNING: Multiple GOSUB entry points
  Origs: 3380:auto
  Dests: 
3400 G(3290,3300) (0 2) PRINT "THE 50"
     WARNING: Multiple GOSUB entry points
  Origs: 3300:ifthen
  Dests: 3410:auto
3410 G(3290,3300) (0 1) RETURN
     WARNING: Multiple GOSUB entry points
  Origs: 3400:auto
  Dests: 
3420 G(3290,3300) (1 5) IF B < 50 THEN 3350
     WARNING: Multiple GOSUB entry points
  Origs: 3330:ifthen
  Dests: 3350:ifthen, 3430:auto
3430 G(3290,3300) (0 3) GOTO 3370
     WARNING: Multiple GOSUB entry points
  Origs: 3420:auto
  Dests: 3370:goto
3440 G(3440) (1 4) IF S = 2 THEN 3470
  Origs: 2220:gosub, 2250:gosub
  Dests: 3450:auto, 3470:ifthen
3450 G(3440) (0 2) PRINT "YOU";
  Origs: 3440:auto
  Dests: 3460:auto
3460 G(3440) (0 2) GOTO 3480
  Origs: 3450:auto
  Dests: 3480:goto
3470 G(3440) (0 2) PRINT "I";
  Origs: 3440:ifthen
  Dests: 3480:auto
3480 G(3440) (0 2) PRINT " KICK OFF."
  Origs: 3460:goto, 3470:auto
  Dests: 3490:auto
3490 G(3440) (0 3) LET F2 = 0.06
  Origs: 3480:auto
  Dests: 3500:auto
3500 G(3440) (0 3) LET Z2 = 0
  Origs: 3490:auto
  Dests: 3510:auto
3510 G(3440) (0 1) RETURN
  Origs: 3500:auto
  Dests: 
3520 G(3520) (0 3) LET L = 0
  Origs: 1710:gosub, 2700:gosub, 2860:gosub, 2940:gosub, 3580:gosub
  Dests: 3530:auto
3530 G(3520) (0 2) PRINT "TIMEOUT CALLED..."
  Origs: 3520:auto
  Dests: 3540:auto
3540 G(3520) (0 2) PRINT
  Origs: 3530:auto
  Dests: 3550:auto
3550 G(3520) (0 1) RETURN
  Origs: 3540:auto
  Dests: 
3560 (1 4) IF U = 0 THEN 3600
  Origs: 
  Dests: 3570:auto, 3600:ifthen
3570 (0 4) LET U = U + 1
  Origs: 3560:auto
  Dests: 3580:auto
3580 (0 3) GOSUB 3520
  Origs: 3570:auto
  Dests: 3520:gosub, 3590:auto
3590 (0 2) GOTO 3610
  Origs: 3580:auto
  Dests: 3610:goto
3600 G(3610) (0 2) PRINT "..WRONG, TRY AGAIN"
  Origs: 3560:ifthen, 3620:ifthen, 3640:ifthen, 3650:ifthen
  Dests: 3610:auto
3610 G(3610) (1 2) INPUT A
     WARNING: Inconsistent GOSUB origins
  Origs: 560:gosub, 930:gosub, 2280:gosub, 3590:goto, 3600:auto
  Dests: 3620:auto
3620 G(3610) (1 6) IF ABS(INT(A)) > 17 THEN 3600
     WARNING: Branch to line before GOSUB start
  Origs: 3610:auto
  Dests: 3600:ifthen, 3630:auto
3630 G(3610) (0 3) LET Q = R(INT(ABS(A)))
  Origs: 3620:auto
  Dests: 3640:auto
3640 G(3610) (1 5) IF Q = 0 THEN 3600
     WARNING: Branch to line before GOSUB start
  Origs: 3630:auto
  Dests: 3600:ifthen, 3650:auto
3650 G(3610) (1 5) IF Q = 100 THEN 3600
     WARNING: Branch to line before GOSUB start
  Origs: 3640:auto
  Dests: 3600:ifthen, 3660:auto
3660 G(3610) (0 1) RETURN
  Origs: 3650:auto
  Dests: 
3670 (0 3) DATA 0.5, -2, 0.25, 4, 0.5, 13, 0.55
  Origs: 
  Dests: 
3680 (0 3) DATA 0.4, -2, 0.3, 7, 0.65, 15, 0.75
  Origs: 
  Dests: 
3690 (0 3) DATA 0.4, -2, 0.3, 6, 0.6, 15, 0.35
  Origs: 
  Dests: 
3700 (0 3) DATA 0.65, -2, 0.65, 6, 0.6, 17, 0.9
  Origs: 
  Dests: 
3710 (0 2) DATA 0.4, 2, 0.7, 10, 0.4, 27, 0.2
  Origs: 
  Dests: 
3720 (0 2) DATA 0.1, 19, 0.4, 35, 0.2, 100, 0.1
  Origs: 
  Dests: 
3730 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

1850: PRINT "THE KICK IS ";
1860: LET Z2 = 0
1870: LET S = 3 - S
1880: GOTO 2340
3560: IF U = 0 THEN 3600
3570: LET U = U + 1
3580: GOSUB 3520
3590: GOTO 3610
3730: END

