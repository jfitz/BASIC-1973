Statistics:

Number of lines: 224
Number of valid statements: 214
Number of comments: 10
Number of executable statements: 212

Complexity:

Comment density: 0.047
Comprehension effort: 637
McCabe complexity: 69
Halstead complexity:
 length: 936
 volume: 4632.039
 difficulty: 44.132
 effort: 204422.228
 language: 2.378
 intelligence: 104.958
 time: 189.280

(0 2) 100 PRINT "YOU HAVE THE OPPORTUNITY OF TRYING TO BEAT THE COMPUTER"
  Origs: :start
  Dests: 130:auto
(0 2) 130 PRINT "AT TIC-TAC-TOE, ENTER YOUR MOVES AS FOLLOWS:"
  Origs: 100:auto
  Dests: 140:auto
(0 2) 140 PRINT
  Origs: 130:auto
  Dests: 150:auto
(0 2) 150 DIM C(11)
  Origs: 140:auto
  Dests: 160:auto
(0 2) 160 DIM D(11)
  Origs: 150:auto
  Dests: 170:auto
(1 3) 170 FOR K = 1 TO 11
  Origs: 160:auto
  Dests: 180:fornext, 190:fornext
(2 3) 180 READ C(K), D(K)
  Origs: 170:fornext
  Dests: 190:auto
(0 1) 190 NEXT K
  Origs: 170:fornext, 180:auto
  Dests: 200:auto
(0 2) 200 PRINT
  Origs: 190:auto
  Dests: 210:auto
(0 2) 210 PRINT
  Origs: 200:auto
  Dests: 220:auto
(0 2) 220 PRINT "ROWS ARE HORIZONTAL (ACROSS), COLUMNS ARE VERTICAL(UP + DOWN)"
  Origs: 210:auto
  Dests: 230:auto
(0 2) 230 DIM B(9)
  Origs: 220:auto
  Dests: 240:auto
(0 2) 240 DIM A(3, 3)
  Origs: 230:auto
  Dests: 250:auto
(0 2) 250 PRINT
  Origs: 240:auto, 2090:ifthen
  Dests: 260:auto
(0 2) 260 PRINT "NEW GAME STARTED NOW............................."
  Origs: 250:auto
  Dests: 270:auto
(1 3) 270 FOR J = 1 TO 3
  Origs: 260:auto
  Dests: 280:fornext, 310:fornext
(1 3) 280 FOR I = 1 TO 3
  Origs: 270:fornext
  Dests: 290:fornext, 300:fornext
(0 3) 290 LET A(I, J) = 0
  Origs: 280:fornext
  Dests: 300:auto
(0 1) 300 NEXT I
  Origs: 280:fornext, 290:auto
  Dests: 301:auto
(0 4) 301 LET I = I - 1
  Origs: 300:auto
  Dests: 310:auto
(0 1) 310 NEXT J
  Origs: 270:fornext, 301:auto
  Dests: 311:auto
(0 4) 311 LET J = J - 1
  Origs: 310:auto
  Dests: 320:auto
(0 3) 320 LET Z = 0
  Origs: 311:auto
  Dests: 330:auto
(0 2) 330 PRINT "YOUR MOVE",
  Origs: 320:auto, 600:goto, 640:goto
  Dests: 340:auto
(2 3) 340 INPUT R, C
  Origs: 330:auto
  Dests: 350:auto
(0 2) 350 PRINT
  Origs: 340:auto
  Dests: 360:auto
(1 4) 360 IF R > 3 THEN 620
  Origs: 350:auto
  Dests: 370:auto, 620:ifthen
(1 4) 370 IF C > 3 THEN 620
  Origs: 360:auto
  Dests: 380:auto, 620:ifthen
(1 4) 380 IF A(R, C) <> 0 THEN 620
  Origs: 370:auto
  Dests: 390:auto, 620:ifthen
(0 4) 390 LET A(R, C) = -1
  Origs: 380:auto
  Dests: 400:auto
(0 2) 400 GOSUB 1660
  Origs: 390:auto
  Dests: 410:auto, 1660:gosub
(1 4) 410 IF Z = 1 THEN 2070
  Origs: 400:auto
  Dests: 420:auto, 2070:ifthen
(0 1) 420 REM MACHINE MOVE...
  Origs: 410:auto
  Dests: 430:auto
(0 2) 430 GOSUB 1100
  Origs: 420:auto
  Dests: 440:auto, 1100:gosub
(0 1) 440 REM TEST FOR GAME WIN...
  Origs: 430:auto
  Dests: 450:auto
(0 2) 450 GOSUB 1660
  Origs: 440:auto
  Dests: 460:auto, 1660:gosub
(1 4) 460 IF Z = 0 THEN 650
  Origs: 450:auto
  Dests: 470:auto, 650:ifthen
(0 1) 470 REM PRINT GAME BOARD...
  Origs: 460:auto
  Dests: 480:auto
(0 2) 480 GOTO 490
  Origs: 470:auto, 740:goto, 750:ifthen, 810:goto
  Dests: 490:goto
(0 2) 490 PRINT
  Origs: 480:goto
  Dests: 500:auto
(1 3) 500 FOR K = 1 TO 3
  Origs: 490:auto
  Dests: 510:fornext, 570:fornext
(0 3) 510 LET B = A(K, 1)
  Origs: 500:fornext
  Dests: 520:auto
(0 3) 520 LET D = A(K, 2)
  Origs: 510:auto
  Dests: 530:auto
(0 3) 530 LET F = A(K, 3)
  Origs: 520:auto
  Dests: 540:auto
(0 2) 540 GOSUB 840
  Origs: 530:auto
  Dests: 550:auto, 840:gosub
(1 4) 550 IF K > 2 THEN 570
  Origs: 540:auto
  Dests: 560:auto, 570:ifthen
(0 2) 560 PRINT "***************"
  Origs: 550:auto
  Dests: 570:auto
(0 1) 570 NEXT K
  Origs: 500:fornext, 550:ifthen, 560:auto
  Dests: 571:auto
(0 4) 571 LET K = K - 1
  Origs: 570:auto
  Dests: 580:auto
(0 2) 580 PRINT
  Origs: 571:auto
  Dests: 590:auto
(1 4) 590 IF Z <> 0 THEN 2070
  Origs: 580:auto
  Dests: 600:auto, 2070:ifthen
(0 3) 600 GOTO 330
  Origs: 590:auto
  Dests: 330:goto
(0 1) 610 STOP
  Origs: 
  Dests: :stop
(0 2) 620 PRINT "---- ILLEGAL MOVE  TRY AGAIN ---"
  Origs: 360:ifthen, 370:ifthen, 380:ifthen
  Dests: 630:auto
(0 2) 630 PRINT
  Origs: 620:auto
  Dests: 640:auto
(0 3) 640 GOTO 330
  Origs: 630:auto
  Dests: 330:goto
(0 3) 650 LET T2 = 0
  Origs: 460:ifthen
  Dests: 660:auto
(1 3) 660 FOR J = 1 TO 3
  Origs: 650:auto
  Dests: 670:fornext, 710:fornext
(1 3) 670 FOR I = 1 TO 3
  Origs: 660:fornext
  Dests: 680:fornext, 700:fornext
(1 4) 680 IF A(I, J) <> 0 THEN 700
  Origs: 670:fornext
  Dests: 690:auto, 700:ifthen
(0 4) 690 LET T2 = T2 + 1
  Origs: 680:auto
  Dests: 700:auto
(0 1) 700 NEXT I
  Origs: 670:fornext, 680:ifthen, 690:auto
  Dests: 701:auto
(0 4) 701 LET I = I - 1
  Origs: 700:auto
  Dests: 710:auto
(0 1) 710 NEXT J
  Origs: 660:fornext, 701:auto
  Dests: 711:auto
(0 4) 711 LET J = J - 1
  Origs: 710:auto
  Dests: 720:auto
(1 4) 720 IF T2 > 0 THEN 750
  Origs: 711:auto
  Dests: 730:auto, 750:ifthen
(0 2) 730 GOSUB 1340
  Origs: 720:auto, 790:goto
  Dests: 740:auto, 1340:gosub
(0 3) 740 GOTO 480
  Origs: 730:auto
  Dests: 480:goto
(1 5) 750 IF T2 > 1 THEN 480
  Origs: 720:ifthen
  Dests: 480:ifthen, 760:auto
(1 3) 760 FOR J = 1 TO 8
  Origs: 750:auto
  Dests: 770:fornext, 780:fornext
(1 6) 770 IF B(J) = -2 THEN 800
  Origs: 760:fornext
  Dests: 780:auto, 800:ifthen
(0 1) 780 NEXT J
  Origs: 760:fornext, 770:auto
  Dests: 781:auto
(0 4) 781 LET J = J - 1
  Origs: 780:auto
  Dests: 790:auto
(0 3) 790 GOTO 730
  Origs: 781:auto
  Dests: 730:goto
(0 2) 800 GOSUB 2000
  Origs: 770:ifthen
  Dests: 810:auto, 2000:gosub
(0 3) 810 GOTO 480
  Origs: 800:auto
  Dests: 480:goto
(0 1) 820 REM PRINT TIC-TAC-TOE BOARD ROW
  Origs: 
  Dests: 
(0 1) 830 REM
  Origs: 
  Dests: 
(1 4) 840 IF B <> 0 THEN 910
  Origs: 540:gosub
  Dests: 850:auto, 910:ifthen
(0 2) 850 PRINT "    * ";
  Origs: 840:auto
  Dests: 860:auto
(1 4) 860 IF D <> 0 THEN 940
  Origs: 850:auto, 930:goto, 1010:goto
  Dests: 870:auto, 940:ifthen
(0 2) 870 PRINT "    * ";
  Origs: 860:auto
  Dests: 880:auto
(1 4) 880 IF F <> 0 THEN 970
  Origs: 870:auto, 960:goto, 1030:goto
  Dests: 890:auto, 970:ifthen
(0 2) 890 PRINT "    "
  Origs: 880:auto
  Dests: 900:auto
(0 2) 900 GOTO 1070
  Origs: 890:auto, 990:goto, 1050:goto
  Dests: 1070:goto
(1 4) 910 IF B > 0 THEN 1000
  Origs: 840:ifthen
  Dests: 920:auto, 1000:ifthen
(0 2) 920 PRINT "YOU * ";
  Origs: 910:auto
  Dests: 930:auto
(0 3) 930 GOTO 860
  Origs: 920:auto
  Dests: 860:goto
(1 4) 940 IF D > 0 THEN 1020
  Origs: 860:ifthen
  Dests: 950:auto, 1020:ifthen
(0 2) 950 PRINT "YOU * ";
  Origs: 940:auto
  Dests: 960:auto
(0 3) 960 GOTO 880
  Origs: 950:auto
  Dests: 880:goto
(1 4) 970 IF F > 0 THEN 1040
  Origs: 880:ifthen
  Dests: 980:auto, 1040:ifthen
(0 2) 980 PRINT "YOU"
  Origs: 970:auto
  Dests: 990:auto
(0 3) 990 GOTO 900
  Origs: 980:auto
  Dests: 900:goto
(0 2) 1000 PRINT "PDP * ";
  Origs: 910:ifthen
  Dests: 1010:auto
(0 3) 1010 GOTO 860
  Origs: 1000:auto
  Dests: 860:goto
(0 2) 1020 PRINT "PDP * ";
  Origs: 940:ifthen
  Dests: 1030:auto
(0 3) 1030 GOTO 880
  Origs: 1020:auto
  Dests: 880:goto
(0 2) 1040 PRINT "PDP"
  Origs: 970:ifthen
  Dests: 1050:auto
(0 3) 1050 GOTO 900
  Origs: 1040:auto
  Dests: 900:goto
(0 1) 1060 REM PRINT LEGENDS..
  Origs: 
  Dests: 
(0 2) 1070 PRINT "    *     * "
  Origs: 900:goto
  Dests: 1080:auto
(0 1) 1080 RETURN
  Origs: 1070:auto
  Dests: 
(0 1) 1090 REM PROGRAM TO MAKE MOVE FOR THE MACHINE....
  Origs: 
  Dests: 
(0 4) 1100 LET M = INT(3.33 * RND(1))
  Origs: 430:gosub, 1120:ifthen, 1130:ifthen
  Inconsistent GOSUB origins
  Dests: 1110:auto
(0 4) 1110 LET N = INT(3.33333 * RND(N))
  Origs: 1100:auto, 1140:ifthen, 1150:ifthen
  Dests: 1120:auto
(1 5) 1120 IF M = 0 THEN 1100
  Origs: 1110:auto
  Dests: 1100:ifthen, 1130:auto
(1 5) 1130 IF M > 3 THEN 1100
  Origs: 1120:auto
  Dests: 1100:ifthen, 1140:auto
(1 5) 1140 IF N = 0 THEN 1110
  Origs: 1130:auto
  Dests: 1110:ifthen, 1150:auto
(1 5) 1150 IF N > 3 THEN 1110
  Origs: 1140:auto
  Dests: 1110:ifthen, 1160:auto
(0 3) 1160 LET C(2) = M
  Origs: 1150:auto
  Dests: 1170:auto
(0 3) 1170 LET D(2) = N
  Origs: 1160:auto
  Dests: 1180:auto
(0 3) 1180 LET C(3) = N
  Origs: 1170:auto
  Dests: 1190:auto
(0 3) 1190 LET D(3) = M
  Origs: 1180:auto
  Dests: 1200:auto
(1 3) 1200 FOR I = 1 TO 8
  Origs: 1190:auto
  Dests: 1210:fornext, 1220:fornext
(1 4) 1210 IF B(I) > 1 THEN 1370
  Origs: 1200:fornext
  Dests: 1220:auto, 1370:ifthen
(0 1) 1220 NEXT I
  Origs: 1200:fornext, 1210:auto
  Dests: 1221:auto
(0 4) 1221 LET I = I - 1
  Origs: 1220:auto
  Dests: 1230:auto
(1 3) 1230 FOR I = 1 TO 8
  Origs: 1221:auto
  Dests: 1240:fornext, 1250:fornext
(1 6) 1240 IF B(I) < -1 THEN 1370
  Origs: 1230:fornext
  Dests: 1250:auto, 1370:ifthen
(0 1) 1250 NEXT I
  Origs: 1230:fornext, 1240:auto
  Dests: 1251:auto
(0 4) 1251 LET I = I - 1
  Origs: 1250:auto
  Dests: 1260:auto
(1 5) 1260 IF R + C = 0 THEN 1550
  Origs: 1251:auto
  Dests: 1270:auto, 1550:ifthen
(1 3) 1270 FOR K = 1 TO 11
  Origs: 1260:auto
  Dests: 1280:fornext, 1330:fornext
(0 3) 1280 LET I = C(K)
  Origs: 1270:fornext
  Dests: 1300:auto
(1 4) 1300 IF A(I, J) <> 0 THEN 1330
  Origs: 1280:auto
  Dests: 1310:auto, 1330:ifthen
(0 3) 1310 LET A(I, J) = 1
  Origs: 1300:auto
  Dests: 1320:auto
(0 2) 1320 GOTO 1360
  Origs: 1310:auto
  Dests: 1360:goto
(0 1) 1330 NEXT K
  Origs: 1270:fornext, 1300:ifthen
  Dests: 1331:auto
(0 4) 1331 LET K = K - 1
  Origs: 1330:auto
  Dests: 1340:auto
(0 2) 1340 PRINT " ... TIE GAME ... "
  Origs: 730:gosub, 1331:auto
  Inconsistent GOSUB origins
  Dests: 1350:auto
(0 3) 1350 LET Z = 3
  Origs: 1340:auto
  Dests: 1360:auto
(0 1) 1360 RETURN
  Origs: 1320:goto, 1350:auto, 1410:goto, 1430:goto, 1480:goto, 1500:goto, 1580:goto, 1600:goto, 1620:goto, 1640:goto
  Dests: 
(1 4) 1370 IF I > 3 THEN 1440
  Origs: 1210:ifthen, 1240:ifthen
  Dests: 1380:auto, 1440:ifthen
(1 3) 1380 FOR J = 1 TO 3
  Origs: 1370:auto
  Dests: 1390:fornext, 1400:fornext
(1 4) 1390 IF A(I, J) = 0 THEN 1420
  Origs: 1380:fornext
  Dests: 1400:auto, 1420:ifthen
(0 1) 1400 NEXT J
  Origs: 1380:fornext, 1390:auto
  Dests: 1401:auto
(0 4) 1401 LET J = J - 1
  Origs: 1400:auto
  Dests: 1410:auto
(0 3) 1410 GOTO 1360
  Origs: 1401:auto
  Dests: 1360:goto
(0 3) 1420 LET A(I, J) = 1
  Origs: 1390:ifthen
  Dests: 1430:auto
(0 3) 1430 GOTO 1360
  Origs: 1420:auto
  Dests: 1360:goto
(1 4) 1440 IF I > 6 THEN 1510
  Origs: 1370:ifthen
  Dests: 1450:auto, 1510:ifthen
(1 3) 1450 FOR J = 1 TO 3
  Origs: 1440:auto
  Dests: 1460:fornext, 1470:fornext
(1 4) 1460 IF A(J, I - 3) = 0 THEN 1490
  Origs: 1450:fornext
  Dests: 1470:auto, 1490:ifthen
(0 1) 1470 NEXT J
  Origs: 1450:fornext, 1460:auto
  Dests: 1471:auto
(0 4) 1471 LET J = J - 1
  Origs: 1470:auto
  Dests: 1480:auto
(0 3) 1480 GOTO 1360
  Origs: 1471:auto
  Dests: 1360:goto
(0 3) 1490 LET A(J, I - 3) = 1
  Origs: 1460:ifthen
  Dests: 1500:auto
(0 3) 1500 GOTO 1360
  Origs: 1490:auto
  Dests: 1360:goto
(1 4) 1510 IF I > 7 THEN 1550
  Origs: 1440:ifthen
  Dests: 1520:auto, 1550:ifthen
(1 3) 1520 FOR J = 1 TO 3
  Origs: 1510:auto
  Dests: 1530:fornext, 1540:fornext
(1 4) 1530 IF A(J, J) = 0 THEN 1590
  Origs: 1520:fornext
  Dests: 1540:auto, 1590:ifthen
(0 1) 1540 NEXT J
  Origs: 1520:fornext, 1530:auto
  Dests: 1541:auto
(0 4) 1541 LET J = J - 1
  Origs: 1540:auto
  Dests: 1550:auto
(1 4) 1550 IF A(1, 3) = 0 THEN 1610
  Origs: 1260:ifthen, 1510:ifthen, 1541:auto
  Dests: 1560:auto, 1610:ifthen
(1 4) 1560 IF A(3, 1) = 0 THEN 1630
  Origs: 1550:auto
  Dests: 1570:auto, 1630:ifthen
(0 3) 1570 LET A(2, 2) = 1
  Origs: 1560:auto
  Dests: 1580:auto
(0 3) 1580 GOTO 1360
  Origs: 1570:auto
  Dests: 1360:goto
(0 3) 1590 LET A(J, J) = 1
  Origs: 1530:ifthen
  Dests: 1600:auto
(0 3) 1600 GOTO 1360
  Origs: 1590:auto
  Dests: 1360:goto
(0 3) 1610 LET A(1, 3) = 1
  Origs: 1550:ifthen
  Dests: 1620:auto
(0 3) 1620 GOTO 1360
  Origs: 1610:auto
  Dests: 1360:goto
(0 3) 1630 LET A(3, 1) = 1
  Origs: 1560:ifthen
  Dests: 1640:auto
(0 3) 1640 GOTO 1360
  Origs: 1630:auto
  Dests: 1360:goto
(0 1) 1650 REM PROGRAM TO TEST FOR GAME WINNER....
  Origs: 
  Dests: 
(0 3) 1660 LET T1 = 0
  Origs: 400:gosub, 450:gosub
  Dests: 1670:auto
(1 3) 1670 FOR J = 1 TO 9
  Origs: 1660:auto
  Dests: 1680:fornext, 1690:fornext
(0 3) 1680 LET B(J) = 0
  Origs: 1670:fornext
  Dests: 1690:auto
(0 1) 1690 NEXT J
  Origs: 1670:fornext, 1680:auto
  Dests: 1691:auto
(0 4) 1691 LET J = J - 1
  Origs: 1690:auto
  Dests: 1700:auto
(1 3) 1700 FOR J = 1 TO 3
  Origs: 1691:auto
  Dests: 1710:fornext, 1750:fornext
(1 3) 1710 FOR I = 1 TO 3
  Origs: 1700:fornext
  Dests: 1720:fornext, 1730:fornext
(1 4) 1720 IF A(J, 1) <> A(J, I) THEN 1750
  Origs: 1710:fornext
  Dests: 1730:auto, 1750:ifthen
(0 1) 1730 NEXT I
  Origs: 1710:fornext, 1720:auto
  Dests: 1731:auto
(0 4) 1731 LET I = I - 1
  Origs: 1730:auto
  Dests: 1740:auto
(0 3) 1740 LET T1 = A(J, I)
  Origs: 1731:auto
  Dests: 1750:auto
(0 1) 1750 NEXT J
  Origs: 1700:fornext, 1720:ifthen, 1740:auto
  Dests: 1751:auto
(0 4) 1751 LET J = J - 1
  Origs: 1750:auto
  Dests: 1760:auto
(1 3) 1760 FOR J = 1 TO 3
  Origs: 1751:auto
  Dests: 1770:fornext, 1810:fornext
(1 3) 1770 FOR I = 1 TO 3
  Origs: 1760:fornext
  Dests: 1780:fornext, 1790:fornext
(1 4) 1780 IF A(1, J) <> A(I, J) THEN 1810
  Origs: 1770:fornext
  Dests: 1790:auto, 1810:ifthen
(0 1) 1790 NEXT I
  Origs: 1770:fornext, 1780:auto
  Dests: 1791:auto
(0 4) 1791 LET I = I - 1
  Origs: 1790:auto
  Dests: 1800:auto
(0 3) 1800 LET T1 = A(I, J)
  Origs: 1791:auto
  Dests: 1810:auto
(0 1) 1810 NEXT J
  Origs: 1760:fornext, 1780:ifthen, 1800:auto
  Dests: 1811:auto
(0 4) 1811 LET J = J - 1
  Origs: 1810:auto
  Dests: 1820:auto
(1 4) 1820 IF A(1, 1) = A(3, 3) THEN 1930
  Origs: 1811:auto
  Dests: 1830:auto, 1930:ifthen
(1 4) 1830 IF A(3, 1) = A(1, 3) THEN 1970
  Origs: 1820:auto, 1940:goto
  Dests: 1840:auto, 1970:ifthen
(1 4) 1840 IF T1 <> 0 THEN 1990
  Origs: 1830:auto, 1960:goto, 1980:goto
  Dests: 1850:auto, 1990:ifthen
(1 3) 1850 FOR J = 1 TO 3
  Origs: 1840:auto, 2020:goto, 2050:goto
  Dests: 1860:fornext, 1900:fornext
(1 3) 1860 FOR I = 1 TO 3
  Origs: 1850:fornext
  Dests: 1870:fornext, 1890:fornext
(0 4) 1870 LET B(J) = B(J) + A(J, I)
  Origs: 1860:fornext
  Dests: 1880:auto
(0 4) 1880 LET B(J + 3) = B(J + 3) + A(I, J)
  Origs: 1870:auto
  Dests: 1890:auto
(0 1) 1890 NEXT I
  Origs: 1860:fornext, 1880:auto
  Dests: 1891:auto
(0 4) 1891 LET I = I - 1
  Origs: 1890:auto
  Dests: 1900:auto
(0 1) 1900 NEXT J
  Origs: 1850:fornext, 1891:auto
  Dests: 1901:auto
(0 4) 1901 LET J = J - 1
  Origs: 1900:auto
  Dests: 1910:auto
(0 5) 1910 LET B(7) = A(1, 1) + A(2, 2) + A(3, 3)
  Origs: 1901:auto
  Dests: 1920:auto
(0 1) 1920 RETURN
  Origs: 1910:auto
  Dests: 
(1 4) 1930 IF A(2, 2) = A(3, 3) THEN 1950
  Origs: 1820:ifthen
  Dests: 1940:auto, 1950:ifthen
(0 3) 1940 GOTO 1830
  Origs: 1930:auto
  Dests: 1830:goto
(0 3) 1950 LET T1 = A(2, 2)
  Origs: 1930:ifthen, 1970:ifthen
  Dests: 1960:auto
(0 3) 1960 GOTO 1840
  Origs: 1950:auto
  Dests: 1840:goto
(1 5) 1970 IF A(2, 2) = A(1, 3) THEN 1950
  Origs: 1830:ifthen
  Dests: 1950:ifthen, 1980:auto
(0 3) 1980 GOTO 1840
  Origs: 1970:auto
  Dests: 1840:goto
(1 4) 1990 IF T1 > 0 THEN 2030
  Origs: 1840:ifthen
  Dests: 2000:auto, 2030:ifthen
(0 2) 2000 PRINT " ...YOU WIN THIS TIME..."
  Origs: 800:gosub, 1990:auto
  Inconsistent GOSUB origins
  Dests: 2010:auto
(0 3) 2010 LET Z = 1
  Origs: 2000:auto
  Dests: 2020:auto
(0 3) 2020 GOTO 1850
  Origs: 2010:auto
  Dests: 1850:goto
(0 2) 2030 PRINT " ... THE PDP-8 WINS THIS TIME ..."
  Origs: 1990:ifthen
  Dests: 2040:auto
(0 3) 2040 LET Z = 2
  Origs: 2030:auto
  Dests: 2050:auto
(0 3) 2050 GOTO 1850
  Origs: 2040:auto
  Dests: 1850:goto
(0 1) 2060 REM END OF TEST WINNER PROGRAM......
  Origs: 
  Dests: 
(0 2) 2070 PRINT "DO YOU WANT TO PLAY ANOTHER GAME: YES(1) NO(0)";
  Origs: 410:ifthen, 590:ifthen
  Dests: 2080:auto
(1 2) 2080 INPUT X1
  Origs: 2070:auto, 2120:goto
  Dests: 2090:auto
(1 5) 2090 IF X1 = 1 THEN 250
  Origs: 2080:auto
  Dests: 250:ifthen, 2100:auto
(1 4) 2100 IF X1 = 0 THEN 2130
  Origs: 2090:auto
  Dests: 2110:auto, 2130:ifthen
(0 2) 2110 PRINT "I SAID ONE OR ZERO, TRY AGAIN"
  Origs: 2100:auto
  Dests: 2120:auto
(0 3) 2120 GOTO 2080
  Origs: 2110:auto
  Dests: 2080:goto
(0 2) 2130 PRINT "IT'S BEEN FUN, COME AGAIN SOMETIME"
  Origs: 2100:ifthen
  Dests: 2140:auto
(0 2) 2140 GOTO 2160
  Origs: 2130:auto
  Dests: 2160:goto
(0 2) 2150 DATA 2, 2, 0, 0, 0, 0, 1, 1, 3, 3, 1, 3, 3, 1, 1, 2, 3, 2, 2, 3, 2, 1
  Origs: 
  Dests: 
(0 1) 2160 REM CHAIN "DEMON "
  Origs: 2140:goto
  Dests: 2170:auto
(0 1) 2170 END
  Origs: 2160:auto
  Dests: :stop

Unreachable code:

610: STOP

