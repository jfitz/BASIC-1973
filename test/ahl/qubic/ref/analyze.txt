Statistics:

Number of lines: 236
Number of valid statements: 235
Number of comments: 1
Number of executable statements: 215

Complexity:

Comment density: 0.004
Comprehension effort: 702
McCabe complexity: 71
Halstead complexity:
 length: 1662
 volume: 8854.930
 difficulty: 50.400
 effort: 446288.482
 language: 3.486
 intelligence: 175.693
 time: 413.230

1 (0 1) REM "  QUBIC-  "
  Origs: 
  Dests: 
5 (0 2) PRINT "DO YOU WANT INSTRUCTIONS";
  Origs: :start
  Dests: 6:auto
6 (1 2) INPUT C$
  Origs: 5:auto, 10:goto
  Dests: 7:auto
7 (1 4) IF C$ = "NO" THEN 20
  Origs: 6:auto
  Dests: 8:auto, 20:ifthen
8 (1 4) IF C$ = "YES" THEN 13
  Origs: 7:auto
  Dests: 9:auto, 13:ifthen
9 (0 2) PRINT "INCORRECT ANSWER. PLEASE TYPE 'YES' OR 'NO'";
  Origs: 8:auto
  Dests: 10:auto
10 (0 3) GOTO 6
  Origs: 9:auto
  Dests: 6:goto
13 (0 2) PRINT "THE GAME IS TIC-TAC-TOE IN A 4 X 4 X 4 CUBE."
  Origs: 8:ifthen
  Dests: 14:auto
14 (0 2) PRINT "EACH MOVE IS INDICATED BY A 3 DIGIT NUMBER, WITH EACH"
  Origs: 13:auto
  Dests: 15:auto
15 (0 2) PRINT "DIGIT BETWEEN 1 AND 4 INCLUSIVE. THE DIGITS INDICATE THE"
  Origs: 14:auto
  Dests: 16:auto
16 (0 2) PRINT "LEVEL, COLUMN, AND ROW, RESPECTIVELY, OF THE OCCUPIED PLACE,"
  Origs: 15:auto
  Dests: 20:auto
20 (0 5) DIM X(64), L(76), M(76, 4), Y(16)
  Origs: 7:ifthen, 16:auto
  Dests: 21:auto
21 F(I) (1 3) FOR I = 1 TO 16
  Origs: 20:auto
  Dests: 22:fornext, 23:fornext
22 F(I) (1 2) READ Y(I)
  Origs: 21:fornext
  Dests: 23:auto
23 F(I) (0 1) NEXT I
  Origs: 21:fornext, 22:auto
  Dests: 24:auto
24 F(I) (1 3) FOR I = 1 TO 76
  Origs: 23:auto
  Dests: 25:fornext, 28:fornext
25 F(I,J) (1 3) FOR J = 1 TO 4
  Origs: 24:fornext
  Dests: 26:fornext, 27:fornext
26 F(I,J) (1 2) READ M(I, J)
  Origs: 25:fornext
  Dests: 27:auto
27 F(I,J) (0 1) NEXT J
  Origs: 25:fornext, 26:auto
  Dests: 28:auto
28 F(I) (0 1) NEXT I
  Origs: 24:fornext, 27:auto
  Dests: 35:auto
35 F(I,J,K) (1 3) FOR I = 1 TO 64
  Origs: 28:auto, 515:ifthen
  Dests: 40:fornext, 50:fornext
40 F(I,J,K) (0 3) LET X(I) = 0
  Origs: 35:fornext
  Dests: 50:auto
50 F(I,J,K) (0 1) NEXT I
  Origs: 35:fornext, 40:auto
  Dests: 54:auto
54 F(K) (0 3) LET Z = 1
  Origs: 50:auto
  Dests: 55:auto
55 F(K) (0 2) PRINT "DO YOU WANT TO MOVE FIRST";
  Origs: 54:auto
  Dests: 60:auto
60 F(K) (1 2) INPUT S$
  Origs: 55:auto, 69:goto
  Dests: 66:auto
66 F(K) (1 4) IF S$ = "NO" THEN 110
  Origs: 60:auto
  Dests: 67:auto, 110:ifthen
67 F(K) (1 4) IF S$ = "YES" THEN 70
  Origs: 66:auto
  Dests: 68:auto, 70:ifthen
68 F(K) (0 2) PRINT "INCORRECT ANSWER. PLEASE TYPE 'YES' OR 'NO'";
  Origs: 67:auto
  Dests: 69:auto
69 F(K) (0 3) GOTO 60
  Origs: 68:auto
  Dests: 60:goto
70 F(J,I,K) (0 2) PRINT " "
  Origs: 67:ifthen, 101:goto, 243:goto, 390:goto, 1230:goto, 1640:goto, 1780:goto
  Dests: 72:auto
72 F(J,I,K) (0 2) PRINT "YOUR MOVE";
  Origs: 70:auto
  Dests: 80:auto
80 F(J,I,K) (1 2) INPUT J1
  Origs: 72:auto
  Dests: 85:auto
85 F(J,I,K) (0 2) GOSUB 1800
  Origs: 80:auto
  Dests: 90:auto, 1800:gosub
90 F(J,I,K) (0 4) LET K1 = INT(J1 / 100)
  Origs: 85:auto
  Dests: 95:auto
95 F(J,I,K) (0 6) LET J2 = (J1 - K1 * 100)
  Origs: 90:auto
  Dests: 96:auto
96 F(J,I,K) (0 4) LET K2 = INT(J2 / 10)
  Origs: 95:auto
  Dests: 97:auto
97 F(J,I,K) (0 9) LET K3 = J1 - K1 * 100 - K2 * 10
  Origs: 96:auto
  Dests: 98:auto
98 F(J,I,K) (0 9) LET M = 16 * K1 + 4 * K2 + K3 - 20
  Origs: 97:auto
  Dests: 99:auto
99 F(J,I,K) (1 4) IF X(M) = 0 THEN 109
  Origs: 98:auto
  Dests: 100:auto, 109:ifthen
100 F(J,I,K) (0 2) PRINT "THAT SQUARE IS USED, TRY AGAIN"
  Origs: 99:auto
  Dests: 101:auto
101 F(J,I,K) (0 3) GOTO 70
  Origs: 100:auto
  Dests: 70:goto
109 F(J,I,K) (0 3) LET X(M) = 1
  Origs: 99:ifthen
  Dests: 110:auto
110 F(J,I,K) (0 2) GOSUB 1050
  Origs: 66:ifthen, 109:auto
  Dests: 180:auto, 1050:gosub
180 F(J,I,K) (1 3) FOR J = 1 TO 3
  Origs: 110:auto
  Dests: 190:fornext, 206:fornext
190 F(J,I,K) (1 3) FOR I = 1 TO 76
  Origs: 180:fornext
  Dests: 200:fornext, 205:fornext
200 F(J,I,K) (1 4) IF J = 1 THEN 210
  Origs: 190:fornext
  Dests: 201:auto, 210:ifthen
201 F(J,I,K) (1 4) IF J = 2 THEN 220
  Origs: 200:auto
  Dests: 203:auto, 220:ifthen
203 F(J,I,K) (1 4) IF J = 3 THEN 235
  Origs: 201:auto
  Dests: 205:auto, 235:ifthen
205 F(J,I,K) (0 1) NEXT I
  Origs: 190:fornext, 203:auto, 210:ifthen, 220:ifthen, 235:ifthen
  Dests: 206:auto
206 F(J,I,K) (0 1) NEXT J
  Origs: 180:fornext, 205:auto
  Dests: 207:auto
207 F(I,K) (0 2) GOTO 400
  Origs: 206:auto
  Dests: 400:goto
210 F(J,I,K) (1 5) IF L(I) <> 4 THEN 205
  Origs: 200:ifthen
  Dests: 205:ifthen, 211:auto
211 F(J,I,K) (0 2) PRINT "YOU WIN AS FOLLOWS";
  Origs: 210:auto
  Dests: 212:auto
212 F(I,J,K) (1 3) FOR J = 1 TO 4
  Origs: 211:auto
  Dests: 213:fornext, 216:fornext
213 F(I,J,K) (0 3) LET M = M(I, J)
  Origs: 212:fornext
  Dests: 214:auto
214 F(J,I,K) (0 2) GOSUB 1000
  Origs: 213:auto
  Dests: 216:auto, 1000:gosub
216 F(J,I,K) (0 1) NEXT J
  Origs: 212:fornext, 214:auto
  Dests: 217:auto
217 F(J,I,K) (0 2) GOTO 500
  Origs: 216:auto
  Dests: 500:goto
220 F(J,I,K) (1 5) IF L(I) <> 15 THEN 205
  Origs: 201:ifthen
  Dests: 205:ifthen, 221:auto
221 F(I,J,K) (1 3) FOR J = 1 TO 4
  Origs: 220:auto
  Dests: 222:fornext, 227:fornext
222 F(I,J,K) (0 3) LET M = M(I, J)
  Origs: 221:fornext
  Dests: 223:auto
223 F(J,I,K) (1 4) IF X(M) <> 0 THEN 227
  Origs: 222:auto
  Dests: 224:auto, 227:ifthen
224 F(J,I,K) (0 3) LET X(M) = 5
  Origs: 223:auto
  Dests: 225:auto
225 F(J,I,K) (0 2) PRINT "MACHINE MOVES TO";
  Origs: 224:auto
  Dests: 226:auto
226 F(J,I,K) (0 2) GOSUB 1000
  Origs: 225:auto
  Dests: 227:auto, 1000:gosub
227 F(J,I,K) (0 1) NEXT J
  Origs: 221:fornext, 223:ifthen, 226:auto
  Dests: 228:auto
228 F(J,I,K) (0 2) PRINT ", AND WINS AS FOLLOWS"
  Origs: 227:auto
  Dests: 229:auto
229 F(I,J,K) (1 3) FOR J = 1 TO 4
  Origs: 228:auto
  Dests: 230:fornext, 233:fornext
230 F(I,J,K) (0 3) LET M = M(I, J)
  Origs: 229:fornext
  Dests: 231:auto
231 F(J,I,K) (0 2) GOSUB 1000
  Origs: 230:auto
  Dests: 233:auto, 1000:gosub
233 F(J,I,K) (0 1) NEXT J
  Origs: 229:fornext, 231:auto
  Dests: 234:auto
234 F(J,I,K) (0 2) GOTO 500
  Origs: 233:auto
  Dests: 500:goto
235 F(J,I,K) (1 5) IF L(I) <> 3 THEN 205
  Origs: 203:ifthen
  Dests: 205:ifthen, 236:auto
236 F(J,I,K) (0 2) PRINT "NICE TRY MACHINE MOVES TO";
  Origs: 235:auto
  Dests: 237:auto
237 F(I,J,K) (1 3) FOR J = 1 TO 4
  Origs: 236:auto
  Dests: 238:fornext, 245:fornext
238 F(I,J,K) (0 3) LET M = M(I, J)
  Origs: 237:fornext
  Dests: 239:auto
239 F(J,I,K) (1 4) IF X(M) <> 0 THEN 245
  Origs: 238:auto
  Dests: 240:auto, 245:ifthen
240 F(J,I,K) (0 3) LET X(M) = 5
  Origs: 239:auto
  Dests: 241:auto
241 F(J,I,K) (0 2) GOSUB 1000
  Origs: 240:auto
  Dests: 243:auto, 1000:gosub
243 F(J,I,K) (0 3) GOTO 70
  Origs: 241:auto
  Dests: 70:goto
245 F(J,I,K) (0 1) NEXT J
  Origs: 237:fornext, 239:ifthen
  Dests: 248:auto
248 F(J,I,K) (0 2) GOTO 400
  Origs: 245:auto
  Dests: 400:goto
250 F(I,K) (1 3) FOR I = 1 TO 76
  Origs: 493:goto
  Dests: 251:fornext, 290:fornext
251 F(I,K) (0 6) LET L(I) = X(M(I, 1)) + X(M(I, 2)) + X(M(I, 3)) + X(M(I, 4))
  Origs: 250:fornext
  Dests: 252:auto
252 F(I,K) (0 3) LET L = L(I)
  Origs: 251:auto
  Dests: 255:auto
255 F(I,K) (1 4) IF L < 2 THEN 290
  Origs: 252:auto
  Dests: 260:auto, 290:ifthen
260 F(I,K) (1 4) IF L >= 3 THEN 290
  Origs: 255:auto
  Dests: 265:auto, 290:ifthen
265 F(I,K) (1 4) IF L > 2 THEN 1600
  Origs: 260:auto
  Dests: 270:auto, 1600:ifthen
270 F(I,J,K) (1 3) FOR J = 1 TO 4
  Origs: 265:auto
  Dests: 275:fornext, 285:fornext
275 F(I,J,K) (1 4) IF X(M(I, J)) <> 0 THEN 285
  Origs: 270:fornext
  Dests: 280:auto, 285:ifthen
280 F(I,J,K) (0 4) LET X(M(I, J)) = 1 / 8
  Origs: 275:auto
  Dests: 285:auto
285 F(I,J,K) (0 1) NEXT J
  Origs: 270:fornext, 275:ifthen, 280:auto
  Dests: 290:auto
290 F(I,K) (0 1) NEXT I
  Origs: 250:fornext, 255:ifthen, 260:ifthen, 285:auto
  Dests: 295:auto
295 F(K) (0 2) GOSUB 1050
  Origs: 290:auto
  Dests: 300:auto, 1050:gosub
300 F(I,K) (1 3) FOR I = 1 TO 76
  Origs: 295:auto
  Dests: 305:fornext, 315:fornext
305 F(I,K) (1 6) IF L(I) = 1 / 2 THEN 1700
  Origs: 300:fornext
  Dests: 310:auto, 1700:ifthen
310 F(I,K) (1 8) IF L(I) = 1 + 3 / 8 THEN 1700
  Origs: 305:auto
  Dests: 315:auto, 1700:ifthen
315 F(I,K) (0 1) NEXT I
  Origs: 300:fornext, 310:auto
  Dests: 320:auto
320 F(K) (0 2) GOTO 1300
  Origs: 315:auto
  Dests: 1300:goto
360 (0 3) LET Z = 1
  Origs: 1396:goto
  Dests: 362:auto
362 (1 4) IF X(Y(Z)) = 0 THEN 380
  Origs: 360:auto, 368:ifthen
  Dests: 365:auto, 380:ifthen
365 (0 4) LET Z = Z + 1
  Origs: 362:auto
  Dests: 368:auto
368 (1 5) IF Z <> 17 THEN 362
  Origs: 365:auto
  Dests: 362:ifthen, 375:auto
375 (0 2) GOTO 1200
  Origs: 368:auto
  Dests: 1200:goto
380 (0 3) LET M = Y(Z)
  Origs: 362:ifthen
  Dests: 381:auto
381 (0 3) LET X(M) = 5
  Origs: 380:auto
  Dests: 385:auto
385 (0 2) PRINT "MACHINE MOVES TO";
  Origs: 381:auto
  Dests: 389:auto
389 (0 2) GOSUB 1000
  Origs: 385:auto
  Dests: 390:auto, 1000:gosub
390 (0 3) GOTO 70
  Origs: 389:auto
  Dests: 70:goto
400 F(J,I,K) (0 3) LET X = X
  Origs: 207:goto, 248:goto
  Dests: 410:auto
410 F(J,I,K) (1 3) FOR I = 1 TO 76
  Origs: 400:auto
  Dests: 412:fornext, 455:fornext
412 F(J,I,K) (0 6) LET L(I) = X(M(I, 1)) + X(M(I, 2)) + X(M(I, 3)) + X(M(I, 4))
  Origs: 410:fornext
  Dests: 415:auto
415 F(J,I,K) (0 3) LET L = L(I)
  Origs: 412:auto
  Dests: 420:auto
420 F(J,I,K) (1 4) IF L < 10 THEN 455
  Origs: 415:auto
  Dests: 425:auto, 455:ifthen
425 F(J,I,K) (1 4) IF L >= 11 THEN 455
  Origs: 420:auto
  Dests: 430:auto, 455:ifthen
430 F(J,I,K) (1 4) IF L > 10 THEN 1600
  Origs: 425:auto
  Dests: 435:auto, 1600:ifthen
435 F(I,J,K) (1 3) FOR J = 1 TO 4
  Origs: 430:auto
  Dests: 440:fornext, 450:fornext
440 F(I,J,K) (1 4) IF X(M(I, J)) <> 0 THEN 450
  Origs: 435:fornext
  Dests: 445:auto, 450:ifthen
445 F(J,I,K) (0 4) LET X(M(I, J)) = 1 / 8
  Origs: 440:auto
  Dests: 450:auto
450 F(J,I,K) (0 1) NEXT J
  Origs: 435:fornext, 440:ifthen, 445:auto
  Dests: 455:auto
455 F(J,I,K) (0 1) NEXT I
  Origs: 410:fornext, 420:ifthen, 425:ifthen, 450:auto
  Dests: 470:auto
470 F(K) (0 2) GOSUB 1050
  Origs: 455:auto
  Dests: 475:auto, 1050:gosub
475 F(I,K) (1 3) FOR I = 1 TO 76
  Origs: 470:auto
  Dests: 480:fornext, 490:fornext
480 F(I,K) (1 4) IF L(I) = 0.5 THEN 1700
  Origs: 475:fornext
  Dests: 485:auto, 1700:ifthen
485 F(I,K) (1 8) IF L(I) = 5 + 3 / 8 THEN 1700
  Origs: 480:auto
  Dests: 490:auto, 1700:ifthen
490 F(I,K) (0 1) NEXT I
  Origs: 475:fornext, 485:auto
  Dests: 492:auto
492 F(K) (0 2) GOSUB 1800
  Origs: 490:auto
  Dests: 493:auto, 1800:gosub
493 F(K) (0 3) GOTO 250
  Origs: 492:auto
  Dests: 250:goto
500 F(J,I,K) (0 2) PRINT " "
  Origs: 217:goto, 234:goto, 1255:goto, 1665:goto
  Dests: 505:auto
505 F(J,I,K) (0 2) PRINT "DO YOU WANT TO TRY ANOTHER GAME";
  Origs: 500:auto
  Dests: 510:auto
510 F(J,I,K) (1 2) INPUT X$
  Origs: 505:auto, 518:goto
  Dests: 515:auto
515 F(J,I,K) (1 5) IF X$ = "YES" THEN 35
  Origs: 510:auto
  Dests: 35:ifthen, 516:auto
516 F(J,I,K) (1 4) IF X$ = "NO" THEN 520
  Origs: 515:auto
  Dests: 517:auto, 520:ifthen
517 F(J,I,K) (0 2) PRINT "INCORRECT ANSWER. PLEASE TYPE 'YES' OR 'NO'";
  Origs: 516:auto
  Dests: 518:auto
518 F(J,I,K) (0 3) GOTO 510
  Origs: 517:auto
  Dests: 510:goto
520 F(J,I,K) (0 1) STOP
    WARNING: Terminating statement in FOR/NEXT
  Origs: 516:ifthen
  Dests: :stop
1000 G(1000) (0 5) LET K1 = INT((M - 1) / 16) + 1
  Origs: 214:gosub, 226:gosub, 231:gosub, 241:gosub, 389:gosub, 1227:gosub, 1630:gosub, 1770:gosub
  Dests: 1010:auto
1010 G(1000) (0 8) LET J2 = M - 16 * (K1 - 1)
  Origs: 1000:auto
  Dests: 1030:auto
1030 G(1000) (0 5) LET K2 = INT((J2 - 1) / 4) + 1
  Origs: 1010:auto
  Dests: 1035:auto
1035 G(1000) (0 11) LET K3 = M - (K1 - 1) * 16 - (K2 - 1) * 4
  Origs: 1030:auto
  Dests: 1040:auto
1040 G(1000) (0 8) LET M = K1 * 100 + K2 * 10 + K3
  Origs: 1035:auto
  Dests: 1042:auto
1042 G(1000) (0 2) PRINT M;
  Origs: 1040:auto
  Dests: 1045:auto
1045 G(1000) (0 1) RETURN
  Origs: 1042:auto
  Dests: 
1050 G(1050) F(S) (1 3) FOR S = 1 TO 76
  Origs: 110:gosub, 295:gosub, 470:gosub
  Dests: 1060:fornext, 1110:fornext
1060 G(1050) F(S) (0 3) LET J1 = M(S, 1)
  Origs: 1050:fornext
  Dests: 1070:auto
1070 G(1050) F(S) (0 3) LET J2 = M(S, 2)
  Origs: 1060:auto
  Dests: 1080:auto
1080 G(1050) F(S) (0 3) LET J3 = M(S, 3)
  Origs: 1070:auto
  Dests: 1090:auto
1090 G(1050) F(S) (0 3) LET J4 = M(S, 4)
  Origs: 1080:auto
  Dests: 1100:auto
1100 G(1050) F(S) (0 6) LET L(S) = X(J1) + X(J2) + X(J3) + X(J4)
  Origs: 1090:auto
  Dests: 1110:auto
1110 G(1050) F(S) (0 1) NEXT S
  Origs: 1050:fornext, 1100:auto
  Dests: 1120:auto
1120 G(1050) (0 1) RETURN
  Origs: 1110:auto
  Dests: 
1200 F(I) (1 3) FOR I = 1 TO 64
  Origs: 375:goto
  Dests: 1210:fornext, 1250:fornext
1210 F(I) (1 4) IF X(I) <> 0 THEN 1250
  Origs: 1200:fornext
  Dests: 1220:auto, 1250:ifthen
1220 F(I) (0 3) LET X(I) = 5
  Origs: 1210:auto
  Dests: 1225:auto
1225 F(I) (0 3) LET M = I
  Origs: 1220:auto
  Dests: 1226:auto
1226 F(I) (0 2) PRINT "MACHINE LIKES";
  Origs: 1225:auto
  Dests: 1227:auto
1227 F(I) (0 3) GOSUB 1000
  Origs: 1226:auto
  Dests: 1000:gosub, 1228:auto
1228 F(I) (0 2) PRINT " "
  Origs: 1227:auto
  Dests: 1230:auto
1230 F(I) (0 3) GOTO 70
  Origs: 1228:auto
  Dests: 70:goto
1250 F(I) (0 1) NEXT I
  Origs: 1200:fornext, 1210:ifthen
  Dests: 1252:auto
1252 (0 2) PRINT "THE GAME IS A DRAW"
  Origs: 1250:auto
  Dests: 1255:auto
1255 (0 3) GOTO 500
  Origs: 1252:auto
  Dests: 500:goto
1300 F(K) (1 3) FOR K = 1 TO 18
  Origs: 320:goto
  Dests: 1305:fornext, 1390:fornext
1305 F(K) (0 3) LET P = 0
  Origs: 1300:fornext
  Dests: 1310:auto
1310 F(K,I) (1 6) FOR I = 4 * K - 3 TO 4 * K
  Origs: 1305:auto
  Dests: 1315:fornext, 1330:fornext
1315 F(K,I,J) (1 3) FOR J = 1 TO 4
  Origs: 1310:fornext
  Dests: 1320:fornext, 1325:fornext
1320 F(K,I,J) (0 4) LET P = P + X(M(I, J))
  Origs: 1315:fornext
  Dests: 1325:auto
1325 F(K,I,J) (0 1) NEXT J
  Origs: 1315:fornext, 1320:auto
  Dests: 1330:auto
1330 F(K,I) (0 1) NEXT I
  Origs: 1310:fornext, 1325:auto
  Dests: 1345:auto
1345 F(K) (1 4) IF P < 4 THEN 1390
  Origs: 1330:auto
  Dests: 1350:auto, 1390:ifthen
1350 F(K) (1 4) IF P < 5 THEN 1400
  Origs: 1345:auto
  Dests: 1355:auto, 1400:ifthen
1355 F(K) (1 4) IF P < 9 THEN 1390
  Origs: 1350:auto
  Dests: 1360:auto, 1390:ifthen
1360 F(K) (1 4) IF P < 10 THEN 1400
  Origs: 1355:auto
  Dests: 1390:auto, 1400:ifthen
1390 F(K) (0 1) NEXT K
  Origs: 1300:fornext, 1345:ifthen, 1355:ifthen, 1360:auto
  Dests: 1395:auto
1395 (0 2) GOSUB 1800
  Origs: 1390:auto
  Dests: 1396:auto, 1800:gosub
1396 (0 3) GOTO 360
  Origs: 1395:auto
  Dests: 360:goto
1400 F(K) (0 4) LET S = 1 / 8
  Origs: 1350:ifthen, 1360:ifthen
  Dests: 1405:auto
1405 F(K,I) (1 6) FOR I = 4 * K - 3 TO 4 * K
  Origs: 1400:auto, 1425:goto
  Dests: 1410:fornext, 1415:fornext
1410 F(K,I) (0 2) GOTO 1703
  Origs: 1405:fornext
  Dests: 1703:goto
1415 F(I,K) (0 1) NEXT I
  Origs: 1405:fornext, 1735:goto
  Dests: 1420:auto
1420 F(K) (0 3) LET S = 0
  Origs: 1415:auto
  Dests: 1425:auto
1425 F(K) (0 3) GOTO 1405
  Origs: 1420:auto
  Dests: 1405:goto
1500 (0 2) DATA 1, 49, 52, 4, 13, 61, 64, 16, 22, 39, 23, 38, 26, 42, 27, 43
  Origs: 
  Dests: 
1510 (0 2) DATA 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  Origs: 
  Dests: 
1520 (0 2) DATA 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38
  Origs: 
  Dests: 
1521 (0 2) DATA 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
  Origs: 
  Dests: 
1522 (0 2) DATA 57, 58, 59, 60, 61, 62, 63, 64
  Origs: 
  Dests: 
1523 (0 2) DATA 1, 17, 33, 49, 5, 21, 37, 53, 9, 25, 41, 57, 13, 29, 45, 61
  Origs: 
  Dests: 
1524 (0 2) DATA 2, 18, 34, 50, 6, 22, 38, 54, 10, 26, 42, 58, 14, 30, 46, 62
  Origs: 
  Dests: 
1525 (0 2) DATA 3, 19, 35, 51, 7, 23, 39, 55, 11, 27, 43, 59, 15, 31, 47, 63
  Origs: 
  Dests: 
1527 (0 2) DATA 4, 20, 36, 52, 8, 24, 40, 56, 12, 28, 44, 60, 16, 32, 48, 64
  Origs: 
  Dests: 
1529 (0 2) DATA 1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61
  Origs: 
  Dests: 
1532 (0 2) DATA 2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62
  Origs: 
  Dests: 
1534 (0 2) DATA 3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51, 55, 59, 63
  Origs: 
  Dests: 
1536 (0 2) DATA 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64
  Origs: 
  Dests: 
1538 (0 2) DATA 1, 6, 11, 16, 17, 22, 27, 32, 33, 38, 43, 48, 49, 54, 59, 64
  Origs: 
  Dests: 
1540 (0 2) DATA 13, 10, 7, 4, 29, 26, 23, 20, 45, 42, 39, 36, 61, 58, 55, 52
  Origs: 
  Dests: 
1542 (0 2) DATA 1, 21, 41, 61, 2, 22, 42, 62, 3, 23, 43, 63, 4, 24, 44, 64
  Origs: 
  Dests: 
1544 (0 2) DATA 49, 37, 25, 13, 50, 38, 26, 14, 51, 39, 27, 15, 52, 40, 28, 16
  Origs: 
  Dests: 
1546 (0 2) DATA 1, 18, 35, 52, 5, 22, 39, 56, 9, 26, 43, 60, 13, 30, 47, 64
  Origs: 
  Dests: 
1548 (0 2) DATA 49, 34, 19, 4, 53, 38, 23, 8, 57, 42, 27, 12, 61, 46, 31, 16
  Origs: 
  Dests: 
1550 (0 2) DATA 1, 22, 43, 64, 16, 27, 38, 49, 4, 23, 42, 61, 13, 26, 39, 52
  Origs: 
  Dests: 
1600 F(I,K,J) (1 3) FOR J = 1 TO 4
  Origs: 265:ifthen, 430:ifthen
  Dests: 1605:fornext, 1650:fornext
1605 F(I,K,J) (1 6) IF X(M(I, J)) <> 1 / 8 THEN 1650
  Origs: 1600:fornext
  Dests: 1610:auto, 1650:ifthen
1610 F(J,I,K) (0 3) LET X(M(I, J)) = 5
  Origs: 1605:auto
  Dests: 1615:auto
1615 F(J,I,K) (1 4) IF L(I) < 5 THEN 1625
  Origs: 1610:auto
  Dests: 1620:auto, 1625:ifthen
1620 F(J,I,K) (0 2) PRINT "LET'S SEE YOU GET OUT OF THIS! MACHINE MOVES TO";
  Origs: 1615:auto
  Dests: 1622:auto
1622 F(J,I,K) (0 2) GOTO 1626
  Origs: 1620:auto
  Dests: 1626:goto
1625 F(J,I,K) (0 2) PRINT "YOU FOX. JUST IN THE NICK OF TIME, MACHINE MOVES TO";
  Origs: 1615:ifthen
  Dests: 1626:auto
1626 F(J,I,K) (0 3) LET M = M(I, J)
  Origs: 1622:goto, 1625:auto
  Dests: 1630:auto
1630 F(J,I,K) (0 3) GOSUB 1000
  Origs: 1626:auto
  Dests: 1000:gosub, 1640:auto
1640 F(J,I,K) (0 3) GOTO 70
  Origs: 1630:auto
  Dests: 70:goto
1650 F(J,I,K) (0 1) NEXT J
  Origs: 1600:fornext, 1605:ifthen
  Dests: 1660:auto
1660 F(J,I,K) (0 2) PRINT "MACHINE CONCEDES THIS GAME."
  Origs: 1650:auto
  Dests: 1665:auto
1665 F(J,I,K) (0 3) GOTO 500
  Origs: 1660:auto
  Dests: 500:goto
1700 F(I,K) (0 4) LET S = 1 / 8
  Origs: 305:ifthen, 310:ifthen, 480:ifthen, 485:ifthen
  Dests: 1703:auto
1703 F(I,K) (1 8) IF I - INT(I / 4) * 4 > 1 THEN 1715
  Origs: 1410:goto, 1700:auto
  Dests: 1705:auto, 1715:ifthen
1705 F(I,K) (0 3) LET A = 1
  Origs: 1703:auto
  Dests: 1710:auto
1710 F(I,K) (0 2) GOTO 1720
  Origs: 1705:auto
  Dests: 1720:goto
1715 F(I,K) (0 3) LET A = 2
  Origs: 1703:ifthen
  Dests: 1720:auto
1720 F(I,K,J) (1 8) FOR J = A TO 5 - A STEP 5 - 2 * A
  Origs: 1710:goto, 1715:auto
  Dests: 1725:fornext, 1730:fornext
1725 F(I,K,J) (1 4) IF X(M(I, J)) = S THEN 1750
  Origs: 1720:fornext
  Dests: 1730:auto, 1750:ifthen
1730 F(I,K,J) (0 1) NEXT J
  Origs: 1720:fornext, 1725:auto
  Dests: 1735:auto
1735 F(I,K) (0 3) GOTO 1415
  Origs: 1730:auto
  Dests: 1415:goto
1750 F(I,K,J) (0 3) LET X(M(I, J)) = 5
  Origs: 1725:ifthen
  Dests: 1755:auto
1755 F(I,K,J) (0 3) LET M = M(I, J)
  Origs: 1750:auto
  Dests: 1760:auto
1760 F(I,K,J) (0 2) PRINT "MACHINE TAKES";
  Origs: 1755:auto
  Dests: 1770:auto
1770 F(I,K,J) (0 3) GOSUB 1000
  Origs: 1760:auto
  Dests: 1000:gosub, 1780:auto
1780 F(I,K,J) (0 3) GOTO 70
  Origs: 1770:auto
  Dests: 70:goto
1800 G(1800) F(I) (1 3) FOR I = 1 TO 64
  Origs: 85:gosub, 492:gosub, 1395:gosub
  Dests: 1810:fornext, 1850:fornext
1810 G(1800) F(I) (1 6) IF X(I) <> 1 / 8 THEN 1850
  Origs: 1800:fornext
  Dests: 1815:auto, 1850:ifthen
1815 G(1800) F(I) (0 3) LET X(I) = 0
  Origs: 1810:auto
  Dests: 1850:auto
1850 G(1800) F(I) (0 1) NEXT I
  Origs: 1800:fornext, 1810:ifthen, 1815:auto
  Dests: 1860:auto
1860 G(1800) (0 1) RETURN
  Origs: 1850:auto
  Dests: 
2000 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

2000: END

