Statistics:

Number of lines: 65
Number of valid statements: 85
Number of comments: 1
Number of executable statements: 85

Complexity:

Comment density: 0.012
Comprehension effort: 340
McCabe complexity: 32
Halstead complexity:
 length: 497
 volume: 2278.729
 difficulty: 55.268
 effort: 125941.050
 language: 0.746
 intelligence: 41.230
 time: 116.612

1 (0 1) REM LIFE CLARK BAKER 3/72 C.O.G.
  Origs: 
  Dests: 
2 (0 8) PRINT CHR$(31%); CHR$(29%); CHR$(31%); "ENTER YOUR PATTERN:"
  Origs: :start
  Dests: 3:auto
3 (0 3) X1%, Y1% = 1
  (0 3) X2% = 24%
  (0 3) Y2% = 70%
  WARNING: Target type (integer) does not match expression type (numeric).
  WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 2:auto
  Dests: 10:auto
10 (0 3) DIM A%(24%, 70%), B$(24%)
  Origs: 3:auto
  Dests: 20:auto
20 (0 1) OPEN "KB:" AS FILE 1
   ERROR: Syntax error
  Origs: 10:auto
  Dests: 30:auto
30 (1 2) ON ERROR GOTO 80
  Origs: 20:auto
  Dests: 40:auto, 80:onerror
40 (0 3) C% = 1
   WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 30:auto
  Dests: 50:auto
50 (1 2) INPUT LINE #1, B$(C%)
   (0 4) B$(C%) = LEFT(B$(C%), LEN(B$(C%)) - 2%)
  Origs: 40:auto, 70:goto
  Dests: 60:auto
60 (0 4) C% = C% + 1
   WARNING: Type mismatch integer + numeric
   WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 50:auto
  Dests: 70:auto
70 (0 3) GOTO 50
  Origs: 60:auto
  Dests: 50:goto
80 E(80) (0 3) L% = 0%
  Origs: 30:onerror
  Dests: 90:auto
90 E(80) F(X%) (1 4) FOR X% = 1 TO C% - 1
  Origs: 80:auto
  Dests: 100:fornext, 110:fornext
100 E(80) F(X%) (1 8) IF LEN(B$(X%)) >= L% THEN L% = LEN(B$(X%))
    WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 90:fornext
  Dests: 110:auto
110 E(80) F(X%) (0 1) NEXT X%
  Origs: 90:fornext, 100:auto
  Dests: 120:auto
120 E(80) (0 6) X1% = 11% - C% / 2%
  Origs: 110:auto
  Dests: 130:auto
130 E(80) (0 6) Y1% = 33% - L% / 2%
  Origs: 120:auto
  Dests: 140:auto
140 E(80) F(X%) (1 3) FOR X% = 1 TO C%
  Origs: 130:auto
  Dests: 150:fornext, 180:fornext
150 E(80) F(X%,Y%) (1 4) FOR Y% = 1 TO LEN(B$(X%))
  Origs: 140:fornext
  Dests: 160:fornext, 170:fornext
160 E(80) F(X%,Y%) (1 7) IF MID(B$(X%), Y%, 1) <> " " THEN A%(X1% + X%, Y1% + Y%) = 1
    E(80) F(X%,Y%) (0 4) P% = P% + 1
    WARNING: Target type (integer) does not match expression type (numeric).
    WARNING: Type mismatch integer + numeric
    WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 150:fornext
  Dests: 170:auto
170 E(80) F(X%,Y%) (0 1) NEXT Y%
  Origs: 150:fornext, 160:auto
  Dests: 180:auto
180 E(80) F(X%) (0 1) NEXT X%
  Origs: 140:fornext, 170:auto
  Dests: 200:auto
200 E(80) (0 5) PRINT CHR$(29%); CHR$(30%);
  Origs: 180:auto
  Dests: 210:auto
210 E(80) (0 7) PRINT "GENERATION:"; G%, "POPULATION:"; P%; CHR$(30%);
    E(80) (1 5) IF I9% THEN PRINT, "INVALID!";
  Origs: 200:auto, 640:goto
  Dests: 215:auto
215 E(80) (0 3) X3% = 24%
    E(80) (0 3) Y3% = 70%
    E(80) (0 3) X4%, Y4% = 1
    E(80) (0 3) P% = 0%
    WARNING: Target type (integer) does not match expression type (numeric).
    WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 210:auto
  Dests: 220:auto
220 E(80) (0 4) G% = G% + 1%
  Origs: 215:auto
  Dests: 225:auto
225 E(80) (0 7) PRINT CHR$(13%); CHR$(10%); CHR$(30%);
(1 1)       FOR X% = 1 TO X1%
(0 1)       NEXT X%
  Origs: 220:auto
  Dests: 230:auto
230 E(80) F(X%) (1 3) FOR X% = X1% TO X2%
  Origs: 225:auto
  Dests: 240:fornext, 290:fornext
240 E(80) F(X%) (0 2) PRINT
  Origs: 230:fornext
  Dests: 250:auto
250 E(80) F(X%,Y%) (1 3) FOR Y% = Y1% TO Y2%
  Origs: 240:auto
  Dests: 253:fornext, 270:fornext
253 E(80) F(X%,Y%) (1 6) IF A%(X%, Y%) = 2% THEN A%(X%, Y%) = 0%
    E(80) F(X%,Y%) (0 2) GOTO 270
  Origs: 250:fornext
  Dests: 256:auto, 270:goto
256 E(80) F(X%,Y%) (1 6) IF A%(X%, Y%) = 3% THEN A%(X%, Y%) = 1%
    E(80) F(X%,Y%) (0 2) GOTO 261
  Origs: 253:auto
  Dests: 260:auto, 261:goto
260 E(80) F(X%,Y%) (1 4) IF A%(X%, Y%) <> 1 THEN 270
  Origs: 256:auto
  Dests: 261:auto, 270:ifthen
261 E(80) F(X%,Y%) (0 4) PRINT TAB(Y%); "*";
  Origs: 256:goto, 260:auto
  Dests: 262:auto
262 E(80) F(X%,Y%) (1 6) IF X% < X3% THEN X3% = X%
  Origs: 261:auto
  Dests: 264:auto
264 E(80) F(X%,Y%) (1 6) IF X% > X4% THEN X4% = X%
  Origs: 262:auto
  Dests: 266:auto
266 E(80) F(X%,Y%) (1 6) IF Y% < Y3% THEN Y3% = Y%
  Origs: 264:auto
  Dests: 268:auto
268 E(80) F(X%,Y%) (1 6) IF Y% > Y4% THEN Y4% = Y%
  Origs: 266:auto
  Dests: 270:auto
270 E(80) F(X%,Y%) (0 1) NEXT Y%
  Origs: 250:fornext, 253:goto, 260:ifthen, 268:auto
  Dests: 280:auto
280 E(80) F(X%) (0 3) PRINT CHR$(30%);
  Origs: 270:auto
  Dests: 290:auto
290 E(80) F(X%) (0 1) NEXT X%
  Origs: 230:fornext, 280:auto
  Dests: 295:auto
295 E(80) (0 3) PRINT CHR$(30%)
(1 1)       FOR X% = X2% + 1 TO 24%
(0 1)       NEXT X%
  Origs: 290:auto
  Dests: 298:auto
298 E(80) (0 3) PRINT CHR$(29%);
  Origs: 295:auto
  Dests: 299:auto
299 E(80) (0 3) X1% = X3%
    E(80) (0 3) X2% = X4%
    E(80) (0 3) Y1% = Y3%
    E(80) (0 3) Y2% = Y4%
  Origs: 298:auto
  Dests: 301:auto
301 E(80) (1 6) IF X1% < 3% THEN X1% = 3%
    E(80) (0 4) I9% = -1%
  Origs: 299:auto
  Dests: 303:auto
303 E(80) (1 6) IF X2% > 22% THEN X2% = 22%
    E(80) (0 4) I9% = -1%
  Origs: 301:auto
  Dests: 305:auto
305 E(80) (1 6) IF Y1% < 3% THEN Y1% = 3%
    E(80) (0 4) I9% = -1%
  Origs: 303:auto
  Dests: 307:auto
307 E(80) (1 6) IF Y2% > 68% THEN Y2% = 68%
    E(80) (0 4) I9% = -1%
  Origs: 305:auto
  Dests: 309:auto
309 E(80) (0 3) P% = 0%
  Origs: 307:auto
  Dests: 500:auto
500 E(80) F(X%) (1 5) FOR X% = X1% - 1 TO X2% + 1
  Origs: 309:auto
  Dests: 510:fornext, 630:fornext
510 E(80) F(X%,Y%) (1 5) FOR Y% = Y1% - 1 TO Y2% + 1
  Origs: 500:fornext
  Dests: 520:fornext, 620:fornext
520 E(80) F(X%,Y%) (0 3) C% = 0%
  Origs: 510:fornext
  Dests: 530:auto
530 E(80) F(X%,Y%,I%) (1 5) FOR I% = X% - 1% TO X% + 1%
  Origs: 520:auto
  Dests: 540:fornext, 570:fornext
540 E(80) F(X%,Y%,I%,J%) (1 5) FOR J% = Y% - 1% TO Y% + 1%
  Origs: 530:fornext
  Dests: 550:fornext, 560:fornext
550 E(80) F(X%,Y%,I%,J%) (1 10) IF A%(I%, J%) = 1% OR A%(I%, J%) = 2% THEN C% = C% + 1%
  Origs: 540:fornext
  Dests: 560:auto
560 E(80) F(X%,Y%,I%,J%) (0 1) NEXT J%
  Origs: 540:fornext, 550:auto
  Dests: 570:auto
570 E(80) F(X%,Y%,I%) (0 1) NEXT I%
  Origs: 530:fornext, 560:auto
  Dests: 580:auto
580 E(80) F(X%,Y%) (1 4) IF A%(X%, Y%) = 0% THEN 610
  Origs: 570:auto
  Dests: 590:auto, 610:ifthen
590 E(80) F(X%,Y%) (1 13) IF C% < 3% OR C% > 4% THEN A%(X%, Y%) = 2% ELSE P% = P% + 1
    WARNING: Type mismatch integer + numeric
    WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 580:auto
  Dests: 600:auto
600 E(80) F(X%,Y%) (0 2) GOTO 620
  Origs: 590:auto
  Dests: 620:goto
610 E(80) F(X%,Y%) (1 6) IF C% = 3% THEN A%(X%, Y%) = 3%
    E(80) F(X%,Y%) (0 4) P% = P% + 1
    WARNING: Type mismatch integer + numeric
    WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 580:ifthen
  Dests: 620:auto
620 E(80) F(X%,Y%) (0 1) NEXT Y%
  Origs: 510:fornext, 600:goto, 610:auto
  Dests: 630:auto
630 E(80) F(X%) (0 1) NEXT X%
  Origs: 500:fornext, 620:auto
  Dests: 635:auto
635 E(80) (0 4) X1% = X1% - 1
    E(80) (0 4) Y1% = Y1% - 1
    E(80) (0 4) X2% = X2% + 1
    E(80) (0 4) Y2% = Y2% + 1
    WARNING: Type mismatch integer - numeric
    WARNING: Target type (integer) does not match expression type (numeric).
    WARNING: Type mismatch integer - numeric
    WARNING: Target type (integer) does not match expression type (numeric).
    WARNING: Type mismatch integer + numeric
    WARNING: Target type (integer) does not match expression type (numeric).
    WARNING: Type mismatch integer + numeric
    WARNING: Target type (integer) does not match expression type (numeric).
  Origs: 630:auto
  Dests: 640:auto
640 E(80) (0 3) GOTO 210
  Origs: 635:auto
  Dests: 210:goto
650 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

650: END

