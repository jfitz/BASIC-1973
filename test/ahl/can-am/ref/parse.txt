100 ' CAN-AM*** (BASIC PROGRAM BEGINS AT LINE 610) WAS PROGRAMMED BY MARK
 WARNING: Line exceeds PRETTY width limit 72
110 ' MANASSE, TO REPLACE THE AILING VERSION HE WROTE AS A SIXTH GRADER
120 ' AT HANOVER ELEMENTARY SCHOOL.
130 ' LAST CHANGE 12/27/72 BY DIANE MATHER, KIEWIT
140 '
150 ' DESCRIPTION  THE PROGRAM ALLOWS YOU TO RACE AROUND A HIGHLY
160 ' PERILOUS COURSE, RISKING BOTH LIFE AND MACHINE, IN AN
170 ' EFFORT TO RACE FRIENDS OR THE COMPUTER'S VERY OWN SLOW-
180 ' POKE SLIM, WILDMAN WILLY, AND HOTSHOT HARRY
190 '
200 ' INSTRUCTIONS--
210 ' YOU ARE ABOUT TO RACE. RACE ON ONE OF THE FASTEST COURSES
220 ' IN THE WORLD. A ROAD COURSE. A LONG ONE. 5.3 MILES. SPEEDS
230 ' UP TO 200 MPH. YOU CAN RACE FRIENDS(?) OR THE COMPUTER.
240 ' TO RACE THE COMPUTER, TYPE THE SEQUENCE:
250 '
260 ' /OLD CAN-AM***/RUN
270 '
280 ' TO RACE FRIENDS, TYPE:
290 '
300 ' /OLD CAN-AM***/LINK <KEYWORD>,N
310 '
320 ' REPLACE <KEYWORD> WITH ANY WORD OF LENGTH 1 THROUGH 8 INCLUSIVE
330 ' THAT YOU CHOOSE. REPLACE N WITH THE NUMBER OF PLAYERS COUNTING
340 ' YOURSELF. HAVE YOUR FRIENDS TYPE:
350 '
360 ' JOIN <KEYWORD>
370 '
380 ' <KEYWORD> SHOULD BE THE KEYWORD YOU USED IN THE 'LINK' COMMAND
390 ' 
400 ' WHEN THE COMPUTER TYPES A QUESTION OF THE FORM
410 '    STRAIGHT A?      OR      CURVE 1:
420 ' RESPOND BY TYPING THE SPEED (IN MPH) YOU DESIRE TO TRAVEL AT,
430 ' AND HIT THE RETURN KEY. GOOD LUCK. YOU MAY NEED IT.
440 '
450 ' IF YOU ARE USING A TERMINAL WITH BOTH UPPER AND LOWERCASE, TYPE
460 ' WORD ANSWERS (SUCH AS YES OR NO) IN CAPITAL LETTERS.
470 '
480 ' TO STOP THIS LISTING, PRESS THE 'S' OR 'ATTN' KEY.
490 '
500 ' FOR MORE INFORMATION ON MULTIPLE-TERMINAL PROGRAMMING, (AS
510 ' WHEN SEVERAL PEOPLE RACE EACH OTHER), SEE TM009 WHICH IS
520 ' AVAILABLE FROM THE KIEWIT DOCUMENT CENTER (SECRETARIAL AREA),
530 ' KIEWIT COMPUTATION CENTER, HANOVER, N. H. 03755, PHONE
540 ' (603) 645-2643.
550 '
560 ' EXPLANATION OF CHANGES--
570 '    12/27/72  TO REWORD INSTRUCTIONS.
580 '
590 '* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 WARNING: Line exceeds PRETTY width limit 72
600
610 REM   PLEASE REFER ALL BUGS OR COMMENTS TO DIANE
 Remark:  PLEASE REFER ALL BUGS OR COMMENTS TO DIANE
620 REM   MATHER, PROGRAM LIBRARIAN, 105 KIEWIT
 Remark:  MATHER, PROGRAM LIBRARIAN, 105 KIEWIT
630
640 LET O(0)=2                          'STANDARD MOTIF HEADER 
 NumericValue:0
 Variable:O(.) -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
650 LET O(1) = ASC(SOH)
 NumericValue:1
 Variable:O(.) -> .
 TextValue:""
 FunctionAscii:ASC($) -> =.
 AssignmentOperator:= =. -> .
660 LET O(2) = ASC("N")
 NumericValue:2
 Variable:O(.) -> .
 TextValue:"N"
 FunctionAscii:ASC($) -> =.
 AssignmentOperator:= =. -> .
670 CHANGE O TO O1$
 Variable:O() -> .()
 Variable:O1$ -> $
680 LET O(2) = ASC("Q")
 NumericValue:2
 Variable:O(.) -> .
 TextValue:"Q"
 FunctionAscii:ASC($) -> =.
 AssignmentOperator:= =. -> .
690 CHANGE O TO O$
 Variable:O() -> .()
 Variable:O$ -> $
700 PRINT O1$;O$;CHR$(13);"XX ARE YOU FAMILIAR WITH THE WAY THIS GAME WORKS'";
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:O1$ -> $
 CarriageControl:;
 Variable:O$ -> $
 CarriageControl:;
 NumericValue:13
 FunctionChr:CHR$(.) -> =$
 CarriageControl:;
 TextValue:"XX ARE YOU FAMILIAR WITH THE WAY THIS GAME WORKS'"
 CarriageControl:;
710 DATA "NON","OUI","PARLEZ-VOUS ANGLAIS ?","NEIN","JA","SPRECHEN SIE ENGLISCH?"
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"NON"
 TextValue:"OUI"
 TextValue:"PARLEZ-VOUS ANGLAIS ?"
 TextValue:"NEIN"
 TextValue:"JA"
 TextValue:"SPRECHEN SIE ENGLISCH?"
720 DATA "NOPE","YUP","COMPUTERS ARE SOPHISTICATED MACHINES. USE APPROPRIATE LANGUAGE."
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"NOPE"
 TextValue:"YUP"
 TextValue:"COMPUTERS ARE SOPHISTICATED MACHINES. USE APPROPRIATE LANGUAGE."
730 LET K9=5                            'TWICE NUMBER OF KNOWN LANGUAGES 
 Variable:K9 -> .
 NumericValue:5
 AssignmentOperator:= =. -> .
740 FOR X=1 TO K9-1 STEP 2
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:K9 -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
 step:    ["NumericValue:2"]
750      READ F$(X),F$(X+1),R$((X-1)/2+1)
 Variable:X -> .
 Variable:F$(.) -> $
 Variable:X -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:F$(.) -> $
 Variable:X -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:R$(.) -> $
760 NEXT X
 Variable:X -> .
770 REM WE HAVE JUST LEARNED FOREIGN LANGUAGES
 Remark:WE HAVE JUST LEARNED FOREIGN LANGUAGES
780 DATA "WILDMAN WILLY", "HOTSHOT HARRY", "SLOWPOKE SAM" 'NAMES OF DRIVERS WHO COMPETE AGAINST ONLY ONE PERSON. (AUTO-PILOTS)
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"WILDMAN WILLY"
 TextValue:"HOTSHOT HARRY"
 TextValue:"SLOWPOKE SAM"
790 MAT READ Q$(3)                      'NAME ARRAY
 NumericValue:3
 Variable:Q$(.) -> $(,)
800 DATA -2.9,-2.9,-5                   'AMT. SPEED TO BE SUBTRACTED FROM AUTO-PILOT* SPEEDS
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:2.9
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:2.9
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:5
 UnaryOperatorMinus:-(.) -> =.
810 MAT READ Q(3)
 NumericValue:3
 Variable:Q(.) -> .(,)
820 MAT READ M$(3)                      'READ NAMES OF TYPES OF ROADWAY
 NumericValue:3
 Variable:M$(.) -> $(,)
830 READ X$                             'DEATH MESSAGE
 Variable:X$ -> $
840 INPUT A$                            'RESPONSE TO DO YOU KNOW WHAT YOU'RE DOING?
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:A$ -> $
850 IF A$>"09" THEN 890                 'IF BETWEEN 01 AND 09, THEN MULTI-TERMINAL 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:A$ -> $
 TextValue:"09"
 BinaryOperatorGreater:>($,$) -> ?
 LineNumber:890
860 IF A$<"01" THEN 890
 Variable:A$ -> $
 TextValue:"01"
 BinaryOperatorLess:<($,$) -> ?
 LineNumber:890
870 LET O9 = VAL(A$)
 Variable:O9 -> .
 Variable:A$ -> $
 FunctionVal:VAL($) -> .
 AssignmentOperator:= . -> .
880 GOTO 960
 LineNumber:960
890 LET O$=""                           'SET THINGS UP FOR SINGLE TERMINAL
 Variable:O$ -> $
 TextValue:""
 AssignmentOperator:= =$ -> $
900 GOSUB 2190
 LineNumber:2190
910 IF A$="NO" THEN 1070
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1070
920 PRINT "RATE YOURSELF AS A DRIVER.  (1-BEST,3-WORST )";
 TextValue:"RATE YOURSELF AS A DRIVER.  (1-BEST,3-WORST )"
 CarriageControl:;
930 INPUT O
 Variable:O -> .
940 LET Q(3)=Q(3)*O
 NumericValue:3
 Variable:Q(.) -> .
 NumericValue:3
 Variable:Q(.) -> .
 Variable:O -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
950 GOTO 1050
 LineNumber:1050
960 LET O(2) = ASC(A)                   'CREATE O$ ARRAY FOR MULTI-TERMINAL
 NumericValue:2
 Variable:O(.) -> .
 Variable:A -> .
 FunctionAscii:ASC(.) -> .
 AssignmentOperator:= . -> .
980 FOR I = O TO O9
 control: Variable:I -> .
 start:   ["Variable:O -> ."]
 end:     ["Variable:O9 -> ."]
990      LET O(2) = ASC(C) + I
 NumericValue:2
 Variable:O(.) -> .
 Variable:C -> .
 FunctionAscii:ASC(.) -> .
 Variable:I -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1000      CHANGE O TO O$(I)
 Variable:O() -> .()
 Variable:I -> .
 Variable:O$(.) -> $
1010 NEXT I
 Variable:I -> .
1020 PRINT O$(10);"YOU MAY 'DRAFT' (SLIPSTREAM) OFF-OF ANY CAR AHEAD"
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"YOU MAY 'DRAFT' (SLIPSTREAM) OFF-OF ANY CAR AHEAD"
 CarriageControl:NL
1030 PRINT "OF YOU. (BUT NOT MORE THAN 1 SECOND AHEAD). TO DO THIS"
 TextValue:"OF YOU. (BUT NOT MORE THAN 1 SECOND AHEAD). TO DO THIS"
 CarriageControl:NL
1040 PRINT "TYPE HIS CAR NUMBER+1000 AS YOUR SPEED."
 TextValue:"TYPE HIS CAR NUMBER+1000 AS YOUR SPEED."
 CarriageControl:NL
1050 RANDOMIZE
 
1060 IF A$="YES" THEN 1110
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1110
1070 PRINT O$(0)
 NumericValue:0
 Variable:O$(.) -> $
 CarriageControl:NL
1080 PRINT "FOR INSTRUCTIONS, PLEASE TYPE LIST AFTER THE COMPUTER SAYS READY."
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"FOR INSTRUCTIONS, PLEASE TYPE LIST AFTER THE COMPUTER SAYS READY."
 CarriageControl:NL
1090 PRINT
 CarriageControl:NL
1100 IF A$="NO" THEN 2290
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2290
1110 LET F2=INT(RND*10)+6
 Variable:F2 -> .
 FunctionRnd:RND -> .
 NumericValue:10
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 NumericValue:6
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1120 FOR A=0 TO O9 'ASSIGN NUMBERS AND ADHESION FACTORS 
 control: Variable:A -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:O9 -> ."]
1130       PRINT O$(A);"YOUR DRIVING NUMBER IS" ;F2*(A+1)+A 'ADHESION FACTOR IS HOW WELL YOUR CAR GRIPS THE ROAD
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:A -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"YOUR DRIVING NUMBER IS"
 CarriageControl:;
 Variable:F2 -> .
 Variable:A -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:A -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:NL
1140       LET A(R)=RND*.05+.05
 Variable:R -> .
 Variable:A(.) -> .
 FunctionRnd:RND -> .
 NumericValue:.05
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:.05
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1150       PRINT O$(A);"ADHESION FACTOR"; A(A)*100-5;".  (THE LOWER THE BETTER)"
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:A -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"ADHESION FACTOR"
 CarriageControl:;
 Variable:A -> .
 Variable:A(.) -> .
 NumericValue:100
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:5
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:;
 TextValue:".  (THE LOWER THE BETTER)"
 CarriageControl:NL
1160 NEXT A
 Variable:A -> .
1170 PRINT O$(10);"YOUR MAX. SPEED IS 200 MPH. TO SEE STANDINGS INPUT"
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"YOUR MAX. SPEED IS 200 MPH. TO SEE STANDINGS INPUT"
 CarriageControl:NL
1180 PRINT "0 AS YOUR SPEED"
 TextValue:"0 AS YOUR SPEED"
 CarriageControl:NL
1190 PRINT O$(0);"WOULD YOU LIKE TO SEE THE COURSE";CHR$(63*SGN(O9));O$; 'PRINT ? IF MULTI-TERM, OTHERWISE DON'T
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:0
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"WOULD YOU LIKE TO SEE THE COURSE"
 CarriageControl:;
 NumericValue:63
 Variable:O9 -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionChr:CHR$(.) -> $
 CarriageControl:;
 Variable:O$ -> $
 CarriageControl:;
1200 MAT INPUT A$
 Variable:A$() -> $()
1210 PRINT O$(10);
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
1220 LET A$=A$(NUM)
 Variable:A$ -> $
 FunctionNum:NUM -> .
 Variable:A$(.) -> $
 AssignmentOperator:= $ -> $
1230 GOSUB 2190
 LineNumber:2190
1240 IF A$="NO" THEN 1450
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:1450
1250 IF A$<>"YES" THEN 1190
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:1190
1260 PRINTTAB(4);"--------------" 'PRINT COURSE
 NumericValue:4
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"--------------"
 CarriageControl:NL
1270 PRINTTAB(3);"/1";TAB(11);"B";TAB(19);"2\"
 NumericValue:3
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"/1"
 CarriageControl:;
 NumericValue:11
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"B"
 CarriageControl:;
 NumericValue:19
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"2\"
 CarriageControl:NL
1280 PRINTTAB(2);"/A";TAB(20);"C\"
 NumericValue:2
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"/A"
 CarriageControl:;
 NumericValue:20
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"C\"
 CarriageControl:NL
1290 PRINTTAB(1);"/";TAB(22);"\"
 NumericValue:1
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"/"
 CarriageControl:;
 NumericValue:22
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"\"
 CarriageControl:NL
1300 PRINT "/";TAB(21);"3I"
 TextValue:"/"
 CarriageControl:;
 NumericValue:21
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"3I"
 CarriageControl:NL
1310 PRINT "^-START*FINISH";TAB(22);"I"
 TextValue:"^-START*FINISH"
 CarriageControl:;
 NumericValue:22
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"I"
 CarriageControl:NL
1320 PRINT "^";TAB(22);"I"
 TextValue:"^"
 CarriageControl:;
 NumericValue:22
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"I"
 CarriageControl:NL
1330 PRINT "^";TAB(21);"DI"
 TextValue:"^"
 CarriageControl:;
 NumericValue:21
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"DI"
 CarriageControl:NL
1340 PRINT "^";TAB(22);"I"
 TextValue:"^"
 CarriageControl:;
 NumericValue:22
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"I"
 CarriageControl:NL
1350 PRINT "^";TAB(22);"I"
 TextValue:"^"
 CarriageControl:;
 NumericValue:22
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"I"
 CarriageControl:NL
1360 PRINT "^H";TAB(22);"I"
 TextValue:"^H"
 CarriageControl:;
 NumericValue:22
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"I"
 CarriageControl:NL
1370 PRINT "^";TAB(22);"I"
 TextValue:"^"
 CarriageControl:;
 NumericValue:22
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"I"
 CarriageControl:NL
1380 PRINT "^";TAB(21);"4I"
 TextValue:"^"
 CarriageControl:;
 NumericValue:21
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"4I"
 CarriageControl:NL
1390 PRINT "^";TAB(16);"______/"
 TextValue:"^"
 CarriageControl:;
 NumericValue:16
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"______/"
 CarriageControl:NL
1400 PRINT"^8";TAB(15);"T5 E"
 TextValue:"^8"
 CarriageControl:;
 NumericValue:15
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"T5 E"
 CarriageControl:NL
1410 PRINT "^";TAB(16);"\"
 TextValue:"^"
 CarriageControl:;
 NumericValue:16
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"\"
 CarriageControl:NL
1420 PRINT "\";TAB(17);"-------------)";CHR$(13);TAB(20);"/PITS\"
 TextValue:"\"
 CarriageControl:;
 NumericValue:17
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"-------------)"
 CarriageControl:;
 NumericValue:13
 FunctionChr:CHR$(.) -> =$
 CarriageControl:;
 NumericValue:20
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"/PITS\"
 CarriageControl:NL
1430 PRINT " \7";TAB(14);"G";TAB(21);"F^";TAB(27);"EI"
 TextValue:" \7"
 CarriageControl:;
 NumericValue:14
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"G"
 CarriageControl:;
 NumericValue:21
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"F^"
 CarriageControl:;
 NumericValue:27
 FunctionTab:TAB(.) -> $
 CarriageControl:;
 TextValue:"EI"
 CarriageControl:NL
1440 PRINT"  \_________________________/"
 TextValue:"  \_________________________/"
 CarriageControl:NL
1450 LET N=RND*3+1 
 Variable:N -> .
 FunctionRnd:RND -> .
 NumericValue:3
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1460 PRINT"NOTE: THIS IS A";INT(N);"LAP RACE."
 TextValue:"NOTE: THIS IS A"
 CarriageControl:;
 Variable:N -> .
 FunctionInt:INT(.) -> .
 CarriageControl:;
 TextValue:"LAP RACE."
 CarriageControl:NL
1470 PRINT"GENTLEMEN, START YOUR ENGINES! THE GREEN GOES DOWN AND"
 TextValue:"GENTLEMEN, START YOUR ENGINES! THE GREEN GOES DOWN AND"
 CarriageControl:NL
1480 PRINT"OFF YOU GO!"
 TextValue:"OFF YOU GO!"
 CarriageControl:NL
1490 DATA "STRAIGHT", "HAIRPIN", "CURVE"
 TextValue:"STRAIGHT"
 TextValue:"HAIRPIN"
 TextValue:"CURVE"
1500 DATA "MAY I SHOW YOU TO A PLOT? WE HAVE A NICE CHOICE OF HEADSTONES."
 TextValue:"MAY I SHOW YOU TO A PLOT? WE HAVE A NICE CHOICE OF HEADSTONES."
1510 LET O=-1
 Variable:O -> .
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
1520 LET H=INT(N)
 Variable:H -> .
 Variable:N -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
1530 FOR V=1 TO N                      'WORKING PORTION
 control: Variable:V -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
1540       LET Y=FNA(M$(1),200,1,3/10,65) 'STRAIGHT R, 200 MAX., 3/10 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:1
 Variable:M$(.) -> $
 NumericValue:200
 NumericValue:1
 NumericValue:3
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:65
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1550       LET Y=FNA(M$(3),125,1,1/10,49) 'CURVE 1, 125 MAX., 1/10 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:3
 Variable:M$(.) -> $
 NumericValue:125
 NumericValue:1
 NumericValue:1
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:49
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1560       LET Y=FNA(M$(1),200,2,13/20,65) 'STRAIGHT 3, 200 MAX., 13/20 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:1
 Variable:M$(.) -> $
 NumericValue:200
 NumericValue:2
 NumericValue:13
 NumericValue:20
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:65
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1570       LET Y=FNA(M$(3),125,1,1/10,50) 'CURVE 2, 125 MAX., 1/10 NILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:3
 Variable:M$(.) -> $
 NumericValue:125
 NumericValue:1
 NumericValue:1
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:50
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1580       LET Y=FNR(M$(1),200,1,1/5,67) 'STRAIGHT C, 200 MAX., 1/5 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:1
 Variable:M$(.) -> $
 NumericValue:200
 NumericValue:1
 NumericValue:1
 NumericValue:5
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:67
 UserFunction:FNR($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1590       LET Y=FNA(M$(3),150,1,3/20,51) 'CURVE 3, 150 MAX., 3/20 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:3
 Variable:M$(.) -> $
 NumericValue:150
 NumericValue:1
 NumericValue:3
 NumericValue:20
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:51
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1600       LET Y=FNA(M$(1),200,2,3/5,68) 'STRAIGHT D, 200 MAX,, 3/5 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:1
 Variable:M$(.) -> $
 NumericValue:200
 NumericValue:2
 NumericValue:3
 NumericValue:5
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:68
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1610       LET Y=FNA(M$(3),125,1,1/10,52) 'CURVE 4, 125 MAX., 1/10 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:3
 Variable:M$(.) -> $
 NumericValue:125
 NumericValue:1
 NumericValue:1
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:52
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1620       LET Y=FNA(M$(1),200,1,1/4,69) 'STRAIGHT E, 200 MAX., 1/4 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:1
 Variable:M$(.) -> $
 NumericValue:200
 NumericValue:1
 NumericValue:1
 NumericValue:4
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:69
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1630       LET Y=FNA(M$(2),100,.75,3/20,53) 'HAIRPIN 5, 100 MAX., 3/20 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:2
 Variable:M$(.) -> $
 NumericValue:100
 NumericValue:.75
 NumericValue:3
 NumericValue:20
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:53
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1640       LET Y=FNA(M$(1),200,1.5,9/20,70) 'STRAIGHT F, 200 MAX., 9/20 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:1
 Variable:M$(.) -> $
 NumericValue:200
 NumericValue:1.5
 NumericValue:9
 NumericValue:20
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:70
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1650       LET Y=FNA(M$(2),100,.75,3/20,54) 'HAIRPIN 5, 100 MAX., 3/20 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:2
 Variable:M$(.) -> $
 NumericValue:100
 NumericValue:.75
 NumericValue:3
 NumericValue:20
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:54
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1660       LET Y=FNA(M$(1),200,2,1,71) 'STRAIGHT G, 200 MAX., 1 MILE LONG 
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:1
 Variable:M$(.) -> $
 NumericValue:200
 NumericValue:2
 NumericValue:1
 NumericValue:71
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1670       LET Y=FNA(M$(3),125,1,1/10,55) 'CURVE 7, 125 MAX., 1/10 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:3
 Variable:M$(.) -> $
 NumericValue:125
 NumericValue:1
 NumericValue:1
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:55
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1680       LET Y=FNA(M$(3),150,1,3/20,56) 'CURVE 8, 150 MAX., 3/20 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:3
 Variable:M$(.) -> $
 NumericValue:150
 NumericValue:1
 NumericValue:3
 NumericValue:20
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:56
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1690       LET Y=FNA(M$(1),200,2,7/10,72) 'STRAIGHT H, 20C MAX., 7/10 MILE LONG 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Y -> .
 NumericValue:1
 Variable:M$(.) -> $
 NumericValue:200
 NumericValue:2
 NumericValue:7
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:72
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1700       IF V = H THEN 1740
 Variable:V -> .
 Variable:H -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1740
1710       LET Y=FNA("START-FINISH (CURVE 9)",150,1,3/20,127)
 Variable:Y -> .
 TextValue:"START-FINISH (CURVE 9)"
 NumericValue:150
 NumericValue:1
 NumericValue:3
 NumericValue:20
 BinaryOperatorDivide:/(.,.) -> =.
 NumericValue:127
 UserFunction:FNA($,.,.,.,.) -> .
 AssignmentOperator:= . -> .
1720       REM        NAME OF TRACK          ,MAX,#,LEN ,ASC
 Remark:       NAME OF TRACK          ,MAX,#,LEN ,ASC
1730       REM        START-FINISH, 150 MAX., 3/20 MILE LONG
 Remark:       START-FINISH, 150 MAX., 3/20 MILE LONG
1740 NEXT V
 Variable:V -> .
1750 IF G1=1 THEN 2040                  'ALL DEAD?
 Variable:G1 -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2040
1760 PRINT O$(10);"DO YOU MEAN THAT EVERYONE ISN'T DEAD? WELL, HERE ARE " 'NO, SO PRINT OUT RESULTS OF RACE
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"DO YOU MEAN THAT EVERYONE ISN'T DEAD? WELL, HERE ARE "
 CarriageControl:NL
1770 PRINT"THE RESULTS STRAIGHT FROM THE CHECKERED FLAG:"
 TextValue:"THE RESULTS STRAIGHT FROM THE CHECKERED FLAG:"
 CarriageControl:NL
1780 LET W=1E+37
 Variable:W -> .
 NumericValue:1E+37
 AssignmentOperator:= =. -> .
1790 IF O9=0 THEN 1820
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1820
1800 LET G5=O9
 Variable:G5 -> .
 Variable:O9 -> .
 AssignmentOperator:= . -> .
1810 GOTO 1830
 LineNumber:1830
1820 LET G5=3
 Variable:G5 -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
1830 FOR Z=G TO G5
 control: Variable:Z -> .
 start:   ["Variable:G -> ."]
 end:     ["Variable:G5 -> ."]
1840      IF O9>0 THEN 1380
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1380
1850      IF Z=0 THEN 1880
 Variable:Z -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1880
1860      PRINT Q$(Z);
 Variable:Z -> .
 Variable:Q$(.) -> $
 CarriageControl:;
1870      GOTO 1890
 LineNumber:1890
1880      PRINT"GUY #";F2*(Z+1)+Z;
 TextValue:"GUY #"
 CarriageControl:;
 Variable:F2 -> .
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
1890      IF D(Z) = 0 THEN 1950
 Variable:Z -> .
 Variable:D(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1950
1900      PRINT" IS LOOKIN' AT THEM PEARLY GATES."
 TextValue:" IS LOOKIN' AT THEM PEARLY GATES."
 CarriageControl:NL
1910      IF O9=0 THEN 1990
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1990
1920      PRINT O$(Z);"TELL ST. LUCIFER NOT TO EXPECT ME, O.K.?"
 Variable:Z -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"TELL ST. LUCIFER NOT TO EXPECT ME, O.K.?"
 CarriageControl:NL
1930      PRINT O$(10);
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
1940      GOTO 1990
 LineNumber:1990
1950      PRINT" TOOK";T(Z);"SECONDS. WHICH AVERAGES OUT TO ";3600*5.3*H/T(Z);"MPH" 'T ARRAY IS TIME ARRAY
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:" TOOK"
 CarriageControl:;
 Variable:Z -> .
 Variable:T(.) -> .
 CarriageControl:;
 TextValue:"SECONDS. WHICH AVERAGES OUT TO "
 CarriageControl:;
 NumericValue:3600
 NumericValue:5.3
 BinaryOperatorMultiply:*(.,.) -> =.
 Variable:H -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 Variable:T(.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 CarriageControl:;
 TextValue:"MPH"
 CarriageControl:NL
1960      IF T(Z)>W THEN 1990
 Variable:Z -> .
 Variable:T(.) -> .
 Variable:W -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1990
1970      LET W=T(Z)                      'NEW LEADING TIME AND DRIVER
 Variable:W -> .
 Variable:Z -> .
 Variable:T(.) -> .
 AssignmentOperator:= . -> .
1980      LET N=F2*(Z+1)+Z 
 Variable:N -> .
 Variable:F2 -> .
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1990 NEXT Z
 Variable:Z -> .
2000 IF O9>0 THEN 2020
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:2020
2010 IF N>F2 THEN 2040
 Variable:N -> .
 Variable:F2 -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:2040
2020 PRINT OS((N-F2)/(F2+1));"NICE RACE, MR";N
 Variable:O -> .
 CarriageControl:
 Variable:N -> .
 Variable:F2 -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:F2 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 Variable:S(.) -> .
 CarriageControl:;
 TextValue:"NICE RACE, MR"
 CarriageControl:;
 Variable:N -> .
 CarriageControl:NL
2030 PRINT O$(10);"AND THAT MEANS THAT GUY #";N;"WINS!!!"
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"AND THAT MEANS THAT GUY #"
 CarriageControl:;
 Variable:N -> .
 CarriageControl:;
 TextValue:"WINS!!!"
 CarriageControl:NL
2040 PRINT O$(0);"ANOTHER RACE";CHR$(63*SGN(O9));O$;
 NumericValue:0
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"ANOTHER RACE"
 CarriageControl:;
 NumericValue:63
 Variable:O9 -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionChr:CHR$(.) -> $
 CarriageControl:;
 Variable:O$ -> $
 CarriageControl:;
2050 MAT INPUT A$
 Variable:A$() -> $()
2060 LET A$=A$(NUM)
 Variable:A$ -> $
 FunctionNum:NUM -> .
 Variable:A$(.) -> $
 AssignmentOperator:= $ -> $
2070 GOSUB 2190
 LineNumber:2190
2080 IF A$="NO" THEN 2290
 Variable:A$ -> $
 TextValue:"NO"
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2290
2090 IF A$<>"YES" THEN 2040
 Variable:A$ -> $
 TextValue:"YES"
 BinaryOperatorNotEqual:<>($,$) -> ?
 LineNumber:2040
2100 FOR Z=0 TO 10                         'RESET FOR NEXT GRME 
 control: Variable:Z -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:10"]
2110      LET T(Z),D(Z)=0
 Variable:Z -> .
 Variable:T(.) -> .
 Variable:Z -> .
 Variable:D(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .,.
2120 NEXT Z
 Variable:Z -> .
2130 PRINT O$(10);"NEW SET-UP. NO RAIN, NO DEBRIS";
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"NEW SET-UP. NO RAIN, NO DEBRIS"
 CarriageControl:;
2140 IF G1=0 THEN 2160                     'IF EVERYBODY'S DEAD, BE NASTY.
 Variable:G1 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2160
2150 PRINT ", AND (PLEASE!) BETTER DRIVERS."
 TextValue:", AND (PLEASE!) BETTER DRIVERS."
 CarriageControl:NL
2160 PRINT
 CarriageControl:NL
2170 LET G1,F5=0                           'UNKILL EVERYBODY AND UNOIL THE TRACK 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:G1 -> .
 Variable:F5 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .,.
2180 GOTO 1110
 LineNumber:1110
2190 FOR X=1 TO K9                         'FOREIGN LANGUAGE HANDLER 
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:K9 -> ."]
2200      IF R$=F$(X) THEN 2230
 Variable:R$ -> $
 Variable:X -> .
 Variable:F$(.) -> $
 BinaryOperatorEqual:=($,$) -> ?
 LineNumber:2230
2210 NEXT X 
 Variable:X -> .
2220 GOTO 2280
 LineNumber:2280
2230 PRINT O$(0);R$((X-1)/2*1)
 NumericValue:0
 Variable:O$(.) -> $
 CarriageControl:;
 Variable:X -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:1
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:R$(.) -> $
 CarriageControl:NL
2240 IF X=INT(X/2)*2 THEN 2270
 Variable:X -> .
 Variable:X -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 NumericValue:2
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2270
2250 LET R$="NO"
 Variable:R$ -> $
 TextValue:"NO"
 AssignmentOperator:= =$ -> $
2260 GOTO 2280
 LineNumber:2280
2270 LET A$="YES"
 Variable:A$ -> $
 TextValue:"YES"
 AssignmentOperator:= =$ -> $
2280 RETURN
 
2290 STOP
 
2300                                       ' -------- --------
2310 DEF FNA(A$,R,B,C,D)                   'KIND TRACK, MAX. SPEED, ADHESION FUDGE FACTOR, LENGTH 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 UserFunctionName:FNA -> .
 VariableName:A$ -> $
 VariableName:R -> .
 VariableName:B -> .
 VariableName:C -> .
 VariableName:D -> .
2320                                       'ASC(LETTER FOLLOWING KIND OF TRACK)
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
2330 IF G1<1 THEN 4250                     'ALL DEAD?
 Variable:G1 -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:4250
2340 GOSUB 2800                            'GET SOME HAZARDS (IE RAIN, OIL)
 LineNumber:2800
2350 GOSUB 3220                            'GET EVERYONE'S SPEED
 LineNumber:3220
2360 FOR G=0 TO O9                         'CHECK FOR SAFE SPEEDS
 WARNING: FORNEXT length exceeds limit 40
 control: Variable:G -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:O9 -> ."]
2370      IF D(G)=1 THEN 2780
 Variable:G -> .
 Variable:D(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2780
2380      IF (B+A(G)+E)*S(G)/B<=R*(1+RND*.1) THEN 2500
 Variable:B -> .
 Variable:G -> .
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:E -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:G -> .
 Variable:S(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B -> .
 BinaryOperatorDivide:/(.,.) -> .
 Variable:R -> .
 NumericValue:1
 FunctionRnd:RND -> .
 NumericValue:.1
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:2500
2390      PRINT O$(G);X$                   'PRINT DEAD MESSAGE
 Variable:G -> .
 Variable:O$(.) -> $
 CarriageControl:;
 Variable:X$ -> $
 CarriageControl:NL
2400      LET F5=F5+1                      'INCREMENT OIL COUNTER
 Variable:F5 -> .
 Variable:F5 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2410      LET E(F5)=D                      'AND THE 635 SAID "LET THERE BE OIL." AND THERE IT WAS.
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:F5 -> .
 Variable:E(.) -> .
 Variable:D -> .
 AssignmentOperator:= . -> .
2420      FOR Z=0 TO O9                    'AND THE TRACK ABOUNDED WITH OIL. AND THE 635 SAID "BOY, WHAT
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 control: Variable:Z -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:O9 -> ."]
2430           IF Z=G THEN 2450            'A MAN TRAP!"
 Variable:Z -> .
 Variable:G -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2450
2440           PRINT O$(Z);"GUY #";F2*(G+1)+G;"JUST WIPED REAL GOOD ('N DEAD!)" 'IN THE MEANTIME, IT HAS BEEN BUSY NOTIFYING PEOPLE
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:Z -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"GUY #"
 CarriageControl:;
 Variable:F2 -> .
 Variable:G -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
 TextValue:"JUST WIPED REAL GOOD ('N DEAD!)"
 CarriageControl:NL
2450      NEXT Z                           'OF THEIR COMRADE'S. DEMISE.
 Variable:Z -> .
2460      LET D(G)=1                       'OFFICIALLY PRONOUNCE DEAD. D IS FOR DEATH
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:G -> .
 Variable:D(.) -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
2470      LET Q=Q+1                        'INCREMENT DEAD COUNTER
 Variable:Q -> .
 Variable:Q -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2480      IF Q=O9 THEN 4230                'EVERYBODY DEAD?
 Variable:Q -> .
 Variable:O9 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4230
2490      GOTO 2780
 LineNumber:2780
2500      LET Y4=T(G)                      'RATS. HE DIDN'T WIPE
 Variable:Y4 -> .
 Variable:G -> .
 Variable:T(.) -> .
 AssignmentOperator:= . -> .
2510 IF (B+A(G)+E)*S(G)/B<= R THEN 2530
 Variable:B -> .
 Variable:G -> .
 Variable:A(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:E -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:G -> .
 Variable:S(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B -> .
 BinaryOperatorDivide:/(.,.) -> .
 Variable:R -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:2530
2520 PRINT O$(G);'"NEARLY HAD TO SAY GOOD BYE." 'ALMOST WIPED
 Variable:G -> .
 Variable:O$(.) -> $
 CarriageControl:;
2530      LET T(G)=T(G)+C/(S(G)/3600)+L(G) 'UPDATE HIS TIME
 Variable:G -> .
 Variable:T(.) -> .
 Variable:G -> .
 Variable:T(.) -> .
 Variable:C -> .
 Variable:G -> .
 Variable:S(.) -> .
 NumericValue:3600
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:G -> .
 Variable:L(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
2540      IF O9>0 THEN 2660                'SEE IF, HEAVEN FORBID, HE PASSED SOMEBODY
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:2660
2550      FOR X4=1 TO 3
 control: Variable:X4 -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
2560           IF D(X4)=1 THEN 2650
 Variable:X4 -> .
 Variable:D(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2650
2570           LET Z4=T(X4)-(C/(S(X4)/3600))
 Variable:Z4 -> .
 Variable:X4 -> .
 Variable:T(.) -> .
 Variable:C -> .
 Variable:X4 -> .
 Variable:S(.) -> .
 NumericValue:3600
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2580           LET Z1=Y4-Z4
 Variable:Z1 -> .
 Variable:Y4 -> .
 Variable:Z4 -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2590           LET Z2=T(G)-T(X4)
 Variable:Z2 -> .
 Variable:G -> .
 Variable:T(.) -> .
 Variable:X4 -> .
 Variable:T(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2600           IF SGN(Z2)<>-SGN(Z1) THEN 2650
 Variable:Z2 -> .
 FunctionSgn:SGN(.) -> .
 Variable:Z1 -> .
 FunctionSgn:SGN(.) -> .
 UnaryOperatorMinus:-(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2650
2610           IF SGN(Z2)=1 THEN 2640
 Variable:Z2 -> .
 FunctionSgn:SGN(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2640
2620           PRINT "YOU JUST PASSED ";Q$(X4)
 TextValue:"YOU JUST PASSED "
 CarriageControl:;
 Variable:X4 -> .
 Variable:Q$(.) -> $
 CarriageControl:NL
2630           GOTO 2650
 LineNumber:2650
2640           PRINT Q$(X4);" JUST PASSED YOU"
 Variable:X4 -> .
 Variable:Q$(.) -> $
 CarriageControl:;
 TextValue:" JUST PASSED YOU"
 CarriageControl:NL
2650      NEXT X4
 Variable:X4 -> .
2660      FOR X4=G+1 TO O9
 control: Variable:X4 -> .
 start:   ["Variable:G -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
 end:     ["Variable:O9 -> ."]
2670           IF D(X4)=1 THEN 2770
 Variable:X4 -> .
 Variable:D(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2770
2680           IF S(X4)=0 THEN 2770
 Variable:X4 -> .
 Variable:S(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2770
2690           IF SGN(Y4-T(X4))=SGN(T(G)-(T(X4)+C/(S(X4)/3600))) THEN 2770
 Variable:Y4 -> .
 Variable:X4 -> .
 Variable:T(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSgn:SGN(.) -> .
 Variable:G -> .
 Variable:T(.) -> .
 Variable:X4 -> .
 Variable:T(.) -> .
 Variable:C -> .
 Variable:X4 -> .
 Variable:S(.) -> .
 NumericValue:3600
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2770
2700           IF SGN(T(G)-(T(X4)+C/(S(X4)/3600)))<>-1 THEN 2740
 Variable:G -> .
 Variable:T(.) -> .
 Variable:X4 -> .
 Variable:T(.) -> .
 Variable:C -> .
 Variable:X4 -> .
 Variable:S(.) -> .
 NumericValue:3600
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSgn:SGN(.) -> .
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:2740
2710           PRINT O$(X4);"GUY";F2*(G+1)+G;"JUST PASSED YOU."
 Variable:X4 -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"GUY"
 CarriageControl:;
 Variable:F2 -> .
 Variable:G -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
 TextValue:"JUST PASSED YOU."
 CarriageControl:NL
2720           PRINT O$(G);"YOU JUST PASSED GUY";F2*-(X4+1)+X4
 Variable:G -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"YOU JUST PASSED GUY"
 CarriageControl:;
 Variable:F2 -> .
 Variable:X4 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 UnaryOperatorMinus:-(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:X4 -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:NL
2730           GOTO 2770
 LineNumber:2770
2740           IF SGN(T(G)-(T(X4)+C/(S(X4)/3600)))=0 THEN 2770
 Variable:G -> .
 Variable:T(.) -> .
 Variable:X4 -> .
 Variable:T(.) -> .
 Variable:C -> .
 Variable:X4 -> .
 Variable:S(.) -> .
 NumericValue:3600
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSgn:SGN(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2770
2750           PRINT O$(G);"GUY";F2*(X4+1)+X4;"JUST PASSED YOU."
 Variable:G -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"GUY"
 CarriageControl:;
 Variable:F2 -> .
 Variable:X4 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:X4 -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
 TextValue:"JUST PASSED YOU."
 CarriageControl:NL
2760           PRINT O$(X4);"Y0U JUST PASSED GUY ";F2*(G+1)+G
 Variable:X4 -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"Y0U JUST PASSED GUY "
 CarriageControl:;
 Variable:F2 -> .
 Variable:G -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:NL
2770      NEXT X4 
 Variable:X4 -> .
2780 NEXT G                                   'PROCEED TO THE FATE OF THE NEXT VICTIM 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:G -> .
2790 GOTO 4250                                'NO MORE VICTIMS. (THIS TIME!!) 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 LineNumber:4250
2800 REM HAZARDS 
 Remark:HAZARDS 
2810 PRINT O$(10);
 WARNING: GOSUB length exceeds limit 40
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
2820 LET E = 0                                'MAKE SURE WE DON'T USE LAST SECTION'S OIL ON THIS SECTION
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:E -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2830 MAT L=ZER                                'KILL PIT STOPS FROM LAST TIME
 Variable:L(,) -> .(,)
 FunctionZer2:ZER -> .(,)
 AssignmentOperator:= .(,) -> .(,)
2840 LET L(0)=0
 NumericValue:0
 Variable:L(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2850 IF F5<2 THEN 2900                        'IF COURSE WELL GREASED, DISSOLVE GREASE
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:F5 -> .
 NumericValue:2
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:2900
2860 PRINT "THE RED FLAG HAS BEEN PUT OUT. CARS REMAIN" 
 TextValue:"THE RED FLAG HAS BEEN PUT OUT. CARS REMAIN"
 CarriageControl:NL
2870 PRINT "MOTIONLESS UNTIL DEBRIS IS CLEARED" 
 TextValue:"MOTIONLESS UNTIL DEBRIS IS CLEARED"
 CarriageControl:NL
2880 MAT E=ZER
 Variable:E(,) -> .(,)
 FunctionZer2:ZER -> .(,)
 AssignmentOperator:= .(,) -> .(,)
2890 LET F5=0
 Variable:F5 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
2900 FOR X=1 TO F5                            'SEE IF THOSE PLAYING DESERVE OIL 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 control: Variable:X -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:F5 -> ."]
2910      IF E(X)=D THEN 2940 
 Variable:X -> .
 Variable:E(.) -> .
 Variable:D -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2940
2920 NEXT X
 Variable:X -> .
2930 GOTO 2970
 LineNumber:2970
2940 PRINT"YIKES! OIL ON THE TRACK!"          'IF SO, NOTIFY SURVIVORS AND OTHERS
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"YIKES! OIL ON THE TRACK!"
 CarriageControl:NL
2950 LET E=.2
 Variable:E -> .
 NumericValue:.2
 AssignmentOperator:= =. -> .
2960 GOTO 3130
 LineNumber:3130
2970 IF F3=1 THEN 3130                        'HAVE WE HAD RAIN?
 Variable:F3 -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3130
2980 IF RND>.025+G8 THEN 3130                 'SEE IF IT SHOULD BE STOPPED OR STARTED 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 FunctionRnd:RND -> .
 NumericValue:.025
 Variable:G8 -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3130
2990 IF RND<.1 THEN 3080                      'IS IT RAINING?
 FunctionRnd:RND -> .
 NumericValue:.1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3080
3000 IF RND>.5 THEN 3130                      'STOP IT?
 FunctionRnd:RND -> .
 NumericValue:.5
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3130
3010 PRINT "GLORY BE, THE RAIN HAS STOPPED! BUT REMEMBER IT IS STILL WET"
 TextValue:"GLORY BE, THE RAIN HAS STOPPED! BUT REMEMBER IT IS STILL WET"
 CarriageControl:NL
3020 LET F3=1                                 'RAIN, RAIN, GO AWAY, WON'T COME BACK ANOTHER DAY 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:F3 -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
3030 FOR A=0 TO O9
 control: Variable:A -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:O9 -> ."]
3040      LET A(A)= A(A)-.075                 'DELETE MOST OF THE EFFECTS
 Variable:A -> .
 Variable:A(.) -> .
 Variable:A -> .
 Variable:A(.) -> .
 NumericValue:.075
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3050      LET G8=.025                         'MAKE IT LESS LIKELY TO RAIN IN LATER RACES 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:G8 -> .
 NumericValue:.025
 AssignmentOperator:= =. -> .
3060 NEXT A
 Variable:A -> .
3070 GOTO 3130
 LineNumber:3130
3080 PRINT "RAIN! SLOW DOWN!!"                'HALLELUJAH, MY RAIN DANCE WORKED
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"RAIN! SLOW DOWN!!"
 CarriageControl:NL
3090 FOR A=0 TO O9                            'MAKE TRACK SLIPPERY
 control: Variable:A -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:O9 -> ."]
3100      LET A(A)=A(A)+.1
 Variable:A -> .
 Variable:A(.) -> .
 Variable:A -> .
 Variable:A(.) -> .
 NumericValue:.1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3110      LET G8=.1
 Variable:G8 -> .
 NumericValue:.1
 AssignmentOperator:= =. -> .
3120 NEXT A
 Variable:A -> .
3130 IF C<>9/20 THEN 3210                     'PIT STOPS?
 Variable:C -> .
 NumericValue:9
 NumericValue:20
 BinaryOperatorDivide:/(.,.) -> =.
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3210
3140 IF RND <.125 THEN 3210
 FunctionRnd:RND -> .
 NumericValue:.125
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3210
3150 FOR X=0 TO O9
 control: Variable:X -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:O9 -> ."]
3160 IF RND*SGN(O9)<.75 THEN 3200
 FunctionRnd:RND -> .
 Variable:O9 -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:.75
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3200
3170 IF D(X)=1 THEN 3200
 Variable:X -> .
 Variable:D(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3200
3180 LET L(X)=RND*3+5
 Variable:X -> .
 Variable:L(.) -> .
 FunctionRnd:RND -> .
 NumericValue:3
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:5
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3190 PRINT O$(X);"Y0U ARE IN THE PITS FOR";L(X);"SECONDS."
 Variable:X -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"Y0U ARE IN THE PITS FOR"
 CarriageControl:;
 Variable:X -> .
 Variable:L(.) -> .
 CarriageControl:;
 TextValue:"SECONDS."
 CarriageControl:NL
3200 NEXT X
 Variable:X -> .
3210 RETURN                                   'WE WUZ HERE (AND LEFT!)
 
3220 REM INPUT
 Remark:INPUT
3230 MAT S=ZER                                'RESET SPEED ARRAY
 WARNING: GOSUB length exceeds limit 40
 Variable:S(,) -> .(,)
 FunctionZer2:ZER -> .(,)
 AssignmentOperator:= .(,) -> .(,)
3240 IF O3>0 THEN 3270                        'PRINT OUT SOMETHING LIKE 'STRAIGHT A'
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:O3 -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3270
3250 PRINT A$;" ";CHR$(D);
 Variable:A$ -> $
 CarriageControl:;
 TextValue:" "
 CarriageControl:;
 Variable:D -> .
 FunctionChr:CHR$(.) -> $
 CarriageControl:;
3260 GOTO 3280 
 LineNumber:3280
3270 PRINT O$(10);A$;" ";CHR$(D);": ";O$;
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
 Variable:A$ -> $
 CarriageControl:;
 TextValue:" "
 CarriageControl:;
 Variable:D -> .
 FunctionChr:CHR$(.) -> $
 CarriageControl:;
 TextValue:": "
 CarriageControl:;
 Variable:O$ -> $
 CarriageControl:;
3280 LET S(D)=0                               'GET EVERYBODY'S SPEEDS
 Variable:D -> .
 Variable:S(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3290 FOR A=0 TO O9
 control: Variable:A -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:O9 -> ."]
3300      IF D(A)=0 THEN 3330
 Variable:A -> .
 Variable:D(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3330
3310      PRINT O$(A)                         'IF HE'S DEAD, DON'T GIVE HIM A CHANCE TO INPUT 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:A -> .
 Variable:O$(.) -> $
 CarriageControl:NL
3320      PRINT O$; 
 Variable:O$ -> $
 CarriageControl:;
3330 NEXT A
 Variable:A -> .
3340 MAT INPUT J                              'INPUT SOMEBODY'S SPEED
 Variable:J() -> .()
3350 IF NUM=1 THEN 3390                       'SOMEBODY TYPED SOMETHING. SET UP SPEED AND TTY#
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 FunctionNum:NUM -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3390
3360 LET N=J(1)
 Variable:N -> .
 NumericValue:1
 Variable:J(.) -> .
 AssignmentOperator:= . -> .
3370 LET S=J(2)
 Variable:S -> .
 NumericValue:2
 Variable:J(.) -> .
 AssignmentOperator:= . -> .
3380 GOTO 3410
 LineNumber:3410
3390 LET S=J(1)
 Variable:S -> .
 NumericValue:1
 Variable:J(.) -> .
 AssignmentOperator:= . -> .
3400 LET N=0
 Variable:N -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3410 IF D(N)=0 THEN 3450                      'IS THE GUY DEAD?
 Variable:N -> .
 Variable:D(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3450
3420 PRINT O$(N);"BUT I THOUGHT YOU WERE DEAD." 'RE-INFORM HIM THAT HE IS AN UN-PERSON
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:N -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"BUT I THOUGHT YOU WERE DEAD."
 CarriageControl:NL
3430 PRINT O$;
 Variable:O$ -> $
 CarriageControl:;
3440 GOTO 3340
 LineNumber:3340
3450 IF S(N)=0 THEN 3480                      'HAS THIS GUY ALREADY TOLD US HIS SPEED?
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:N -> .
 Variable:S(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3480
3460 PRINT O$(N);"WAIT A SEC.  I STILL NEED";O9-U-Q;"MORE SPEEDS." 'TELL HIM TO BUZZ OFF
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:N -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"WAIT A SEC.  I STILL NEED"
 CarriageControl:;
 Variable:O9 -> .
 Variable:U -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:Q -> .
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:;
 TextValue:"MORE SPEEDS."
 CarriageControl:NL
3470 GOTO 3430
 LineNumber:3430
3480 LET A=N
 Variable:A -> .
 Variable:N -> .
 AssignmentOperator:= . -> .
3490 IF S<=200 THEN 3620                      'DID HE TRY TO EXCEED HIS MAX. SPEED? 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:S -> .
 NumericValue:200
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:3620
3500 IF O9=0 THEN 3600
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3600
3510 IF S<1000 THEN 3600
 Variable:S -> .
 NumericValue:1000
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3600
3520 LET R4=(S-1000-F2)/(F2+1)                'IT'S OK. HE ONLY WANTS TO DRAFT
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:R4 -> .
 Variable:S -> .
 NumericValue:1000
 BinaryOperatorMinus:-(.,.) -> .
 Variable:F2 -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:F2 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
3530 IF R4=INT(R4) THEN 3560                  'NOW SEE IF HE PICKED A LEGAL CAR
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:R4 -> .
 Variable:R4 -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3560
3540 PRINT O$(N);"ILLEGAL CAR"                'HE DIDN'T
 Variable:N -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"ILLEGAL CAR"
 CarriageControl:NL
3550 GOTO 3640
 LineNumber:3640
3560 IF R4>O9 THEN 3540
 Variable:R4 -> .
 Variable:O9 -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3540
3570 IF E(R4)>0 THEN 3540
 Variable:R4 -> .
 Variable:E(.) -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3540
3580 IF ABS(T(N)-T(R4)-.5)=>.5 THEN 3540
 Variable:N -> .
 Variable:T(.) -> .
 Variable:R4 -> .
 Variable:T(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:.5
 BinaryOperatorMinus:-(.,.) -> .
 FunctionAbs:ABS(.) -> .
 NumericValue:.5
 BinaryOperatorGreaterEqual:=>(.,.) -> ?
 LineNumber:3540
3590 GOTO 3700                                'HE DID!!!
 LineNumber:3700
3600 PRINT O$(N);"MAYBE A LITTLE HARD ON THE PEDDLE? BE REALISTIC." 'OPTIMIST
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:N -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"MAYBE A LITTLE HARD ON THE PEDDLE? BE REALISTIC."
 CarriageControl:NL
3610 GOTO 3640
 LineNumber:3640
3620 IF S>0 THEN 3660
 Variable:S -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3660
3630 GOSUB 3990                               'HE WANTS TO SEE HOW HE'S DOING. POOR GUY 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 LineNumber:3990
3640 PRINT "HOW FAST";CHR$(63*SGN(O9));O$;
 TextValue:"HOW FAST"
 CarriageControl:;
 NumericValue:63
 Variable:O9 -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionChr:CHR$(.) -> $
 CarriageControl:;
 Variable:O$ -> $
 CarriageControl:;
3650 GOTO 3340
 LineNumber:3340
3660 IF S=>20 THEN 3690 'WHERE DOES HE THINK HE IS? HE LONG ISLAND EXPRESSWAY?
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:S -> .
 NumericValue:20
 BinaryOperatorGreaterEqual:=>(.,.) -> ?
 LineNumber:3690
3670 PRINT O$(N);"I DOUBT YOU WANT TO GO THAT SLOWLY"
 Variable:N -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"I DOUBT YOU WANT TO GO THAT SLOWLY"
 CarriageControl:NL
3680 GOTO 3640
 LineNumber:3640
3690 LET S(N)=S                               'SINCE HE MADE IT THIS FAR, ASSUME THAT IT'S LEGAL
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:N -> .
 Variable:S(.) -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
3700 LET U=U+1
 Variable:U -> .
 Variable:U -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3710 IF R4=0 THEN 3740
 Variable:R4 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3740
3720 LET H(N)=R4                              'IF HE'S DRAFTING, TELL ME TO WHOM
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:N -> .
 Variable:H(.) -> .
 Variable:R4 -> .
 AssignmentOperator:= . -> .
3730 LET R4=0
 Variable:R4 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3740 IF U<O9-Q THEN 3430                      'ARE WE DONE?
 Variable:U -> .
 Variable:O9 -> .
 Variable:Q -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:3430
3750 LET U=0                                  'YES!
 Variable:U -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3760 IF O9>0 THEN 3890                        'SET SPEEDS FOR AUTO-PILOTS
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:3890
3770 FOR F0=1 TO 3
 control: Variable:F0 -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
3780      IF D(F0)=1 THEN 3870
 Variable:F0 -> .
 Variable:D(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3870
3790      LET S=R*B/(B+.1+E+G8)+(RND*3+Q(F0))
 Variable:S -> .
 Variable:R -> .
 Variable:B -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B -> .
 NumericValue:.1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:E -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:G8 -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionRnd:RND -> .
 NumericValue:3
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:F0 -> .
 Variable:Q(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3800      IF (B+.1+G8+E)*S/B<=R THEN 3850
 Variable:B -> .
 NumericValue:.1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:G8 -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:E -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:S -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B -> .
 BinaryOperatorDivide:/(.,.) -> .
 Variable:R -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:3850
3810      LET D(F0)=1
 Variable:F0 -> .
 Variable:D(.) -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
3820      PRINT O$(10);Q$(F3);" JUST WIPED"       'AND INFORM US IF THEY WIPE
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
 Variable:F3 -> .
 Variable:Q$(.) -> $
 CarriageControl:;
 TextValue:" JUST WIPED"
 CarriageControl:NL
3830      LET F5=F5+1
 Variable:F5 -> .
 Variable:F5 -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3840      LET E(F5)=D
 Variable:F5 -> .
 Variable:E(.) -> .
 Variable:D -> .
 AssignmentOperator:= . -> .
3850      LET T(F0)=T(F0)+C/(S/3600)
 Variable:F0 -> .
 Variable:T(.) -> .
 Variable:F0 -> .
 Variable:T(.) -> .
 Variable:C -> .
 Variable:S -> .
 NumericValue:3600
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3860      LET S(F0)=S
 Variable:F0 -> .
 Variable:S(.) -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
3870 NEXT F0
 Variable:F0 -> .
3880 GOTO 3980
 LineNumber:3980
3890 FOR X2=0 TO O9
 control: Variable:X2 -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:O9 -> ."]
3900      IF D(X2)=1 THEN 3970
 Variable:X2 -> .
 Variable:D(.) -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3970
3910      IF S(X2)<>0 THEN 3970
 Variable:X2 -> .
 Variable:S(.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3970
3920      IF S(H(X2))<>0 THEN 3950
 Variable:X2 -> .
 Variable:H(.) -> .
 Variable:S(.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:3950
3930      LET H(X2)=H(H(X2)) 
 Variable:X2 -> .
 Variable:H(.) -> .
 Variable:X2 -> .
 Variable:H(.) -> .
 Variable:H(.) -> .
 AssignmentOperator:= . -> .
3940      GOTO 3920
 LineNumber:3920
3950      LET S(X2)=S(H(X2))
 Variable:X2 -> .
 Variable:S(.) -> .
 Variable:X2 -> .
 Variable:H(.) -> .
 Variable:S(.) -> .
 AssignmentOperator:= . -> .
3960      LET T(X2)=(T(X2)+T(H(X2)))/2
 Variable:X2 -> .
 Variable:T(.) -> .
 Variable:X2 -> .
 Variable:T(.) -> .
 Variable:X2 -> .
 Variable:H(.) -> .
 Variable:T(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
3970 NEXT X2
 Variable:X2 -> .
3980 RETURN
 
3990 REM PLACING
 Remark:PLACING
4000 PRINT O$(A)
 Variable:A -> .
 Variable:O$(.) -> $
 CarriageControl:NL
4010 IF O9=0 THEN 4040
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4040
4020 LET G5=O9
 Variable:G5 -> .
 Variable:O9 -> .
 AssignmentOperator:= . -> .
4030 GOTO 4050
 LineNumber:4050
4040 LET G5=3
 Variable:G5 -> .
 NumericValue:3
 AssignmentOperator:= =. -> .
4050 FOR G=0 TO G5
 control: Variable:G -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:G5 -> ."]
4060      IF G=A THEN 4200
 Variable:G -> .
 Variable:A -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:4200
4070      IF O9>0 THEN 4100
 Variable:O9 -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:4100
4080      PRINT O$(G);" IS";
 Variable:G -> .
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:" IS"
 CarriageControl:;
4090      GOTO 4110
 LineNumber:4110
4100      PRINT "GUY#";F2*(G+1)+G;"IS ";
 TextValue:"GUY#"
 CarriageControl:;
 Variable:F2 -> .
 Variable:G -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
 TextValue:"IS "
 CarriageControl:;
4110      IF D(G)<>1 THEN 4140
 Variable:G -> .
 Variable:D(.) -> .
 NumericValue:1
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:4140
4120      PRINT " OUT OF THE RACE."
 TextValue:" OUT OF THE RACE."
 CarriageControl:NL
4130      GOTO 4200
 LineNumber:4200
4140      ON SGN(T(A)-T(G))+2 GOTO 4150,4170,4190 'BUSINESS PART 
 Variable:A -> .
 Variable:T(.) -> .
 Variable:G -> .
 Variable:T(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionSgn:SGN(.) -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 LineNumber:4150
 LineNumber:4170
 LineNumber:4190
4150      PRINT T(G)-T(A);"SECONDS BEHIND YOU" 'GOOD NEWS
 Variable:G -> .
 Variable:T(.) -> .
 Variable:A -> .
 Variable:T(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:;
 TextValue:"SECONDS BEHIND YOU"
 CarriageControl:NL
4160      GOTO 4200
 LineNumber:4200
4170      PRINT " RIGHT BESIDE YOU."           'SO SO
 TextValue:" RIGHT BESIDE YOU."
 CarriageControl:NL
4180      GOTO 4200
 LineNumber:4200
4190      PRINT T(A)-T(G);"SECONDS AHEAD OF YOU." 'BAD NEWS
 Variable:A -> .
 Variable:T(.) -> .
 Variable:G -> .
 Variable:T(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 CarriageControl:;
 TextValue:"SECONDS AHEAD OF YOU."
 CarriageControl:NL
4200 NEXT G
 Variable:G -> .
4210 PRINT"YOU'VE TAKEN";T(A);"SECONDS."  'MORE BAD NEWS
 TextValue:"YOU'VE TAKEN"
 CarriageControl:;
 Variable:A -> .
 Variable:T(.) -> .
 CarriageControl:;
 TextValue:"SECONDS."
 CarriageControl:NL
4220 RETURN 'AND AN ANTI-CLIMACTIC ENDING. (STOLEN FROM SPIEL*** AND SPACEWAR) 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 
4230 PRINT O$(10);"GUY#";F2*(G+1)+G;", THE LAST OF THE GREAT RACERS, JUST WIPED."
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:10
 Variable:O$(.) -> $
 CarriageControl:;
 TextValue:"GUY#"
 CarriageControl:;
 Variable:F2 -> .
 Variable:G -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:G -> .
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
 TextValue:", THE LAST OF THE GREAT RACERS, JUST WIPED."
 CarriageControl:NL
4240 LET G1=1    'ALL HUMANS ARE DEAD, SO GRIND THIS MANGLE TO A HALT, AND SET A FLAG TO THAT EFFECT 
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 Variable:G1 -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
4250 FNEND 'AND RETURN FROM WHENCE WE CAME
 
4260 END 
 

