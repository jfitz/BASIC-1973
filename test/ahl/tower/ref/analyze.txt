Statistics:

Number of lines: 121
Number of valid statements: 145
Number of comments: 11
Number of executable statements: 144

Complexity:

Comment density: 0.076
Comprehension effort: 404
McCabe complexity: 41
Halstead complexity:
 length: 492
 volume: 2427.761
 difficulty: 29.739
 effort: 72199.506
 language: 2.745
 intelligence: 81.635
 time: 66.851

(0 2) 90 PRINT
(0 1) 100 REM *** INITIALIZE
(0 2) 110 DIM T(7, 3)
(0 3) 120 E = 0
(1 3) 130 FOR D = 1 TO 7
(1 3) 140 FOR N = 1 TO 3
(0 3) 150 T(D, N) = 0
(0 1) 160 NEXT N
(0 1) 170 NEXT D
(0 2) 180 PRINT "TOWERS OF HANOI PUZZLE"
(0 2)     PRINT
(0 2) 200 PRINT "YOU MUST TRANSFER THE DISKS FROM THE LEFT TO THE RIGHT"
(0 2) 205 PRINT "TOWER, ONE AT A TIME, NEVER PUTTING A LARGER ON A"
(0 2) 210 PRINT "SMALLER DISK."
(0 2)     PRINT
(0 2) 215 PRINT "HOW MANY DISKS DO YOU WANT TO MOVE (7 IS MAX)";
(1 2) 220 INPUT S
(0 2)     PRINT
(0 3) 230 M = 0
(1 3) 240 FOR Q = 1 TO 7
(1 4) 250 IF Q = S THEN 350
(0 1) 260 NEXT Q
(0 4) 270 E = E + 1
(1 4) 280 IF E > 2 THEN 310
(0 2) 290 PRINT "SORRY, BUT I CAN'T DO THAT JOB FOR YOU. "
(0 3)     GOTO 215
(0 2) 310 PRINT "ALRIGHT, WISE GUY, IF VOU CAN'T PLAY THE GAME RIGHT, I'LL"
(0 2) 320 PRINT "JUST TAKE MY PUZZLE AND GO HOME. SO LONG."
(0 1)     STOP
(0 1) 340 REM *** STORE DISKS FROM SMALLEST TO LARGEST
(0 2) 350 PRINT "IN THIS PROGRAM, WE SHALL REFER TO DISKS BY A NUMERICAL CODE."
(0 2) 355 PRINT "3 WILL REPRESENT THE SMALLEST DISK, 5 THE NEXT SIZE, 7 THE NEXT,"
(0 2) 360 PRINT "AND SO ON, UP TO 15. IF YOU DO THE PUZZLE WITH 2 DISKS, THEIR"
(0 2) 365 PRINT "CODE NAMES WOULD BE 13 AND 15. WITH THREE DISKS, THE CODE"
(0 2) 370 PRINT "NAMES WOULD BE 11, 13, AND 15, ETC. THE NEEDLES ARE"
(0 2) 375 PRINT "NUMBERED FROM LEFT TO RIGHT, 1 TO 3. WE WILL START WITH THE"
(0 2) 380 PRINT "DISKS ON NEEDLE 1, AND ATTEMPT TO MOVE THEM TO NEEDLE 3."
(0 2) 390 PRINT
(0 2)     PRINT "GOOD LUCK !!"
(0 2)     PRINT
(0 3) 400 Y = 7
(0 3)     D = 15
(1 5) 420 FOR X = S TO 1 STEP -1
(0 3) 430 T(Y, 1) = D
(0 4)     D = D - 2
(0 4)     Y = Y - 1
(0 1) 460 NEXT X
(0 2) 470 GOSUB 1230
(0 2) 480 PRINT "WHICH DISK WOULD YOU LIKE TO MOVE";
(0 3)     E = 0
(1 2) 500 INPUT D
(1 23) 510 IF (D - 3) * (D - 5) * (D - 7) * (D - 9) * (D - 11) * (D - 13) * (D - 15) = 0 THEN 580
(0 2) 520 PRINT "ILLEGAL ENTRY... YOU MAY ONLY TYPE 3,5,7,9,11,13,OR 15."
(0 4) 530 E = E + 1
(1 4)     IF E > 1 THEN 560
(0 2) 550 GOTO 580
(0 2) 560 PRINT
(0 2)     PRINT "STOP WASTING MY TIME. GO BOTHER SOMEONE ELSE."
(0 1)     STOP
(0 1) 580 REM *** CHECK IF REQUESTED DISK IS BELOW ANOTHER
(1 3) 590 FOR R = 1 TO 7
(1 3) 600 FOR C = 1 TO 3
(1 4) 610 IF T(R, C) = D THEN 640
(0 1) 620 NEXT C
(0 1)     NEXT R
(1 5) 640 FOR Q = R TO 1 STEP -1
(1 4) 645 IF T(Q, C) = 0 THEN 660
(1 4) 650 IF T(Q, C) < D THEN 680
(0 1) 660 NEXT Q
(0 2) 670 GOTO 700
(0 2) 680 PRINT "THAT DISK IS BELOW ANOTHER ONE. MAKE ANOTHER CHOICE. "
(0 3)     GOTO 480
(0 3) 700 E = 0
(0 2) 705 PRINT "PLACE DISK ON WHICH NEEDLE";
(1 2)     INPUT N
(1 11) 730 IF (N - 1) * (N - 2) * (N - 3) = 0 THEN 880
(0 4) 735 E = E + 1
(1 4) 740 IF E > 1 THEN 780
(0 2) 750 PRINT "I'LL ASSUME YOU HIT THE WRONG KEY THIS TIME. BUT WATCH IT,"
(0 2) 760 PRINT "I ONLY ALLOW ONE MISTAKE."
(0 3)     GOTO 705
(0 2) 780 PRINT "I TRIED TO WARN VOU, BUT YOU WOULDN'T LISTEN."
(0 2) 790 PRINT "BYE, BYE, BIG SHOT."
(0 1)     STOP
(0 1) 795 REM *** LOCATE DISK TO BE MOVED
(1 3) 800 FOR R = 1 TO 7
(1 4) 810 IF T(R, N) <> 0 THEN 840
(0 1) 820 NEXT R
(0 2) 830 GOTO 880
(0 1) 835 REM *** CHECK IF DISK TO BE PLACED ON A LARGER ONE
(1 3) 840 IF D, T(R, N) THEN 880
(0 2) 850 PRINT "YOU CAN'T PLACE A LARGER DISK ON TOP OF A SMALLER ONE."
(0 2) 860 PRINT "IT MIGHT CRUSH IT!"
(0 2)     PRINT "NOW THEN, ";
(0 3)     GOTO 480
(0 1) 875 REM *** RELOCATE MOVED DISK
(1 3) 880 FOR V = 1 TO 7
(1 3)     FOR W = 1 TO 3
(1 4) 900 IF T(V, W) = D THEN 930
(0 1) 910 NEXT W
(0 1)     NEXT V
(0 1) 925 REM *** LOCATE FIRST EMPTY SPACE ON NEEDLE N
(1 3) 930 FOR U = 1 TO 7
(1 4) 940 IF T(U, N) <> 0 THEN 970
(0 1) 950 NEXT U
(0 2) 960 GOTO 980
(0 1) 965 REM *** MOVE DISK AND SET OLD LOCATION TO 0
(0 4) 970 U = U - 1
(0 3) 980 T(U, N) = T(V, W)
(0 3)     T(V, W) = 0
(0 1) 995 REM +** PRINT OUT CURRENT STATUS
(0 2) 1000 GOSUB 1230
(0 1) 1010 REM *** CHECK IF DONE
(0 4) 1020 M = M + 1
(1 3) 1030 FOR R = 1 TO 7
(1 3)      FOR C = 1 TO 2
(1 4) 1050 IF T(R, C) <> 0 THEN 1090
(0 1) 1060 NEXT C
(0 1)      NEXT R
(0 2) 1080 GOTO 1120
(1 5) 1090 IF M <= 128 THEN 480
(0 2) 1100 PRINT "SORRY, BUT I HAVE ORDERS TO STOP IF YOU MAKE MORE THAN"
(0 2) 1110 PRINT "128 MOVES. "
(0 1)      STOP
(1 7) 1120 IF M <> 2 ^ S - 1 THEN 1140
(0 2) 1130 PRINT "CONGRATULATIONS!!";
(0 4) 1140 PRINT "YOU HAVE PERFORMED THE TASK IN" M "MOVES."
(0 2) 1150 PRINT
(0 2)      PRINT "TRY ANOTHER ONE (YES OR NO)";
(1 2)      INPUT A$
(1 4) 1160 IF A$ = "NO" THEN 1390
(1 5) 1170 IF A$ = "YES" THEN 90
(0 2) 1180 PRINT
(0 2)      PRINT "'YES' OR 'NO' PLEASE";
(1 2)      INPUT A$
(0 3)      GOTO 1160
(0 1) 1230 REM *** PRINT SUBROUTINE
(1 3) 1240 FOR K = 1 TO 7
(0 3) 1250 Z = 10
(1 3) 1260 FOR J = 1 TO 3
(1 4) 1270 IF T(K, J) = 0 THEN 1330
(0 3) 1280 PRINT TAB(Z - INT(T(K, J) / 2));
(1 3) 1290 FOR V = 1 TO T(K, J)
(0 2) 1300 PRINT "*";
(0 1) 1310 NEXT V
(0 2) 1320 GOTO 1340
(0 4) 1330 PRINT TAB(Z); "*";
(0 4) 1340 Z = Z + 21
(0 1) 1350 NEXT J
(0 2) 1360 PRINT
(0 1) 1370 NEXT K
(0 1) 1380 RETURN
(0 2) 1390 PRINT
(0 2)      PRINT "THANKS FOR THE GAME!"
(0 2)      PRINT
(0 1)      END

Unreachable code:

800: FOR R = 1 TO 7
810: IF T(R, N) <> 0 THEN 840
820: NEXT R
830: GOTO 880
840: IF D, T(R, N) THEN 880
850: PRINT "YOU CAN'T PLACE A LARGER DISK ON TOP OF A SMALLER ONE."
860: PRINT "IT MIGHT CRUSH IT!"
860.1: PRINT "NOW THEN, ";
860.2: GOTO 480

