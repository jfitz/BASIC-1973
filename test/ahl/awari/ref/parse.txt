5 DATA0
 NumericValue:0
10 DIMB(13),G(13),F(50):READN
 NumericValue:13
 Declaration:B() -> _()
 NumericValue:13
 Declaration:G() -> _()
 NumericValue:50
 Declaration:F() -> _()
 Variable:N -> _
15 FORI=0TON-1:READF(I):NEXTI
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["Variable:N -> _", "NumericValue:1", "BinaryOperatorMinus:-(_,_) -> _"]
 Variable:I -> _
 Variable:F(_) -> _
 Variable:I -> _
20 PRINT\PRINT "GAME OF *** AWARI ***"\B=0
 CarriageControl:NL
 TextValue:"GAME OF *** AWARI ***"
 CarriageControl:NL
 Variable:B -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
25 FORI=0TO12:LETB(I)=3:NEXTI
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["NumericValue:12"]
 Variable:I -> _
 Variable:B(_) -> _
 NumericValue:3
 AssignmentOperator:= =_ -> _
 Variable:I -> _
30 LETC=0:LETF(N)=0:LETB(13)=0:LETB(6)=0
 Variable:C -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 Variable:N -> _
 Variable:F(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 NumericValue:13
 Variable:B(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 NumericValue:6
 Variable:B(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
35 GOSUB500 
 LineNumber:500
40 PRINT"YOUR MOVE";:GOSUB110
 TextValue:"YOUR MOVE"
 CarriageControl:;
 LineNumber:110
45 IFB=0GOTO80
 Variable:B -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:80
50 IFM=HTHENGOSUB100
 Variable:M -> _
 Variable:H -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:100
55 IFB=0GOTO80
 Variable:B -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:80
60 PRINT"MY MOVE IS";:GOSUB800
 TextValue:"MY MOVE IS"
 CarriageControl:;
 LineNumber:800
65 IFB=0GOTO80
 Variable:B -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:80
70 IFM=HTHENPRINT",";:GOSUB800
 Variable:M -> _
 Variable:H -> _
 BinaryOperatorEqual:=(_,_) -> ?
 TextValue:","
 CarriageControl:;
 LineNumber:800
75 IFB>0GOTO35
 Variable:B -> _
 NumericValue:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:35
80 PRINT:PRINT"GAME OVER"
 CarriageControl:NL
 TextValue:"GAME OVER"
 CarriageControl:NL
85 LET D=B(6)-B(13):IF D<0 THEN PRINT "I WIN BY";-D"P0INTS":GOTO 20
 WARNING: Line exceeds PRETTY width limit 72
 Variable:D -> _
 NumericValue:6
 Variable:B(_) -> _
 NumericValue:13
 Variable:B(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:D -> _
 NumericValue:0
 BinaryOperatorLess:<(_,_) -> ?
 TextValue:"I WIN BY"
 CarriageControl:;
 Variable:D -> _
 UnaryOperatorMinus:-(_) -> _
 CarriageControl:
 TextValue:"P0INTS"
 CarriageControl:NL
 LineNumber:20
90 LETN=N+1:IFD=0THENPRINT"DRAWN GAME":GOTO 20
 Variable:N -> _
 Variable:N -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:D -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 TextValue:"DRAWN GAME"
 CarriageControl:NL
 LineNumber:20
95 PRINT"YOU WIN BY "D"POINTS": GOTO20
 TextValue:"YOU WIN BY "
 CarriageControl:
 Variable:D -> _
 CarriageControl:
 TextValue:"POINTS"
 CarriageControl:NL
 LineNumber:20
100 PRINT "AGAIN";
 WARNING: Inconsistent GOSUB origins
 TextValue:"AGAIN"
 CarriageControl:;
110 INPUTM:IFM<7THENIFM>0THENLETM=M-1:GOTO130
 WARNING: Inconsistent GOSUB origins
 Variable:M -> _
 Variable:M -> _
 NumericValue:7
 BinaryOperatorLess:<(_,_) -> ?
 Variable:M -> _
 NumericValue:0
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:M -> _
 Variable:M -> _
 NumericValue:1
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
 LineNumber:130
120 PRINT"ILLEGAL MOVE":GOTO100
 WARNING: Branch to line before GOSUB start
 TextValue:"ILLEGAL MOVE"
 CarriageControl:NL
 LineNumber:100
130 IFB(M)=0GOTO120
 Variable:M -> _
 Variable:B(_) -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:120
140 LETM=B:GOSUB200
 Variable:M -> _
 Variable:B -> _
 AssignmentOperator:= _ -> _
 LineNumber:200
150 GOTO500
 LineNumber:500
200 LETK=M:GOSUB600
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 Variable:K -> _
 Variable:M -> _
 AssignmentOperator:= _ -> _
 LineNumber:600
205 LETB=0:IFK>6THENLETK=K-7
 WARNING: Multiple GOSUB entry points
 Variable:B -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 Variable:K -> _
 NumericValue:6
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:K -> _
 Variable:K -> _
 NumericValue:7
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
210 LETC=C+1:IFC<9THENLETF(N)=F(N)*6+K
 WARNING: Multiple GOSUB entry points
 Variable:C -> _
 Variable:C -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:C -> _
 NumericValue:9
 BinaryOperatorLess:<(_,_) -> ?
 Variable:N -> _
 Variable:F(_) -> _
 Variable:N -> _
 Variable:F(_) -> _
 NumericValue:6
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:K -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
215 FORI=0TO5:IFB(I)<>0THEN230
 WARNING: Multiple GOSUB entry points
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["NumericValue:5"]
 Variable:I -> _
 Variable:B(_) -> _
 NumericValue:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:230
220 NEXTI
 WARNING: Multiple GOSUB entry points
 Variable:I -> _
225 RETURN
 WARNING: Multiple GOSUB entry points
 
230 FORI=7TO12:IFB(I)<>0THENLETB=1:RETURN
 WARNING: Multiple GOSUB entry points
 control: Variable:I -> _
 start:   ["NumericValue:7"]
 end:     ["NumericValue:12"]
 Variable:I -> _
 Variable:B(_) -> _
 NumericValue:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 Variable:B -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
 
235 GOTO 220
 WARNING: Multiple GOSUB entry points
 LineNumber:220
500 PRINT:PRINT"   ";
 WARNING: Inconsistent GOSUB origins
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
 TextValue:"   "
 CarriageControl:;
505 FORI=12TO7STEP-1:GOSUB580
 WARNING: Multiple GOSUB entry points
 control: Variable:I -> _
 start:   ["NumericValue:12"]
 end:     ["NumericValue:7"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(_) -> =_"]
 LineNumber:580
510 NEXTI
 WARNING: Multiple GOSUB entry points
 Variable:I -> _
515 PRINT:LETI=13:GOSUB580
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
 Variable:I -> _
 NumericValue:13
 AssignmentOperator:= =_ -> _
 LineNumber:580
520 PRINT "","                ",B(6):PRINT "   ";
 WARNING: Multiple GOSUB entry points
 TextValue:""
 CarriageControl:,
 TextValue:"                "
 CarriageControl:,
 NumericValue:6
 Variable:B(_) -> _
 CarriageControl:NL
 TextValue:"   "
 CarriageControl:;
525 FORI=0TO5:GOSUB580
 WARNING: Multiple GOSUB entry points
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["NumericValue:5"]
 LineNumber:580
530 NEXTI
 WARNING: Multiple GOSUB entry points
 Variable:I -> _
535 PRINT:PRINT:RETURN
 WARNING: Multiple GOSUB entry points
 CarriageControl:NL
 CarriageControl:NL
 
580 IFB(I)<10THENPRINT" ";
 Variable:I -> _
 Variable:B(_) -> _
 NumericValue:10
 BinaryOperatorLess:<(_,_) -> ?
 TextValue:" "
 CarriageControl:;
585 PRINTB(I);:RETURN
 Variable:I -> _
 Variable:B(_) -> _
 CarriageControl:;
 
600 LETP=B(M):LETB(M)=0
 Variable:P -> _
 Variable:M -> _
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
 Variable:M -> _
 Variable:B(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
605 FORP=PTO1STEP-1:LETM=M+1:IFM>13THENLETM=M-14
 control: Variable:P -> _
 start:   ["Variable:P -> _"]
 end:     ["NumericValue:1"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(_) -> =_"]
 Variable:M -> _
 Variable:M -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:M -> _
 NumericValue:13
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:M -> _
 Variable:M -> _
 NumericValue:14
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
610 LETB(M)=B(M)+1:NEXTP
 Variable:M -> _
 Variable:B(_) -> _
 Variable:M -> _
 Variable:B(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:P -> _
615 IFB(M)=1THENIFM<>6THENIFM<>13THENIFB(12-M)<>0GOTO625
 WARNING: Line exceeds PRETTY width limit 72
 Variable:M -> _
 Variable:B(_) -> _
 NumericValue:1
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:M -> _
 NumericValue:6
 BinaryOperatorNotEqual:<>(_,_) -> ?
 Variable:M -> _
 NumericValue:13
 BinaryOperatorNotEqual:<>(_,_) -> ?
 NumericValue:12
 Variable:M -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:B(_) -> _
 NumericValue:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:625
620 RETURN
 
625 LETB(H)=B(H)+B(12-M)+1:LETB(M)=0:LETB(12-M)=0:RETURN
 WARNING: Line exceeds PRETTY width limit 72
 Variable:H -> _
 Variable:B(_) -> _
 Variable:H -> _
 Variable:B(_) -> _
 NumericValue:12
 Variable:M -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:B(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:M -> _
 Variable:B(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 NumericValue:12
 Variable:M -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:B(_) -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 
800 LETD=-99:LETH=13
 WARNING: GOSUB length exceeds limit 40
 Variable:D -> _
 NumericValue:99
 UnaryOperatorMinus:-(_) -> =_
 AssignmentOperator:= =_ -> _
 Variable:H -> _
 NumericValue:13
 AssignmentOperator:= =_ -> _
805 FORI=0TO13:LETG(I)=B(I):NEXTI
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["NumericValue:13"]
 Variable:I -> _
 Variable:G(_) -> _
 Variable:I -> _
 Variable:B(_) -> _
 AssignmentOperator:= _ -> _
 Variable:I -> _
810 FORJ=7TO12:IFB(J)=0THEN885
 control: Variable:J -> _
 start:   ["NumericValue:7"]
 end:     ["NumericValue:12"]
 Variable:J -> _
 Variable:B(_) -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:885
815 LETQ=0:LETM=J:GOSUB600
 Variable:Q -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
 Variable:M -> _
 Variable:J -> _
 AssignmentOperator:= _ -> _
 LineNumber:600
820 FORI=0TO5:IFB(I)=0GOTO845
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["NumericValue:5"]
 Variable:I -> _
 Variable:B(_) -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:845
825 LETL=B(I)+1:LETR=0
 Variable:L -> _
 Variable:I -> _
 Variable:B(_) -> _
 NumericValue:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:R -> _
 NumericValue:0
 AssignmentOperator:= =_ -> _
830 IFL>13THENLETL=L-14:LETR=1:GOTO830
 Variable:L -> _
 NumericValue:13
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:L -> _
 Variable:L -> _
 NumericValue:14
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:R -> _
 NumericValue:1
 AssignmentOperator:= =_ -> _
 LineNumber:830
835 IFB(L)=0THENIFL<>6THENIFL<>13THENLETR=B(12-L)+R
 Variable:L -> _
 Variable:B(_) -> _
 NumericValue:0
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:L -> _
 NumericValue:6
 BinaryOperatorNotEqual:<>(_,_) -> ?
 Variable:L -> _
 NumericValue:13
 BinaryOperatorNotEqual:<>(_,_) -> ?
 Variable:R -> _
 NumericValue:12
 Variable:L -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:B(_) -> _
 Variable:R -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
840 IFR<>QTHENLETQ=R 
 Variable:R -> _
 Variable:Q -> _
 BinaryOperatorNotEqual:<>(_,_) -> ?
 Variable:Q -> _
 Variable:R -> _
 AssignmentOperator:= _ -> _
845 NEXTI 
 Variable:I -> _
850 LETQ=B(13)-B(6)-Q:IFC>BGOTO875
 Variable:Q -> _
 NumericValue:13
 Variable:B(_) -> _
 NumericValue:6
 Variable:B(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:Q -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
 Variable:C -> _
 Variable:B -> _
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:875
855 LETK=J:IFK>6THENLETK=K-7
 Variable:K -> _
 Variable:J -> _
 AssignmentOperator:= _ -> _
 Variable:K -> _
 NumericValue:6
 BinaryOperatorGreater:>(_,_) -> ?
 Variable:K -> _
 Variable:K -> _
 NumericValue:7
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
860 FORI=0TON-1:IFF(N)*6+K=INT(F(I)/6^(7-C)+.1)THENLETQ=Q-2
 WARNING: Line exceeds PRETTY width limit 72
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["Variable:N -> _", "NumericValue:1", "BinaryOperatorMinus:-(_,_) -> _"]
 Variable:N -> _
 Variable:F(_) -> _
 NumericValue:6
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:K -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:I -> _
 Variable:F(_) -> _
 NumericValue:6
 NumericValue:7
 Variable:C -> _
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 NumericValue:.1
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorEqual:=(_,_) -> ?
 Variable:Q -> _
 Variable:Q -> _
 NumericValue:2
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
870 NEXTI
 Variable:I -> _
875 FOR I=0TO13:LETB(I)=G(I):NEXTI
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["NumericValue:13"]
 Variable:I -> _
 Variable:B(_) -> _
 Variable:I -> _
 Variable:G(_) -> _
 AssignmentOperator:= _ -> _
 Variable:I -> _
880 IFQ>=DTHENLETA=J:LETD=Q
 Variable:Q -> _
 Variable:D -> _
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 Variable:A -> _
 Variable:J -> _
 AssignmentOperator:= _ -> _
 Variable:D -> _
 Variable:Q -> _
 AssignmentOperator:= _ -> _
885 NEXTJ
 Variable:J -> _
890 LETM=A:PRINTCHR$(42+M);:GOTO200
 WARNING: Branch to line before GOSUB start
 Variable:M -> _
 Variable:A -> _
 AssignmentOperator:= _ -> _
 NumericValue:42
 Variable:M -> _
 BinaryOperatorPlus:+(_,_) -> _
 FunctionChr:CHR$(_) -> $
 CarriageControl:;
 LineNumber:200
900 FORI=0TON-1:PRINTB(I):NEXTI
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["Variable:N -> _", "NumericValue:1", "BinaryOperatorMinus:-(_,_) -> _"]
 Variable:I -> _
 Variable:B(_) -> _
 CarriageControl:NL
 Variable:I -> _
999 END
 

