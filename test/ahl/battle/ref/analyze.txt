Statistics:

Number of lines: 163
Number of valid statements: 160
Number of comments: 3
Number of executable statements: 159

Complexity:

Comment density: 0.019
Comprehension effort: 585
McCabe complexity: 45
Halstead complexity:
 length: 1299
 volume: 6362.294
 difficulty: 84.132
 effort: 535272.991
 language: 0.899
 intelligence: 75.623
 time: 495.623

(0 1) 10 REM -- BATTLE WRITTEN BY RAY WESTERGARD 10/70
  Origs: 
  Dests: 20:auto
(0 1) 20 REM COPYRIGHT 1971 BY THE REGENTS OF THE UNIV. OF CALIF,
  Origs: 10:auto
  Dests: 30:auto
(0 1) 30 REM PRODUCED AT THE LAWRENCE HALL OF SCIENCE, BERKELEY
  Origs: 20:auto
  Dests: 40:auto
(0 7) 40 DIM F[6, 6], H[6, 6], A[4], B[4], C[6], L[3]
  Origs: 30:auto
  Dests: 50:auto
(0 4) 50 MAT F = ZER
  Origs: 40:auto, 1620:goto
  Dests: 60:auto
(1 3) 60 FOR I = 1 TO 3
  Origs: 50:auto
  Dests: 70:fornext, 1000:fornext
(0 4) 70 N = 4 - I
  Origs: 60:fornext
  Dests: 80:auto
(1 3) 80 FOR J = 1 TO 2
  Origs: 70:auto
  Dests: 90:fornext, 990:fornext
(0 5) 90 A = INT(6 * RND(0)) + 1
  Origs: 80:fornext, 120:ifthen, 250:ifthen, 260:ifthen, 480:ifthen, 490:ifthen, 500:ifthen, 650:ifthen, 660:ifthen, 890:ifthen, 900:ifthen, 910:ifthen
  Dests: 100:auto
(0 5) 100 B = INT(6 * RND(0)) + 1
  Origs: 90:auto
  Dests: 110:auto
(0 5) 110 D = INT(4 * RND(0)) + 1
  Origs: 100:auto
  Dests: 120:auto
(1 5) 120 IF F[A, B] > 0 THEN 90
  Origs: 110:auto
  Dests: 90:ifthen, 130:auto
(0 3) 130 M = 0
  Origs: 120:auto
  Dests: 140:auto
(0 6) 140 GOTO D OF 150, 340, 550, 740
  Origs: 130:auto
  Dests: 150:goto, 340:goto, 550:goto, 740:goto
(0 3) 150 B[1] = B
  Origs: 140:goto
  Dests: 160:auto
(0 4) 160 B[2] = B[3] * 7
  Origs: 150:auto
  Dests: 170:auto
(1 3) 170 FOR K = 1 TO N
  Origs: 160:auto
  Dests: 180:fornext, 280:fornext
(1 4) 180 IF M > 1 THEN 240
  Origs: 170:fornext
  Dests: 190:auto, 240:ifthen
(1 4) 190 IF B[K] = 6 THEN 230
  Origs: 180:auto
  Dests: 200:auto, 230:ifthen
(1 4) 200 IF F[A, B[K] + 1] > 0 THEN 230
  Origs: 190:auto
  Dests: 210:auto, 230:ifthen
(0 4) 210 B[K + 1] = B[K] + 1
  Origs: 200:auto
  Dests: 220:auto
(0 2) 220 GOTO 280
  Origs: 210:auto
  Dests: 280:goto
(0 3) 230 M = 2
  Origs: 190:ifthen, 200:ifthen
  Dests: 240:auto
(0 5) 240 Z = ((B[1] MIN B[2]) MIN B[3])
  Origs: 180:ifthen, 230:auto
  Dests: 250:auto
(1 5) 250 IF Z < 1 THEN 90
  Origs: 240:auto
  Dests: 90:ifthen, 260:auto
(1 5) 260 IF F[A, Z - 1] > 0 THEN 90
  Origs: 250:auto
  Dests: 90:ifthen, 270:auto
(0 4) 270 B[K + 1] = Z - 1
  Origs: 260:auto
  Dests: 280:auto
(0 1) 280 NEXT K
  Origs: 170:fornext, 220:goto, 270:auto
  Dests: 290:auto
(0 7) 290 F[A, B] = 9 - 2 * I - J
  Origs: 280:auto
  Dests: 300:auto
(1 3) 300 FOR K = 1 TO N
  Origs: 290:auto
  Dests: 310:fornext, 320:fornext
(0 3) 310 F[A, B[K + 1]] = F[A, B]
  Origs: 300:fornext
  Dests: 320:auto
(0 1) 320 NEXT K
  Origs: 300:fornext, 310:auto
  Dests: 330:auto
(0 2) 330 GOTO 990
  Origs: 320:auto
  Dests: 990:goto
(0 3) 340 A[1] = A
  Origs: 140:goto
  Dests: 350:auto
(0 3) 350 B[1] = B
  Origs: 340:auto
  Dests: 360:auto
(0 3) 360 A[2], A[3], B[2], B[3] = 0
  Origs: 350:auto
  Dests: 370:auto
(1 3) 370 FOR K = 1 TO N
  Origs: 360:auto
  Dests: 380:fornext, 530:fornext
(1 4) 380 IF M > 1 THEN 460
  Origs: 370:fornext
  Dests: 390:auto, 460:ifthen
(1 7) 390 IF A[K] = 1 OR B[K] = 1 THEN 450
  Origs: 380:auto
  Dests: 400:auto, 450:ifthen
(1 4) 400 IF F[A[K] - 1, B[K] - 1] > 0 THEN 450
  Origs: 390:auto
  Dests: 410:auto, 450:ifthen
(1 7) 410 IF F[A[K] - 1, B[K]] > 0 AND F[A[K] - 1, B[K]] = F[A[K], B[K] - 1] THEN 450
  Origs: 400:auto
  Dests: 420:auto, 450:ifthen
(0 4) 420 A[K + 1] = A[K] - 1
  Origs: 410:auto
  Dests: 430:auto
(0 4) 430 B[K + 1] = B[K] - 1
  Origs: 420:auto
  Dests: 440:auto
(0 2) 440 GOTO 530
  Origs: 430:auto
  Dests: 530:goto
(0 3) 450 M = 2
  Origs: 390:ifthen, 400:ifthen, 410:ifthen
  Dests: 460:auto
(0 5) 460 Z1 = ((A[1] MAX A[2]) MAX A[3])
  Origs: 380:ifthen, 450:auto
  Dests: 470:auto
(0 5) 470 Z2 = ((B[1] MAX B[2]) MAX B[3])
  Origs: 460:auto
  Dests: 480:auto
(1 8) 480 IF Z1 = 6 OR Z2 = 6 THEN 90
  Origs: 470:auto
  Dests: 90:ifthen, 490:auto
(1 5) 490 IF F[Z1 + 1, Z2 + 1] > 0 THEN 90
  Origs: 480:auto
  Dests: 90:ifthen, 500:auto
(1 8) 500 IF F[Z1, Z2 + 1] > 0 AND F[Z1, Z2 + 1] = F[Z1 + 1, Z2] THEN 90
  Origs: 490:auto
  Dests: 90:ifthen, 510:auto
(0 4) 510 A[K + 1] = Z1 + 1
  Origs: 500:auto
  Dests: 520:auto
(0 4) 520 B[K + 1] = Z2 + 1
  Origs: 510:auto
  Dests: 530:auto
(0 1) 530 NEXT K
  Origs: 370:fornext, 440:goto, 520:auto
  Dests: 540:auto
(0 2) 540 GOTO 950
  Origs: 530:auto
  Dests: 950:goto
(0 3) 550 A[1] = A
  Origs: 140:goto
  Dests: 560:auto
(0 3) 560 A[2], A[3] = 7
  Origs: 550:auto
  Dests: 570:auto
(1 3) 570 FOR K = 1 TO N
  Origs: 560:auto
  Dests: 580:fornext, 680:fornext
(1 4) 580 IF M > 1 THEN 640
  Origs: 570:fornext
  Dests: 590:auto, 640:ifthen
(1 4) 590 IF A[K] = 6 THEN 630
  Origs: 580:auto
  Dests: 600:auto, 630:ifthen
(1 4) 600 IF F[A[K] + 1, B] > 0 THEN 630
  Origs: 590:auto
  Dests: 610:auto, 630:ifthen
(0 4) 610 A[K + 1] = A[K] + 1
  Origs: 600:auto
  Dests: 620:auto
(0 2) 620 GOTO 680
  Origs: 610:auto
  Dests: 680:goto
(0 3) 630 M = 2
  Origs: 590:ifthen, 600:ifthen
  Dests: 640:auto
(0 5) 640 Z = ((A[1] MIN A[2]) MIN A[3])
  Origs: 580:ifthen, 630:auto
  Dests: 650:auto
(1 5) 650 IF Z = 1 THEN 90
  Origs: 640:auto
  Dests: 90:ifthen, 660:auto
(1 5) 660 IF F[Z - 1, B] > 0 THEN 90
  Origs: 650:auto
  Dests: 90:ifthen, 670:auto
(0 4) 670 A[K + 1] = Z - 1
  Origs: 660:auto
  Dests: 680:auto
(0 1) 680 NEXT K
  Origs: 570:fornext, 620:goto, 670:auto
  Dests: 690:auto
(0 7) 690 F[A, B] = 9 - 2 * I - J
  Origs: 680:auto
  Dests: 700:auto
(1 3) 700 FOR K = 1 TO N
  Origs: 690:auto
  Dests: 710:fornext, 720:fornext
(0 3) 710 F[A[K + 1], B] = F[A, B]
  Origs: 700:fornext
  Dests: 720:auto
(0 1) 720 NEXT K
  Origs: 700:fornext, 710:auto
  Dests: 730:auto
(0 2) 730 GOTO 990
  Origs: 720:auto
  Dests: 990:goto
(0 3) 740 A[1] = A
  Origs: 140:goto
  Dests: 750:auto
(0 3) 750 B[1] = B
  Origs: 740:auto
  Dests: 760:auto
(0 3) 760 A[2], A[3] = 7
  Origs: 750:auto
  Dests: 770:auto
(0 3) 770 B[2], B[3] = 0
  Origs: 760:auto
  Dests: 780:auto
(1 3) 780 FOR K = 1 TO N
  Origs: 770:auto
  Dests: 790:fornext, 940:fornext
(1 4) 790 IF M > 1 THEN 870
  Origs: 780:fornext
  Dests: 800:auto, 870:ifthen
(1 7) 800 IF A[K] = 6 OR B[K] = 1 THEN 860
  Origs: 790:auto
  Dests: 810:auto, 860:ifthen
(1 4) 810 IF F[A[K] + 1, B[K] - 1] > 0 THEN 860
  Origs: 800:auto
  Dests: 820:auto, 860:ifthen
(1 7) 820 IF F[A[K] + 1, B[K]] > 0 AND F[A[K] + 1, B[K]] = F[A[K], B[K] - 1] THEN 860
  Origs: 810:auto
  Dests: 830:auto, 860:ifthen
(0 4) 830 A[K + 1] = A[K] + 1
  Origs: 820:auto
  Dests: 840:auto
(0 4) 840 B[K + 1] = B[K] - 1
  Origs: 830:auto
  Dests: 850:auto
(0 2) 850 GOTO 940
  Origs: 840:auto
  Dests: 940:goto
(0 3) 860 M = 2
  Origs: 800:ifthen, 810:ifthen, 820:ifthen
  Dests: 870:auto
(0 5) 870 Z1 = ((A[1] MIN A[2]) MIN A[3])
  Origs: 790:ifthen, 860:auto
  Dests: 880:auto
(0 5) 880 Z2 = ((B[1] MAX B[2]) MAX B[3])
  Origs: 870:auto
  Dests: 890:auto
(1 8) 890 IF Z1 = 1 OR Z2 = 6 THEN 90
  Origs: 880:auto
  Dests: 90:ifthen, 900:auto
(1 5) 900 IF F[Z1 - 1, Z2 + 1] > 0 THEN 90
  Origs: 890:auto
  Dests: 90:ifthen, 910:auto
(1 8) 910 IF F[Z1, Z2 + 1] > 0 AND F[Z1, Z2 + 1] = F[Z1 - 1, Z2] THEN 90
  Origs: 900:auto
  Dests: 90:ifthen, 920:auto
(0 4) 920 A[K + 1] = Z1 - 1
  Origs: 910:auto
  Dests: 930:auto
(0 4) 930 B[K + 1] = Z2 + 1
  Origs: 920:auto
  Dests: 940:auto
(0 1) 940 NEXT K
  Origs: 780:fornext, 850:goto, 930:auto
  Dests: 950:auto
(0 7) 950 F[A, B] = 9 - 2 * I - J
  Origs: 540:goto, 940:auto
  Dests: 960:auto
(1 3) 960 FOR K = 1 TO N
  Origs: 950:auto
  Dests: 970:fornext, 980:fornext
(0 3) 970 F[A[K + 1], B[K + 1]] = F[A, B]
  Origs: 960:fornext
  Dests: 980:auto
(0 1) 980 NEXT K
  Origs: 960:fornext, 970:auto
  Dests: 990:auto
(0 1) 990 NEXT J
  Origs: 80:fornext, 330:goto, 730:goto, 980:auto
  Dests: 1000:auto
(0 1) 1000 NEXT I
  Origs: 60:fornext, 990:auto
  Dests: 1010:auto
(0 2) 1010 PRINT
  Origs: 1000:auto
  Dests: 1020:auto
(0 2) 1020 PRINT "THE FOLLOWING CODE OF THE BAD GUYS' FLEET DISPOSITION"
  Origs: 1010:auto
  Dests: 1030:auto
(0 2) 1030 PRINT "HAS BEEN CAPTURED BUT NOT DE-CODED."
  Origs: 1020:auto
  Dests: 1040:auto
(0 2) 1040 PRINT
  Origs: 1030:auto
  Dests: 1050:auto
(0 4) 1050 MAT H = TRN(F)
  Origs: 1040:auto
  Dests: 1060:auto
(0 2) 1060 MAT PRINT H
  Origs: 1050:auto
  Dests: 1070:auto
(0 2) 1070 PRINT
  Origs: 1060:auto
  Dests: 1080:auto
(0 2) 1080 PRINT "DE-CODE IT AND USE IT IF YOU CAN"
  Origs: 1070:auto
  Dests: 1090:auto
(0 2) 1090 PRINT "BUT KEEP THE DE-CODING METHOD A SECRET."
  Origs: 1080:auto
  Dests: 1100:auto
(0 2) 1100 PRINT
  Origs: 1090:auto
  Dests: 1110:auto
(0 4) 1110 MAT H = ZER
  Origs: 1100:auto
  Dests: 1120:auto
(0 4) 1120 MAT L = ZER
  Origs: 1110:auto
  Dests: 1130:auto
(0 3) 1130 C[1], C[2] = 2
  Origs: 1120:auto
  Dests: 1140:auto
(0 3) 1140 C[3], C[4] = 1
  Origs: 1130:auto
  Dests: 1150:auto
(0 3) 1150 C[5], C[6] = 0
  Origs: 1140:auto
  Dests: 1160:auto
(0 3) 1160 S, H = 0
  Origs: 1150:auto
  Dests: 1170:auto
(0 2) 1170 PRINT "START GAME"
  Origs: 1160:auto
  Dests: 1180:auto
(2 3) 1180 INPUT X, Y
  Origs: 1170:auto, 1220:goto, 1280:goto, 1330:goto, 1410:goto, 1460:goto, 1530:ifthen
  Dests: 1190:auto
(1 12) 1190 IF X < 1 OR X > 6 OR INT(X) # ABS(X) THEN 1210
  Origs: 1180:auto
  Dests: 1200:auto, 1210:ifthen
(1 12) 1200 IF Y > 0 AND Y < 7 AND INT(Y) = ABS(Y) THEN 1230
  Origs: 1190:auto
  Dests: 1210:auto, 1230:ifthen
(0 2) 1210 PRINT "INVALID INPUT, TRY AGAIN."
  Origs: 1190:ifthen, 1200:auto
  Dests: 1220:auto
(0 3) 1220 GOTO 1180
  Origs: 1210:auto
  Dests: 1180:goto
(0 4) 1230 R = 7 - Y
  Origs: 1200:ifthen
  Dests: 1240:auto
(0 3) 1240 C = X
  Origs: 1230:auto
  Dests: 1250:auto
(1 4) 1250 IF F[R, C] > 0 THEN 1290
  Origs: 1240:auto
  Dests: 1260:auto, 1290:ifthen
(0 4) 1260 S = S + 1
  Origs: 1250:auto
  Dests: 1270:auto
(0 2) 1270 PRINT "SPLASH! TRY AGAIN."
  Origs: 1260:auto
  Dests: 1280:auto
(0 3) 1280 GOTO 1180
  Origs: 1270:auto
  Dests: 1180:goto
(1 4) 1290 IF C[F[R, C]] < 4 THEN 1340
  Origs: 1250:ifthen
  Dests: 1300:auto, 1340:ifthen
(0 2) 1300 PRINT "THERE USED TO BE A SHIP AT THAT POINT, BUT YOU SUNK IT."
  Origs: 1290:auto
  Dests: 1310:auto
(0 2) 1310 PRINT "SPLASH! TRY AGAIN."
  Origs: 1300:auto
  Dests: 1320:auto
(0 4) 1320 S = S + 1
  Origs: 1310:auto
  Dests: 1330:auto
(0 3) 1330 GOTO 1180
  Origs: 1320:auto
  Dests: 1180:goto
(1 4) 1340 IF H[R, C] > 0 THEN 1420
  Origs: 1290:ifthen
  Dests: 1350:auto, 1420:ifthen
(0 4) 1350 H = H + 1
  Origs: 1340:auto
  Dests: 1360:auto
(0 3) 1360 H[R, C] = F[R, C]
  Origs: 1350:auto
  Dests: 1370:auto
(0 3) 1370 PRINT "A DIRECT HIT ON SHIP NUMBER"; F[R, C]
  Origs: 1360:auto
  Dests: 1380:auto
(0 4) 1380 C[F[R, C]] = C[F[R, C]] + 1
  Origs: 1370:auto
  Dests: 1390:auto
(1 4) 1390 IF C[F[R, C]] >= 4 THEN 1470
  Origs: 1380:auto
  Dests: 1400:auto, 1470:ifthen
(0 2) 1400 PRINT "TRY AGAIN."
  Origs: 1390:auto
  Dests: 1410:auto
(0 3) 1410 GOTO 1180
  Origs: 1400:auto
  Dests: 1180:goto
(0 3) 1420 PRINT "YOU HAVE ALREADY PUT A HOLE IN SHIP NUMBER"; F[R, C];
  Origs: 1340:ifthen
  Dests: 1430:auto
(0 2) 1430 PRINT "AT THAT POINT."
  Origs: 1420:auto
  Dests: 1440:auto
(0 2) 1440 PRINT "SPLASH! TRY AGAIN."
  Origs: 1430:auto
  Dests: 1450:auto
(0 4) 1450 S = S + 1
  Origs: 1440:auto
  Dests: 1460:auto
(0 3) 1460 GOTO 1180
  Origs: 1450:auto
  Dests: 1180:goto
(0 4) 1470 L[INT((F[R, C] - 1) / 2) + 1] = L[INT((F[R, C] - 1) / 2) + 1] + 1
  Origs: 1390:ifthen
  Dests: 1480:auto
(0 2) 1480 PRINT "AND YOU SUNK IT, HURRAH FOR THE GOOD GUYS."
  Origs: 1470:auto
  Dests: 1490:auto
(0 2) 1490 PRINT "SO FAR THE BAD GUYS HAVE LOST"
  Origs: 1480:auto
  Dests: 1500:auto
(0 5) 1500 PRINT L[1]; "DESTROYER(S), "; L[2]; "CRUISER (S) , AND ";
  Origs: 1490:auto
  Dests: 1510:auto
(0 3) 1510 PRINT L[3]; "AIRCRAFT CARRIER(S)."
  Origs: 1500:auto
  Dests: 1520:auto
(0 4) 1520 PRINT "YOUR CURRENT SPLASH/HIT RATIO IS"; S / H
  Origs: 1510:auto
  Dests: 1530:auto
(1 7) 1530 IF (L[1] + L[2] + L[3]) < 6 THEN 1180
  Origs: 1520:auto
  Dests: 1180:ifthen, 1540:auto
(0 2) 1540 PRINT
  Origs: 1530:auto
  Dests: 1550:auto
(0 2) 1550 PRINT "YOU HAVE TOTALLY WIPED OUT THE BAD GUYS' FLEET"
  Origs: 1540:auto
  Dests: 1560:auto
(0 4) 1560 PRINT "WITH A FINAL SPLASH/HIT RATIO OF"; S / H
  Origs: 1550:auto
  Dests: 1570:auto
(1 5) 1570 IF S / H > 0 THEN 1590
  Origs: 1560:auto
  Dests: 1580:auto, 1590:ifthen
(0 2) 1580 PRINT "CONGRATULATIONS  A DIRECT HIT EVERY TIME."
  Origs: 1570:auto
  Dests: 1590:auto
(0 2) 1590 PRINT
  Origs: 1570:ifthen, 1580:auto
  Dests: 1600:auto
(0 2) 1600 PRINT "*******************"
  Origs: 1590:auto
  Dests: 1610:auto
(0 2) 1610 PRINT
  Origs: 1600:auto
  Dests: 1620:auto
(0 3) 1620 GOTO 50
  Origs: 1610:auto
  Dests: 50:goto
(0 1) 1630 END
  Origs: 
  Dests: 

Unreachable code:

All executable lines are reachable.

